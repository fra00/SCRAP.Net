### YamlMime:ManagedReference
items:
- uid: MainRobot.Robot.Device.Lidar.LidarUtility
  commentId: T:MainRobot.Robot.Device.Lidar.LidarUtility
  id: LidarUtility
  parent: MainRobot.Robot.Device.Lidar
  children:
  - MainRobot.Robot.Device.Lidar.LidarUtility.AutoPostiionFromLidar(System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}},System.Func{MainRobot.Common.RPoint,System.Int32,System.Boolean})
  - MainRobot.Robot.Device.Lidar.LidarUtility.CalcolaRetta(MainRobot.Common.RPoint,MainRobot.Common.RPoint)
  - MainRobot.Robot.Device.Lidar.LidarUtility.CalculateLineAngle(System.Nullable{System.Double})
  - MainRobot.Robot.Device.Lidar.LidarUtility.DistanceToPoints(MainRobot.Common.RPoint,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}})
  - MainRobot.Robot.Device.Lidar.LidarUtility.GroupPointsByLine(System.Collections.Generic.IEnumerable{MainRobot.Common.RPoint})
  langs:
  - csharp
  - vb
  name: LidarUtility
  nameWithType: LidarUtility
  fullName: MainRobot.Robot.Device.Lidar.LidarUtility
  type: Class
  source:
    remote:
      path: Robot/Device/Lidar/LidarUtility.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: LidarUtility
    path: Robot/Device/Lidar/LidarUtility.cs
    startLine: 18
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Device.Lidar
  syntax:
    content: public static class LidarUtility
    content.vb: Public Module LidarUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MainRobot.Robot.Device.Lidar.LidarUtility.CalcolaRetta(MainRobot.Common.RPoint,MainRobot.Common.RPoint)
  commentId: M:MainRobot.Robot.Device.Lidar.LidarUtility.CalcolaRetta(MainRobot.Common.RPoint,MainRobot.Common.RPoint)
  id: CalcolaRetta(MainRobot.Common.RPoint,MainRobot.Common.RPoint)
  parent: MainRobot.Robot.Device.Lidar.LidarUtility
  langs:
  - csharp
  - vb
  name: CalcolaRetta(RPoint, RPoint)
  nameWithType: LidarUtility.CalcolaRetta(RPoint, RPoint)
  fullName: MainRobot.Robot.Device.Lidar.LidarUtility.CalcolaRetta(MainRobot.Common.RPoint, MainRobot.Common.RPoint)
  type: Method
  source:
    remote:
      path: Robot/Device/Lidar/LidarUtility.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: CalcolaRetta
    path: Robot/Device/Lidar/LidarUtility.cs
    startLine: 20
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Device.Lidar
  syntax:
    content: public static (double pendenza, double intercetta)? CalcolaRetta(RPoint punto1, RPoint punto2)
    parameters:
    - id: punto1
      type: MainRobot.Common.RPoint
    - id: punto2
      type: MainRobot.Common.RPoint
    return:
      type: System.Nullable{System.ValueTuple{System.Double,System.Double}}
    content.vb: Public Shared Function CalcolaRetta(punto1 As RPoint, punto2 As RPoint) As (pendenza As Double, intercetta As Double)?
  overload: MainRobot.Robot.Device.Lidar.LidarUtility.CalcolaRetta*
- uid: MainRobot.Robot.Device.Lidar.LidarUtility.DistanceToPoints(MainRobot.Common.RPoint,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}})
  commentId: M:MainRobot.Robot.Device.Lidar.LidarUtility.DistanceToPoints(MainRobot.Common.RPoint,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}})
  id: DistanceToPoints(MainRobot.Common.RPoint,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}})
  parent: MainRobot.Robot.Device.Lidar.LidarUtility
  langs:
  - csharp
  - vb
  name: DistanceToPoints(RPoint, IEnumerable<(int, float)>?)
  nameWithType: LidarUtility.DistanceToPoints(RPoint, IEnumerable<(int, float)>?)
  fullName: MainRobot.Robot.Device.Lidar.LidarUtility.DistanceToPoints(MainRobot.Common.RPoint, System.Collections.Generic.IEnumerable<(int, float)>?)
  type: Method
  source:
    remote:
      path: Robot/Device/Lidar/LidarUtility.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: DistanceToPoints
    path: Robot/Device/Lidar/LidarUtility.cs
    startLine: 37
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Device.Lidar
  syntax:
    content: public static IEnumerable<RPoint>? DistanceToPoints(RPoint current, IEnumerable<(int, float)>? distances)
    parameters:
    - id: current
      type: MainRobot.Common.RPoint
    - id: distances
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}}
    return:
      type: System.Collections.Generic.IEnumerable{MainRobot.Common.RPoint}
    content.vb: Public Shared Function DistanceToPoints(current As RPoint, distances As IEnumerable(Of (Integer, Single))) As IEnumerable(Of RPoint)
  overload: MainRobot.Robot.Device.Lidar.LidarUtility.DistanceToPoints*
  nameWithType.vb: LidarUtility.DistanceToPoints(RPoint, IEnumerable(Of (Integer, Single)))
  fullName.vb: MainRobot.Robot.Device.Lidar.LidarUtility.DistanceToPoints(MainRobot.Common.RPoint, System.Collections.Generic.IEnumerable(Of (Integer, Single)))
  name.vb: DistanceToPoints(RPoint, IEnumerable(Of (Integer, Single)))
- uid: MainRobot.Robot.Device.Lidar.LidarUtility.GroupPointsByLine(System.Collections.Generic.IEnumerable{MainRobot.Common.RPoint})
  commentId: M:MainRobot.Robot.Device.Lidar.LidarUtility.GroupPointsByLine(System.Collections.Generic.IEnumerable{MainRobot.Common.RPoint})
  id: GroupPointsByLine(System.Collections.Generic.IEnumerable{MainRobot.Common.RPoint})
  parent: MainRobot.Robot.Device.Lidar.LidarUtility
  langs:
  - csharp
  - vb
  name: GroupPointsByLine(IEnumerable<RPoint>)
  nameWithType: LidarUtility.GroupPointsByLine(IEnumerable<RPoint>)
  fullName: MainRobot.Robot.Device.Lidar.LidarUtility.GroupPointsByLine(System.Collections.Generic.IEnumerable<MainRobot.Common.RPoint>)
  type: Method
  source:
    remote:
      path: Robot/Device/Lidar/LidarUtility.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: GroupPointsByLine
    path: Robot/Device/Lidar/LidarUtility.cs
    startLine: 43
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Device.Lidar
  syntax:
    content: public static LinesInfo? GroupPointsByLine(IEnumerable<RPoint> points)
    parameters:
    - id: points
      type: System.Collections.Generic.IEnumerable{MainRobot.Common.RPoint}
    return:
      type: MainRobot.Robot.Device.Lidar.LinesInfo
    content.vb: Public Shared Function GroupPointsByLine(points As IEnumerable(Of RPoint)) As LinesInfo
  overload: MainRobot.Robot.Device.Lidar.LidarUtility.GroupPointsByLine*
  nameWithType.vb: LidarUtility.GroupPointsByLine(IEnumerable(Of RPoint))
  fullName.vb: MainRobot.Robot.Device.Lidar.LidarUtility.GroupPointsByLine(System.Collections.Generic.IEnumerable(Of MainRobot.Common.RPoint))
  name.vb: GroupPointsByLine(IEnumerable(Of RPoint))
- uid: MainRobot.Robot.Device.Lidar.LidarUtility.CalculateLineAngle(System.Nullable{System.Double})
  commentId: M:MainRobot.Robot.Device.Lidar.LidarUtility.CalculateLineAngle(System.Nullable{System.Double})
  id: CalculateLineAngle(System.Nullable{System.Double})
  parent: MainRobot.Robot.Device.Lidar.LidarUtility
  langs:
  - csharp
  - vb
  name: CalculateLineAngle(double?)
  nameWithType: LidarUtility.CalculateLineAngle(double?)
  fullName: MainRobot.Robot.Device.Lidar.LidarUtility.CalculateLineAngle(double?)
  type: Method
  source:
    remote:
      path: Robot/Device/Lidar/LidarUtility.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: CalculateLineAngle
    path: Robot/Device/Lidar/LidarUtility.cs
    startLine: 96
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Device.Lidar
  syntax:
    content: public static double? CalculateLineAngle(double? slope)
    parameters:
    - id: slope
      type: System.Nullable{System.Double}
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Shared Function CalculateLineAngle(slope As Double?) As Double?
  overload: MainRobot.Robot.Device.Lidar.LidarUtility.CalculateLineAngle*
  nameWithType.vb: LidarUtility.CalculateLineAngle(Double?)
  fullName.vb: MainRobot.Robot.Device.Lidar.LidarUtility.CalculateLineAngle(Double?)
  name.vb: CalculateLineAngle(Double?)
- uid: MainRobot.Robot.Device.Lidar.LidarUtility.AutoPostiionFromLidar(System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}},System.Func{MainRobot.Common.RPoint,System.Int32,System.Boolean})
  commentId: M:MainRobot.Robot.Device.Lidar.LidarUtility.AutoPostiionFromLidar(System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}},System.Func{MainRobot.Common.RPoint,System.Int32,System.Boolean})
  id: AutoPostiionFromLidar(System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}},System.Func{MainRobot.Common.RPoint,System.Int32,System.Boolean})
  parent: MainRobot.Robot.Device.Lidar.LidarUtility
  langs:
  - csharp
  - vb
  name: AutoPostiionFromLidar(IEnumerable<(int, float)>, Func<RPoint, int, bool>)
  nameWithType: LidarUtility.AutoPostiionFromLidar(IEnumerable<(int, float)>, Func<RPoint, int, bool>)
  fullName: MainRobot.Robot.Device.Lidar.LidarUtility.AutoPostiionFromLidar(System.Collections.Generic.IEnumerable<(int, float)>, System.Func<MainRobot.Common.RPoint, int, bool>)
  type: Method
  source:
    remote:
      path: Robot/Device/Lidar/LidarUtility.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: AutoPostiionFromLidar
    path: Robot/Device/Lidar/LidarUtility.cs
    startLine: 106
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Device.Lidar
  syntax:
    content: public static RPoint? AutoPostiionFromLidar(IEnumerable<(int, float)> distances, Func<RPoint, int, bool> isPointOnWall)
    parameters:
    - id: distances
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}}
    - id: isPointOnWall
      type: System.Func{MainRobot.Common.RPoint,System.Int32,System.Boolean}
    return:
      type: MainRobot.Common.RPoint
    content.vb: Public Shared Function AutoPostiionFromLidar(distances As IEnumerable(Of (Integer, Single)), isPointOnWall As Func(Of RPoint, Integer, Boolean)) As RPoint
  overload: MainRobot.Robot.Device.Lidar.LidarUtility.AutoPostiionFromLidar*
  nameWithType.vb: LidarUtility.AutoPostiionFromLidar(IEnumerable(Of (Integer, Single)), Func(Of RPoint, Integer, Boolean))
  fullName.vb: MainRobot.Robot.Device.Lidar.LidarUtility.AutoPostiionFromLidar(System.Collections.Generic.IEnumerable(Of (Integer, Single)), System.Func(Of MainRobot.Common.RPoint, Integer, Boolean))
  name.vb: AutoPostiionFromLidar(IEnumerable(Of (Integer, Single)), Func(Of RPoint, Integer, Boolean))
references:
- uid: MainRobot.Robot.Device.Lidar
  commentId: N:MainRobot.Robot.Device.Lidar
  href: MainRobot.html
  name: MainRobot.Robot.Device.Lidar
  nameWithType: MainRobot.Robot.Device.Lidar
  fullName: MainRobot.Robot.Device.Lidar
  spec.csharp:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.Device
    name: Device
    href: MainRobot.Robot.Device.html
  - name: .
  - uid: MainRobot.Robot.Device.Lidar
    name: Lidar
    href: MainRobot.Robot.Device.Lidar.html
  spec.vb:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.Device
    name: Device
    href: MainRobot.Robot.Device.html
  - name: .
  - uid: MainRobot.Robot.Device.Lidar
    name: Lidar
    href: MainRobot.Robot.Device.Lidar.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MainRobot.Robot.Device.Lidar.LidarUtility.CalcolaRetta*
  commentId: Overload:MainRobot.Robot.Device.Lidar.LidarUtility.CalcolaRetta
  href: MainRobot.Robot.Device.Lidar.LidarUtility.html#MainRobot_Robot_Device_Lidar_LidarUtility_CalcolaRetta_MainRobot_Common_RPoint_MainRobot_Common_RPoint_
  name: CalcolaRetta
  nameWithType: LidarUtility.CalcolaRetta
  fullName: MainRobot.Robot.Device.Lidar.LidarUtility.CalcolaRetta
- uid: MainRobot.Common.RPoint
  commentId: T:MainRobot.Common.RPoint
  parent: MainRobot.Common
  href: MainRobot.Common.RPoint.html
  name: RPoint
  nameWithType: RPoint
  fullName: MainRobot.Common.RPoint
- uid: System.Nullable{System.ValueTuple{System.Double,System.Double}}
  commentId: T:System.Nullable{System.ValueTuple{System.Double,System.Double}}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: (double pendenza, double intercetta)?
  nameWithType: (double pendenza, double intercetta)?
  fullName: (double pendenza, double intercetta)?
  nameWithType.vb: (pendenza As Double, intercetta As Double)?
  fullName.vb: (pendenza As Double, intercetta As Double)?
  name.vb: (pendenza As Double, intercetta As Double)?
  spec.csharp:
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.pendenza
    name: pendenza
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.pendenza
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.intercetta
    name: intercetta
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.intercetta
  - name: )
  - name: '?'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Double,System.Double}.pendenza
    name: pendenza
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.pendenza
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.intercetta
    name: intercetta
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.intercetta
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  - name: '?'
- uid: MainRobot.Common
  commentId: N:MainRobot.Common
  href: MainRobot.html
  name: MainRobot.Common
  nameWithType: MainRobot.Common
  fullName: MainRobot.Common
  spec.csharp:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Common
    name: Common
    href: MainRobot.Common.html
  spec.vb:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Common
    name: Common
    href: MainRobot.Common.html
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MainRobot.Robot.Device.Lidar.LidarUtility.DistanceToPoints*
  commentId: Overload:MainRobot.Robot.Device.Lidar.LidarUtility.DistanceToPoints
  href: MainRobot.Robot.Device.Lidar.LidarUtility.html#MainRobot_Robot_Device_Lidar_LidarUtility_DistanceToPoints_MainRobot_Common_RPoint_System_Collections_Generic_IEnumerable_System_ValueTuple_System_Int32_System_Single___
  name: DistanceToPoints
  nameWithType: LidarUtility.DistanceToPoints
  fullName: MainRobot.Robot.Device.Lidar.LidarUtility.DistanceToPoints
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(int, float)>
  nameWithType: IEnumerable<(int, float)>
  fullName: System.Collections.Generic.IEnumerable<(int, float)>
  nameWithType.vb: IEnumerable(Of (Integer, Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (Integer, Single))
  name.vb: IEnumerable(Of (Integer, Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{MainRobot.Common.RPoint}
  commentId: T:System.Collections.Generic.IEnumerable{MainRobot.Common.RPoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<RPoint>
  nameWithType: IEnumerable<RPoint>
  fullName: System.Collections.Generic.IEnumerable<MainRobot.Common.RPoint>
  nameWithType.vb: IEnumerable(Of RPoint)
  fullName.vb: System.Collections.Generic.IEnumerable(Of MainRobot.Common.RPoint)
  name.vb: IEnumerable(Of RPoint)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MainRobot.Common.RPoint
    name: RPoint
    href: MainRobot.Common.RPoint.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MainRobot.Common.RPoint
    name: RPoint
    href: MainRobot.Common.RPoint.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MainRobot.Robot.Device.Lidar.LidarUtility.GroupPointsByLine*
  commentId: Overload:MainRobot.Robot.Device.Lidar.LidarUtility.GroupPointsByLine
  href: MainRobot.Robot.Device.Lidar.LidarUtility.html#MainRobot_Robot_Device_Lidar_LidarUtility_GroupPointsByLine_System_Collections_Generic_IEnumerable_MainRobot_Common_RPoint__
  name: GroupPointsByLine
  nameWithType: LidarUtility.GroupPointsByLine
  fullName: MainRobot.Robot.Device.Lidar.LidarUtility.GroupPointsByLine
- uid: MainRobot.Robot.Device.Lidar.LinesInfo
  commentId: T:MainRobot.Robot.Device.Lidar.LinesInfo
  parent: MainRobot.Robot.Device.Lidar
  href: MainRobot.Robot.Device.Lidar.LinesInfo.html
  name: LinesInfo
  nameWithType: LinesInfo
  fullName: MainRobot.Robot.Device.Lidar.LinesInfo
- uid: MainRobot.Robot.Device.Lidar.LidarUtility.CalculateLineAngle*
  commentId: Overload:MainRobot.Robot.Device.Lidar.LidarUtility.CalculateLineAngle
  href: MainRobot.Robot.Device.Lidar.LidarUtility.html#MainRobot_Robot_Device_Lidar_LidarUtility_CalculateLineAngle_System_Nullable_System_Double__
  name: CalculateLineAngle
  nameWithType: LidarUtility.CalculateLineAngle
  fullName: MainRobot.Robot.Device.Lidar.LidarUtility.CalculateLineAngle
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double?
  nameWithType: double?
  fullName: double?
  nameWithType.vb: Double?
  fullName.vb: Double?
  name.vb: Double?
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '?'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '?'
- uid: MainRobot.Robot.Device.Lidar.LidarUtility.AutoPostiionFromLidar*
  commentId: Overload:MainRobot.Robot.Device.Lidar.LidarUtility.AutoPostiionFromLidar
  href: MainRobot.Robot.Device.Lidar.LidarUtility.html#MainRobot_Robot_Device_Lidar_LidarUtility_AutoPostiionFromLidar_System_Collections_Generic_IEnumerable_System_ValueTuple_System_Int32_System_Single___System_Func_MainRobot_Common_RPoint_System_Int32_System_Boolean__
  name: AutoPostiionFromLidar
  nameWithType: LidarUtility.AutoPostiionFromLidar
  fullName: MainRobot.Robot.Device.Lidar.LidarUtility.AutoPostiionFromLidar
- uid: System.Func{MainRobot.Common.RPoint,System.Int32,System.Boolean}
  commentId: T:System.Func{MainRobot.Common.RPoint,System.Int32,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<RPoint, int, bool>
  nameWithType: Func<RPoint, int, bool>
  fullName: System.Func<MainRobot.Common.RPoint, int, bool>
  nameWithType.vb: Func(Of RPoint, Integer, Boolean)
  fullName.vb: System.Func(Of MainRobot.Common.RPoint, Integer, Boolean)
  name.vb: Func(Of RPoint, Integer, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: MainRobot.Common.RPoint
    name: RPoint
    href: MainRobot.Common.RPoint.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: MainRobot.Common.RPoint
    name: RPoint
    href: MainRobot.Common.RPoint.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
