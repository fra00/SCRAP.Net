### YamlMime:ManagedReference
items:
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController
  commentId: T:MainRobot.Robot.ControllerWeb.NavigationWebController
  id: NavigationWebController
  parent: MainRobot.Robot.ControllerWeb
  children:
  - MainRobot.Robot.ControllerWeb.NavigationWebController.#ctor(MainRobot.Robot.Navigation.Interface.INavigation,MainRobot.Robot.Navigation.Interface.INavigationMover,MainRobot.Robot.Navigation.Interface.IMovement,MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall,MainRobot.Robot.ActionExec.IActionExec,MainRobot.TTS.ITextToSpeach)
  - MainRobot.Robot.ControllerWeb.NavigationWebController.AddWall(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.Bck(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.Fwd(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.GetObstacleInMap(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.Lft(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.NavigateTo(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.ReadObstacleFromLidar(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.ReadRawLidar(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.Recharge(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.RemoveWall(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.Rht(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.SentenceAction(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.SetPosition(System.Collections.Generic.Dictionary{System.String,System.Object})
  - MainRobot.Robot.ControllerWeb.NavigationWebController.Talk(System.Collections.Generic.Dictionary{System.String,System.Object})
  langs:
  - csharp
  - vb
  name: NavigationWebController
  nameWithType: NavigationWebController
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController
  type: Class
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: NavigationWebController
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 10
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  syntax:
    content: public class NavigationWebController
    content.vb: Public Class NavigationWebController
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.#ctor(MainRobot.Robot.Navigation.Interface.INavigation,MainRobot.Robot.Navigation.Interface.INavigationMover,MainRobot.Robot.Navigation.Interface.IMovement,MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall,MainRobot.Robot.ActionExec.IActionExec,MainRobot.TTS.ITextToSpeach)
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.#ctor(MainRobot.Robot.Navigation.Interface.INavigation,MainRobot.Robot.Navigation.Interface.INavigationMover,MainRobot.Robot.Navigation.Interface.IMovement,MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall,MainRobot.Robot.ActionExec.IActionExec,MainRobot.TTS.ITextToSpeach)
  id: '#ctor(MainRobot.Robot.Navigation.Interface.INavigation,MainRobot.Robot.Navigation.Interface.INavigationMover,MainRobot.Robot.Navigation.Interface.IMovement,MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall,MainRobot.Robot.ActionExec.IActionExec,MainRobot.TTS.ITextToSpeach)'
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: NavigationWebController(INavigation, INavigationMover, IMovement, IHelperInvisibleWall, IActionExec, ITextToSpeach)
  nameWithType: NavigationWebController.NavigationWebController(INavigation, INavigationMover, IMovement, IHelperInvisibleWall, IActionExec, ITextToSpeach)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.NavigationWebController(MainRobot.Robot.Navigation.Interface.INavigation, MainRobot.Robot.Navigation.Interface.INavigationMover, MainRobot.Robot.Navigation.Interface.IMovement, MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall, MainRobot.Robot.ActionExec.IActionExec, MainRobot.TTS.ITextToSpeach)
  type: Constructor
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: .ctor
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 19
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  syntax:
    content: public NavigationWebController(INavigation navigation, INavigationMover navigationMover, IMovement movement, IHelperInvisibleWall invisibleWall, IActionExec actionExec, ITextToSpeach tts)
    parameters:
    - id: navigation
      type: MainRobot.Robot.Navigation.Interface.INavigation
    - id: navigationMover
      type: MainRobot.Robot.Navigation.Interface.INavigationMover
    - id: movement
      type: MainRobot.Robot.Navigation.Interface.IMovement
    - id: invisibleWall
      type: MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall
    - id: actionExec
      type: MainRobot.Robot.ActionExec.IActionExec
    - id: tts
      type: MainRobot.TTS.ITextToSpeach
    content.vb: Public Sub New(navigation As INavigation, navigationMover As INavigationMover, movement As IMovement, invisibleWall As IHelperInvisibleWall, actionExec As IActionExec, tts As ITextToSpeach)
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.#ctor*
  nameWithType.vb: NavigationWebController.New(INavigation, INavigationMover, IMovement, IHelperInvisibleWall, IActionExec, ITextToSpeach)
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.New(MainRobot.Robot.Navigation.Interface.INavigation, MainRobot.Robot.Navigation.Interface.INavigationMover, MainRobot.Robot.Navigation.Interface.IMovement, MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall, MainRobot.Robot.ActionExec.IActionExec, MainRobot.TTS.ITextToSpeach)
  name.vb: New(INavigation, INavigationMover, IMovement, IHelperInvisibleWall, IActionExec, ITextToSpeach)
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.NavigateTo(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.NavigateTo(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: NavigateTo(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: NavigateTo(Dictionary<string, object>)
  nameWithType: NavigationWebController.NavigateTo(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.NavigateTo(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: NavigateTo
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 43
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  summary: Navigate to point
  example: []
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object NavigateTo(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: >-
        int x,

        int y
    return:
      type: System.Object
      description: ''
    content.vb: >-
      <HttpMethod("GET")>

      Public Function NavigateTo(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.NavigateTo*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.NavigateTo(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.NavigateTo(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: NavigateTo(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.SetPosition(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.SetPosition(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: SetPosition(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: SetPosition(Dictionary<string, object>)
  nameWithType: NavigationWebController.SetPosition(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.SetPosition(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: SetPosition
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 63
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  summary: set position of robot
  example: []
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object SetPosition(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: >-
        int x,

        int y
    return:
      type: System.Object
      description: ''
    content.vb: >-
      <HttpMethod("GET")>

      Public Function SetPosition(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.SetPosition*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.SetPosition(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.SetPosition(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: SetPosition(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.AddWall(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.AddWall(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: AddWall(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: AddWall(Dictionary<string, object>)
  nameWithType: NavigationWebController.AddWall(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.AddWall(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: AddWall
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 83
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  summary: Add wall to point
  example: []
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object AddWall(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: >-
        int x,

        int y
    return:
      type: System.Object
      description: ''
    content.vb: >-
      <HttpMethod("GET")>

      Public Function AddWall(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.AddWall*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.AddWall(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.AddWall(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: AddWall(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.RemoveWall(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.RemoveWall(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: RemoveWall(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: RemoveWall(Dictionary<string, object>)
  nameWithType: NavigationWebController.RemoveWall(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.RemoveWall(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: RemoveWall
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 104
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  summary: Remove wall at point
  example: []
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object RemoveWall(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: >-
        int x,

        int y
    return:
      type: System.Object
      description: ''
    content.vb: >-
      <HttpMethod("GET")>

      Public Function RemoveWall(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.RemoveWall*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.RemoveWall(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.RemoveWall(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: RemoveWall(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.Recharge(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.Recharge(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: Recharge(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: Recharge(Dictionary<string, object>)
  nameWithType: NavigationWebController.Recharge(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.Recharge(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: Recharge
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 123
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  summary: novigate to recharge position
  example: []
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object Recharge(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: >-
      <HttpMethod("GET")>

      Public Function Recharge(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.Recharge*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.Recharge(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.Recharge(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: Recharge(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.ReadObstacleFromLidar(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.ReadObstacleFromLidar(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: ReadObstacleFromLidar(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: ReadObstacleFromLidar(Dictionary<string, object>)
  nameWithType: NavigationWebController.ReadObstacleFromLidar(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.ReadObstacleFromLidar(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: ReadObstacleFromLidar
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 134
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object ReadObstacleFromLidar(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Object
    content.vb: >-
      <HttpMethod("GET")>

      Public Function ReadObstacleFromLidar(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.ReadObstacleFromLidar*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.ReadObstacleFromLidar(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.ReadObstacleFromLidar(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: ReadObstacleFromLidar(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.ReadRawLidar(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.ReadRawLidar(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: ReadRawLidar(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: ReadRawLidar(Dictionary<string, object>)
  nameWithType: NavigationWebController.ReadRawLidar(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.ReadRawLidar(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: ReadRawLidar
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 143
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object ReadRawLidar(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Object
    content.vb: >-
      <HttpMethod("GET")>

      Public Function ReadRawLidar(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.ReadRawLidar*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.ReadRawLidar(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.ReadRawLidar(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: ReadRawLidar(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.Fwd(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.Fwd(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: Fwd(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: Fwd(Dictionary<string, object>)
  nameWithType: NavigationWebController.Fwd(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.Fwd(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: Fwd
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 152
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object Fwd(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Object
    content.vb: >-
      <HttpMethod("GET")>

      Public Function Fwd(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.Fwd*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.Fwd(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.Fwd(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: Fwd(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.Bck(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.Bck(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: Bck(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: Bck(Dictionary<string, object>)
  nameWithType: NavigationWebController.Bck(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.Bck(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: Bck
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 164
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object Bck(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Object
    content.vb: >-
      <HttpMethod("GET")>

      Public Function Bck(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.Bck*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.Bck(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.Bck(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: Bck(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.Lft(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.Lft(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: Lft(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: Lft(Dictionary<string, object>)
  nameWithType: NavigationWebController.Lft(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.Lft(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: Lft
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 176
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object Lft(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Object
    content.vb: >-
      <HttpMethod("GET")>

      Public Function Lft(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.Lft*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.Lft(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.Lft(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: Lft(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.Rht(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.Rht(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: Rht(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: Rht(Dictionary<string, object>)
  nameWithType: NavigationWebController.Rht(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.Rht(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: Rht
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 189
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object Rht(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Object
    content.vb: >-
      <HttpMethod("GET")>

      Public Function Rht(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.Rht*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.Rht(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.Rht(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: Rht(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.GetObstacleInMap(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.GetObstacleInMap(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: GetObstacleInMap(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: GetObstacleInMap(Dictionary<string, object>)
  nameWithType: NavigationWebController.GetObstacleInMap(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.GetObstacleInMap(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: GetObstacleInMap
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 201
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object GetObstacleInMap(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Object
    content.vb: >-
      <HttpMethod("GET")>

      Public Function GetObstacleInMap(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.GetObstacleInMap*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.GetObstacleInMap(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.GetObstacleInMap(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: GetObstacleInMap(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.SentenceAction(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.SentenceAction(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: SentenceAction(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: SentenceAction(Dictionary<string, object>)
  nameWithType: NavigationWebController.SentenceAction(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.SentenceAction(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: SentenceAction
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 210
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object SentenceAction(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Object
    content.vb: >-
      <HttpMethod("GET")>

      Public Function SentenceAction(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.SentenceAction*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.SentenceAction(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.SentenceAction(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: SentenceAction(Dictionary(Of String, Object))
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.Talk(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:MainRobot.Robot.ControllerWeb.NavigationWebController.Talk(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: Talk(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: MainRobot.Robot.ControllerWeb.NavigationWebController
  langs:
  - csharp
  - vb
  name: Talk(Dictionary<string, object>)
  nameWithType: NavigationWebController.Talk(Dictionary<string, object>)
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.Talk(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: Robot/ControllerWeb/NavigationWeb.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: Talk
    path: Robot/ControllerWeb/NavigationWeb.cs
    startLine: 221
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.ControllerWeb
  syntax:
    content: >-
      [HttpMethod("GET")]

      public object Talk(Dictionary<string, object> data)
    parameters:
    - id: data
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Object
    content.vb: >-
      <HttpMethod("GET")>

      Public Function Talk(data As Dictionary(Of String, Object)) As Object
  overload: MainRobot.Robot.ControllerWeb.NavigationWebController.Talk*
  attributes:
  - type: MainRobot.Http.HttpMethodAttribute
    ctor: MainRobot.Http.HttpMethodAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GET
  nameWithType.vb: NavigationWebController.Talk(Dictionary(Of String, Object))
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.Talk(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: Talk(Dictionary(Of String, Object))
references:
- uid: MainRobot.Robot.ControllerWeb
  commentId: N:MainRobot.Robot.ControllerWeb
  href: MainRobot.html
  name: MainRobot.Robot.ControllerWeb
  nameWithType: MainRobot.Robot.ControllerWeb
  fullName: MainRobot.Robot.ControllerWeb
  spec.csharp:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.ControllerWeb
    name: ControllerWeb
    href: MainRobot.Robot.ControllerWeb.html
  spec.vb:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.ControllerWeb
    name: ControllerWeb
    href: MainRobot.Robot.ControllerWeb.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.#ctor*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.#ctor
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController__ctor_MainRobot_Robot_Navigation_Interface_INavigation_MainRobot_Robot_Navigation_Interface_INavigationMover_MainRobot_Robot_Navigation_Interface_IMovement_MainRobot_Robot_Navigation_Helpers_IHelperInvisibleWall_MainRobot_Robot_ActionExec_IActionExec_MainRobot_TTS_ITextToSpeach_
  name: NavigationWebController
  nameWithType: NavigationWebController.NavigationWebController
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.NavigationWebController
  nameWithType.vb: NavigationWebController.New
  fullName.vb: MainRobot.Robot.ControllerWeb.NavigationWebController.New
  name.vb: New
- uid: MainRobot.Robot.Navigation.Interface.INavigation
  commentId: T:MainRobot.Robot.Navigation.Interface.INavigation
  parent: MainRobot.Robot.Navigation.Interface
  href: MainRobot.Robot.Navigation.Interface.INavigation.html
  name: INavigation
  nameWithType: INavigation
  fullName: MainRobot.Robot.Navigation.Interface.INavigation
- uid: MainRobot.Robot.Navigation.Interface.INavigationMover
  commentId: T:MainRobot.Robot.Navigation.Interface.INavigationMover
  parent: MainRobot.Robot.Navigation.Interface
  href: MainRobot.Robot.Navigation.Interface.INavigationMover.html
  name: INavigationMover
  nameWithType: INavigationMover
  fullName: MainRobot.Robot.Navigation.Interface.INavigationMover
- uid: MainRobot.Robot.Navigation.Interface.IMovement
  commentId: T:MainRobot.Robot.Navigation.Interface.IMovement
  parent: MainRobot.Robot.Navigation.Interface
  href: MainRobot.Robot.Navigation.Interface.IMovement.html
  name: IMovement
  nameWithType: IMovement
  fullName: MainRobot.Robot.Navigation.Interface.IMovement
- uid: MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall
  commentId: T:MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall
  parent: MainRobot.Robot.Navigation.Helpers
  href: MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall.html
  name: IHelperInvisibleWall
  nameWithType: IHelperInvisibleWall
  fullName: MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall
- uid: MainRobot.Robot.ActionExec.IActionExec
  commentId: T:MainRobot.Robot.ActionExec.IActionExec
  parent: MainRobot.Robot.ActionExec
  href: MainRobot.Robot.ActionExec.IActionExec.html
  name: IActionExec
  nameWithType: IActionExec
  fullName: MainRobot.Robot.ActionExec.IActionExec
- uid: MainRobot.TTS.ITextToSpeach
  commentId: T:MainRobot.TTS.ITextToSpeach
  parent: MainRobot.TTS
  href: MainRobot.TTS.ITextToSpeach.html
  name: ITextToSpeach
  nameWithType: ITextToSpeach
  fullName: MainRobot.TTS.ITextToSpeach
- uid: MainRobot.Robot.Navigation.Interface
  commentId: N:MainRobot.Robot.Navigation.Interface
  href: MainRobot.html
  name: MainRobot.Robot.Navigation.Interface
  nameWithType: MainRobot.Robot.Navigation.Interface
  fullName: MainRobot.Robot.Navigation.Interface
  spec.csharp:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.Navigation
    name: Navigation
    href: MainRobot.Robot.Navigation.html
  - name: .
  - uid: MainRobot.Robot.Navigation.Interface
    name: Interface
    href: MainRobot.Robot.Navigation.Interface.html
  spec.vb:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.Navigation
    name: Navigation
    href: MainRobot.Robot.Navigation.html
  - name: .
  - uid: MainRobot.Robot.Navigation.Interface
    name: Interface
    href: MainRobot.Robot.Navigation.Interface.html
- uid: MainRobot.Robot.Navigation.Helpers
  commentId: N:MainRobot.Robot.Navigation.Helpers
  href: MainRobot.html
  name: MainRobot.Robot.Navigation.Helpers
  nameWithType: MainRobot.Robot.Navigation.Helpers
  fullName: MainRobot.Robot.Navigation.Helpers
  spec.csharp:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.Navigation
    name: Navigation
    href: MainRobot.Robot.Navigation.html
  - name: .
  - uid: MainRobot.Robot.Navigation.Helpers
    name: Helpers
    href: MainRobot.Robot.Navigation.Helpers.html
  spec.vb:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.Navigation
    name: Navigation
    href: MainRobot.Robot.Navigation.html
  - name: .
  - uid: MainRobot.Robot.Navigation.Helpers
    name: Helpers
    href: MainRobot.Robot.Navigation.Helpers.html
- uid: MainRobot.Robot.ActionExec
  commentId: N:MainRobot.Robot.ActionExec
  href: MainRobot.html
  name: MainRobot.Robot.ActionExec
  nameWithType: MainRobot.Robot.ActionExec
  fullName: MainRobot.Robot.ActionExec
  spec.csharp:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.ActionExec
    name: ActionExec
    href: MainRobot.Robot.ActionExec.html
  spec.vb:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.ActionExec
    name: ActionExec
    href: MainRobot.Robot.ActionExec.html
- uid: MainRobot.TTS
  commentId: N:MainRobot.TTS
  href: MainRobot.html
  name: MainRobot.TTS
  nameWithType: MainRobot.TTS
  fullName: MainRobot.TTS
  spec.csharp:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.TTS
    name: TTS
    href: MainRobot.TTS.html
  spec.vb:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.TTS
    name: TTS
    href: MainRobot.TTS.html
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.NavigateTo*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.NavigateTo
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_NavigateTo_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: NavigateTo
  nameWithType: NavigationWebController.NavigateTo
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.NavigateTo
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, object>
  nameWithType: Dictionary<string, object>
  fullName: System.Collections.Generic.Dictionary<string, object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.SetPosition*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.SetPosition
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_SetPosition_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: SetPosition
  nameWithType: NavigationWebController.SetPosition
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.SetPosition
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.AddWall*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.AddWall
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_AddWall_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: AddWall
  nameWithType: NavigationWebController.AddWall
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.AddWall
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.RemoveWall*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.RemoveWall
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_RemoveWall_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: RemoveWall
  nameWithType: NavigationWebController.RemoveWall
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.RemoveWall
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.Recharge*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.Recharge
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_Recharge_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: Recharge
  nameWithType: NavigationWebController.Recharge
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.Recharge
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.ReadObstacleFromLidar*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.ReadObstacleFromLidar
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_ReadObstacleFromLidar_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: ReadObstacleFromLidar
  nameWithType: NavigationWebController.ReadObstacleFromLidar
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.ReadObstacleFromLidar
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.ReadRawLidar*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.ReadRawLidar
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_ReadRawLidar_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: ReadRawLidar
  nameWithType: NavigationWebController.ReadRawLidar
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.ReadRawLidar
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.Fwd*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.Fwd
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_Fwd_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: Fwd
  nameWithType: NavigationWebController.Fwd
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.Fwd
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.Bck*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.Bck
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_Bck_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: Bck
  nameWithType: NavigationWebController.Bck
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.Bck
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.Lft*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.Lft
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_Lft_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: Lft
  nameWithType: NavigationWebController.Lft
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.Lft
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.Rht*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.Rht
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_Rht_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: Rht
  nameWithType: NavigationWebController.Rht
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.Rht
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.GetObstacleInMap*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.GetObstacleInMap
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_GetObstacleInMap_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: GetObstacleInMap
  nameWithType: NavigationWebController.GetObstacleInMap
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.GetObstacleInMap
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.SentenceAction*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.SentenceAction
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_SentenceAction_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: SentenceAction
  nameWithType: NavigationWebController.SentenceAction
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.SentenceAction
- uid: MainRobot.Robot.ControllerWeb.NavigationWebController.Talk*
  commentId: Overload:MainRobot.Robot.ControllerWeb.NavigationWebController.Talk
  href: MainRobot.Robot.ControllerWeb.NavigationWebController.html#MainRobot_Robot_ControllerWeb_NavigationWebController_Talk_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: Talk
  nameWithType: NavigationWebController.Talk
  fullName: MainRobot.Robot.ControllerWeb.NavigationWebController.Talk
