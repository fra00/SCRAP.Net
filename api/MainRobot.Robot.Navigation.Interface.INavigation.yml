### YamlMime:ManagedReference
items:
- uid: MainRobot.Robot.Navigation.Interface.INavigation
  commentId: T:MainRobot.Robot.Navigation.Interface.INavigation
  id: INavigation
  parent: MainRobot.Robot.Navigation.Interface
  children:
  - MainRobot.Robot.Navigation.Interface.INavigation.GetObstacleInMap
  - MainRobot.Robot.Navigation.Interface.INavigation.NavigateTo(MainRobot.Common.RPoint,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - MainRobot.Robot.Navigation.Interface.INavigation.NavigateToRecharge
  - MainRobot.Robot.Navigation.Interface.INavigation.ReadObstacleFromLidar
  - MainRobot.Robot.Navigation.Interface.INavigation.ReadRawLidar
  - MainRobot.Robot.Navigation.Interface.INavigation.ResetNavigation(MainRobot.Common.RPoint,System.Nullable{System.Boolean})
  langs:
  - csharp
  - vb
  name: INavigation
  nameWithType: INavigation
  fullName: MainRobot.Robot.Navigation.Interface.INavigation
  type: Interface
  source:
    remote:
      path: Robot/Navigation/Interface/INavigation.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: INavigation
    path: Robot/Navigation/Interface/INavigation.cs
    startLine: 5
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Navigation.Interface
  syntax:
    content: public interface INavigation
    content.vb: Public Interface INavigation
- uid: MainRobot.Robot.Navigation.Interface.INavigation.ResetNavigation(MainRobot.Common.RPoint,System.Nullable{System.Boolean})
  commentId: M:MainRobot.Robot.Navigation.Interface.INavigation.ResetNavigation(MainRobot.Common.RPoint,System.Nullable{System.Boolean})
  id: ResetNavigation(MainRobot.Common.RPoint,System.Nullable{System.Boolean})
  parent: MainRobot.Robot.Navigation.Interface.INavigation
  langs:
  - csharp
  - vb
  name: ResetNavigation(RPoint?, bool?)
  nameWithType: INavigation.ResetNavigation(RPoint?, bool?)
  fullName: MainRobot.Robot.Navigation.Interface.INavigation.ResetNavigation(MainRobot.Common.RPoint?, bool?)
  type: Method
  source:
    remote:
      path: Robot/Navigation/Interface/INavigation.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: ResetNavigation
    path: Robot/Navigation/Interface/INavigation.cs
    startLine: 11
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Navigation.Interface
  summary: Stop navigation and restart
  example: []
  syntax:
    content: Task ResetNavigation(RPoint? endPoint = null, bool? isForRecharge = false)
    parameters:
    - id: endPoint
      type: MainRobot.Common.RPoint
    - id: isForRecharge
      type: System.Nullable{System.Boolean}
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function ResetNavigation(endPoint As RPoint = Nothing, isForRecharge As Boolean? = False) As Task
  overload: MainRobot.Robot.Navigation.Interface.INavigation.ResetNavigation*
  nameWithType.vb: INavigation.ResetNavigation(RPoint, Boolean?)
  fullName.vb: MainRobot.Robot.Navigation.Interface.INavigation.ResetNavigation(MainRobot.Common.RPoint, Boolean?)
  name.vb: ResetNavigation(RPoint, Boolean?)
- uid: MainRobot.Robot.Navigation.Interface.INavigation.NavigateTo(MainRobot.Common.RPoint,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  commentId: M:MainRobot.Robot.Navigation.Interface.INavigation.NavigateTo(MainRobot.Common.RPoint,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: NavigateTo(MainRobot.Common.RPoint,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: MainRobot.Robot.Navigation.Interface.INavigation
  langs:
  - csharp
  - vb
  name: NavigateTo(RPoint, bool?, bool?)
  nameWithType: INavigation.NavigateTo(RPoint, bool?, bool?)
  fullName: MainRobot.Robot.Navigation.Interface.INavigation.NavigateTo(MainRobot.Common.RPoint, bool?, bool?)
  type: Method
  source:
    remote:
      path: Robot/Navigation/Interface/INavigation.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: NavigateTo
    path: Robot/Navigation/Interface/INavigation.cs
    startLine: 17
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Navigation.Interface
  summary: Navigate to point
  example: []
  syntax:
    content: Task NavigateTo(RPoint end, bool? isForRecharge = false, bool? continueNavigation = false)
    parameters:
    - id: end
      type: MainRobot.Common.RPoint
      description: Point to navigate
    - id: isForRecharge
      type: System.Nullable{System.Boolean}
    - id: continueNavigation
      type: System.Nullable{System.Boolean}
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function NavigateTo([end] As RPoint, isForRecharge As Boolean? = False, continueNavigation As Boolean? = False) As Task
  overload: MainRobot.Robot.Navigation.Interface.INavigation.NavigateTo*
  nameWithType.vb: INavigation.NavigateTo(RPoint, Boolean?, Boolean?)
  fullName.vb: MainRobot.Robot.Navigation.Interface.INavigation.NavigateTo(MainRobot.Common.RPoint, Boolean?, Boolean?)
  name.vb: NavigateTo(RPoint, Boolean?, Boolean?)
- uid: MainRobot.Robot.Navigation.Interface.INavigation.NavigateToRecharge
  commentId: M:MainRobot.Robot.Navigation.Interface.INavigation.NavigateToRecharge
  id: NavigateToRecharge
  parent: MainRobot.Robot.Navigation.Interface.INavigation
  langs:
  - csharp
  - vb
  name: NavigateToRecharge()
  nameWithType: INavigation.NavigateToRecharge()
  fullName: MainRobot.Robot.Navigation.Interface.INavigation.NavigateToRecharge()
  type: Method
  source:
    remote:
      path: Robot/Navigation/Interface/INavigation.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: NavigateToRecharge
    path: Robot/Navigation/Interface/INavigation.cs
    startLine: 22
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Navigation.Interface
  summary: Navigate to recharge position
  example: []
  syntax:
    content: Task NavigateToRecharge()
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function NavigateToRecharge() As Task
  overload: MainRobot.Robot.Navigation.Interface.INavigation.NavigateToRecharge*
- uid: MainRobot.Robot.Navigation.Interface.INavigation.ReadObstacleFromLidar
  commentId: M:MainRobot.Robot.Navigation.Interface.INavigation.ReadObstacleFromLidar
  id: ReadObstacleFromLidar
  parent: MainRobot.Robot.Navigation.Interface.INavigation
  langs:
  - csharp
  - vb
  name: ReadObstacleFromLidar()
  nameWithType: INavigation.ReadObstacleFromLidar()
  fullName: MainRobot.Robot.Navigation.Interface.INavigation.ReadObstacleFromLidar()
  type: Method
  source:
    remote:
      path: Robot/Navigation/Interface/INavigation.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: ReadObstacleFromLidar
    path: Robot/Navigation/Interface/INavigation.cs
    startLine: 23
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Navigation.Interface
  syntax:
    content: Task<IEnumerable<(int, float)>?> ReadObstacleFromLidar()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}}}
    content.vb: Function ReadObstacleFromLidar() As Task(Of IEnumerable(Of (Integer, Single)))
  overload: MainRobot.Robot.Navigation.Interface.INavigation.ReadObstacleFromLidar*
- uid: MainRobot.Robot.Navigation.Interface.INavigation.ReadRawLidar
  commentId: M:MainRobot.Robot.Navigation.Interface.INavigation.ReadRawLidar
  id: ReadRawLidar
  parent: MainRobot.Robot.Navigation.Interface.INavigation
  langs:
  - csharp
  - vb
  name: ReadRawLidar()
  nameWithType: INavigation.ReadRawLidar()
  fullName: MainRobot.Robot.Navigation.Interface.INavigation.ReadRawLidar()
  type: Method
  source:
    remote:
      path: Robot/Navigation/Interface/INavigation.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: ReadRawLidar
    path: Robot/Navigation/Interface/INavigation.cs
    startLine: 24
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Navigation.Interface
  syntax:
    content: Task<IEnumerable<(int, float)>?> ReadRawLidar()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}}}
    content.vb: Function ReadRawLidar() As Task(Of IEnumerable(Of (Integer, Single)))
  overload: MainRobot.Robot.Navigation.Interface.INavigation.ReadRawLidar*
- uid: MainRobot.Robot.Navigation.Interface.INavigation.GetObstacleInMap
  commentId: M:MainRobot.Robot.Navigation.Interface.INavigation.GetObstacleInMap
  id: GetObstacleInMap
  parent: MainRobot.Robot.Navigation.Interface.INavigation
  langs:
  - csharp
  - vb
  name: GetObstacleInMap()
  nameWithType: INavigation.GetObstacleInMap()
  fullName: MainRobot.Robot.Navigation.Interface.INavigation.GetObstacleInMap()
  type: Method
  source:
    remote:
      path: Robot/Navigation/Interface/INavigation.cs
      branch: master
      repo: https://github.com/fra00/SCRAP.Net.git
    id: GetObstacleInMap
    path: Robot/Navigation/Interface/INavigation.cs
    startLine: 25
  assemblies:
  - MainRobot
  namespace: MainRobot.Robot.Navigation.Interface
  syntax:
    content: bool[,] GetObstacleInMap()
    return:
      type: System.Boolean[,]
    content.vb: Function GetObstacleInMap() As Boolean(,)
  overload: MainRobot.Robot.Navigation.Interface.INavigation.GetObstacleInMap*
references:
- uid: MainRobot.Robot.Navigation.Interface
  commentId: N:MainRobot.Robot.Navigation.Interface
  href: MainRobot.html
  name: MainRobot.Robot.Navigation.Interface
  nameWithType: MainRobot.Robot.Navigation.Interface
  fullName: MainRobot.Robot.Navigation.Interface
  spec.csharp:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.Navigation
    name: Navigation
    href: MainRobot.Robot.Navigation.html
  - name: .
  - uid: MainRobot.Robot.Navigation.Interface
    name: Interface
    href: MainRobot.Robot.Navigation.Interface.html
  spec.vb:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.Navigation
    name: Navigation
    href: MainRobot.Robot.Navigation.html
  - name: .
  - uid: MainRobot.Robot.Navigation.Interface
    name: Interface
    href: MainRobot.Robot.Navigation.Interface.html
- uid: MainRobot.Robot.Navigation.Interface.INavigation.ResetNavigation*
  commentId: Overload:MainRobot.Robot.Navigation.Interface.INavigation.ResetNavigation
  href: MainRobot.Robot.Navigation.Interface.INavigation.html#MainRobot_Robot_Navigation_Interface_INavigation_ResetNavigation_MainRobot_Common_RPoint_System_Nullable_System_Boolean__
  name: ResetNavigation
  nameWithType: INavigation.ResetNavigation
  fullName: MainRobot.Robot.Navigation.Interface.INavigation.ResetNavigation
- uid: MainRobot.Common.RPoint
  commentId: T:MainRobot.Common.RPoint
  parent: MainRobot.Common
  href: MainRobot.Common.RPoint.html
  name: RPoint
  nameWithType: RPoint
  fullName: MainRobot.Common.RPoint
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: MainRobot.Common
  commentId: N:MainRobot.Common
  href: MainRobot.html
  name: MainRobot.Common
  nameWithType: MainRobot.Common
  fullName: MainRobot.Common
  spec.csharp:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Common
    name: Common
    href: MainRobot.Common.html
  spec.vb:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Common
    name: Common
    href: MainRobot.Common.html
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MainRobot.Robot.Navigation.Interface.INavigation.NavigateTo*
  commentId: Overload:MainRobot.Robot.Navigation.Interface.INavigation.NavigateTo
  href: MainRobot.Robot.Navigation.Interface.INavigation.html#MainRobot_Robot_Navigation_Interface_INavigation_NavigateTo_MainRobot_Common_RPoint_System_Nullable_System_Boolean__System_Nullable_System_Boolean__
  name: NavigateTo
  nameWithType: INavigation.NavigateTo
  fullName: MainRobot.Robot.Navigation.Interface.INavigation.NavigateTo
- uid: MainRobot.Robot.Navigation.Interface.INavigation.NavigateToRecharge*
  commentId: Overload:MainRobot.Robot.Navigation.Interface.INavigation.NavigateToRecharge
  href: MainRobot.Robot.Navigation.Interface.INavigation.html#MainRobot_Robot_Navigation_Interface_INavigation_NavigateToRecharge
  name: NavigateToRecharge
  nameWithType: INavigation.NavigateToRecharge
  fullName: MainRobot.Robot.Navigation.Interface.INavigation.NavigateToRecharge
- uid: MainRobot.Robot.Navigation.Interface.INavigation.ReadObstacleFromLidar*
  commentId: Overload:MainRobot.Robot.Navigation.Interface.INavigation.ReadObstacleFromLidar
  href: MainRobot.Robot.Navigation.Interface.INavigation.html#MainRobot_Robot_Navigation_Interface_INavigation_ReadObstacleFromLidar
  name: ReadObstacleFromLidar
  nameWithType: INavigation.ReadObstacleFromLidar
  fullName: MainRobot.Robot.Navigation.Interface.INavigation.ReadObstacleFromLidar
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.Single}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<(int, float)>>
  nameWithType: Task<IEnumerable<(int, float)>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<(int, float)>>
  nameWithType.vb: Task(Of IEnumerable(Of (Integer, Single)))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of (Integer, Single)))
  name.vb: Task(Of IEnumerable(Of (Integer, Single)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: MainRobot.Robot.Navigation.Interface.INavigation.ReadRawLidar*
  commentId: Overload:MainRobot.Robot.Navigation.Interface.INavigation.ReadRawLidar
  href: MainRobot.Robot.Navigation.Interface.INavigation.html#MainRobot_Robot_Navigation_Interface_INavigation_ReadRawLidar
  name: ReadRawLidar
  nameWithType: INavigation.ReadRawLidar
  fullName: MainRobot.Robot.Navigation.Interface.INavigation.ReadRawLidar
- uid: MainRobot.Robot.Navigation.Interface.INavigation.GetObstacleInMap*
  commentId: Overload:MainRobot.Robot.Navigation.Interface.INavigation.GetObstacleInMap
  href: MainRobot.Robot.Navigation.Interface.INavigation.html#MainRobot_Robot_Navigation_Interface_INavigation_GetObstacleInMap
  name: GetObstacleInMap
  nameWithType: INavigation.GetObstacleInMap
  fullName: MainRobot.Robot.Navigation.Interface.INavigation.GetObstacleInMap
- uid: System.Boolean[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[,]
  nameWithType: bool[,]
  fullName: bool[,]
  nameWithType.vb: Boolean(,)
  fullName.vb: Boolean(,)
  name.vb: Boolean(,)
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: ','
  - name: )
