### YamlMime:ManagedReference
items:
- uid: MainRobot.Robot.Comunication.Comunication
  commentId: T:MainRobot.Robot.Comunication.Comunication
  id: Comunication
  parent: MainRobot.Robot.Comunication
  children:
  - MainRobot.Robot.Comunication.Comunication.#ctor(MainRobot.Robot.Device.ISerial)
  - MainRobot.Robot.Comunication.Comunication.Backward(System.Int32)
  - MainRobot.Robot.Comunication.Comunication.DisableMoviment
  - MainRobot.Robot.Comunication.Comunication.DisableObstacleFind
  - MainRobot.Robot.Comunication.Comunication.DisableRele1
  - MainRobot.Robot.Comunication.Comunication.DisableRele2
  - MainRobot.Robot.Comunication.Comunication.EnableFakeMoviment
  - MainRobot.Robot.Comunication.Comunication.EnableMoviment
  - MainRobot.Robot.Comunication.Comunication.EnableObstacleFind
  - MainRobot.Robot.Comunication.Comunication.EnableRele1
  - MainRobot.Robot.Comunication.Comunication.EnableRele2
  - MainRobot.Robot.Comunication.Comunication.Enqueue(System.String,System.String)
  - MainRobot.Robot.Comunication.Comunication.ForceArduCleanStatus
  - MainRobot.Robot.Comunication.Comunication.Forward(System.Int32)
  - MainRobot.Robot.Comunication.Comunication.GetDistanceFrontSensor
  - MainRobot.Robot.Comunication.Comunication.GetLevelOfAlimentation
  - MainRobot.Robot.Comunication.Comunication.GetSourceOfAlimentation
  - MainRobot.Robot.Comunication.Comunication.IsInRecharge
  - MainRobot.Robot.Comunication.Comunication.OutInRecharge
  - MainRobot.Robot.Comunication.Comunication.StartLeftMotor(System.Int32)
  - MainRobot.Robot.Comunication.Comunication.StartRightMotor(System.Int32)
  - MainRobot.Robot.Comunication.Comunication.Stop
  - MainRobot.Robot.Comunication.Comunication.TestThreadSleep
  - MainRobot.Robot.Comunication.Comunication.TestThreadSleep1
  langs:
  - csharp
  - vb
  name: Comunication
  nameWithType: Comunication
  fullName: MainRobot.Robot.Comunication.Comunication
  type: Class
  source:
    id: Comunication
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 11
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  syntax:
    content: 'public class Comunication : IComunication'
    content.vb: Public Class Comunication Implements IComunication
  inheritance:
  - System.Object
  implements:
  - MainRobot.Robot.Comunication.IComunication
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MainRobot.Robot.Comunication.Comunication.#ctor(MainRobot.Robot.Device.ISerial)
  commentId: M:MainRobot.Robot.Comunication.Comunication.#ctor(MainRobot.Robot.Device.ISerial)
  id: '#ctor(MainRobot.Robot.Device.ISerial)'
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: Comunication(ISerial)
  nameWithType: Comunication.Comunication(ISerial)
  fullName: MainRobot.Robot.Comunication.Comunication.Comunication(MainRobot.Robot.Device.ISerial)
  type: Constructor
  source:
    id: .ctor
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 39
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  summary: ''
  example: []
  syntax:
    content: public Comunication(ISerial serial)
    parameters:
    - id: serial
      type: MainRobot.Robot.Device.ISerial
      description: ''
    content.vb: Public Sub New(serial As ISerial)
  overload: MainRobot.Robot.Comunication.Comunication.#ctor*
  nameWithType.vb: Comunication.New(ISerial)
  fullName.vb: MainRobot.Robot.Comunication.Comunication.New(MainRobot.Robot.Device.ISerial)
  name.vb: New(ISerial)
- uid: MainRobot.Robot.Comunication.Comunication.Enqueue(System.String,System.String)
  commentId: M:MainRobot.Robot.Comunication.Comunication.Enqueue(System.String,System.String)
  id: Enqueue(System.String,System.String)
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: Enqueue(string, string)
  nameWithType: Comunication.Enqueue(string, string)
  fullName: MainRobot.Robot.Comunication.Comunication.Enqueue(string, string)
  type: Method
  source:
    id: Enqueue
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 165
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  syntax:
    content: public Task<ComunicationCommandReceived> Enqueue(string command, string logDescriptionCmd)
    parameters:
    - id: command
      type: System.String
    - id: logDescriptionCmd
      type: System.String
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function Enqueue(command As String, logDescriptionCmd As String) As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.Enqueue*
  nameWithType.vb: Comunication.Enqueue(String, String)
  fullName.vb: MainRobot.Robot.Comunication.Comunication.Enqueue(String, String)
  name.vb: Enqueue(String, String)
- uid: MainRobot.Robot.Comunication.Comunication.DisableRele1
  commentId: M:MainRobot.Robot.Comunication.Comunication.DisableRele1
  id: DisableRele1
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: DisableRele1()
  nameWithType: Comunication.DisableRele1()
  fullName: MainRobot.Robot.Comunication.Comunication.DisableRele1()
  type: Method
  source:
    id: DisableRele1
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 192
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  summary: disable rele1
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> DisableRele1()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
      description: ''
    content.vb: Public Function DisableRele1() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.DisableRele1*
  implements:
  - MainRobot.Robot.Comunication.IComunication.DisableRele1
- uid: MainRobot.Robot.Comunication.Comunication.EnableRele1
  commentId: M:MainRobot.Robot.Comunication.Comunication.EnableRele1
  id: EnableRele1
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: EnableRele1()
  nameWithType: Comunication.EnableRele1()
  fullName: MainRobot.Robot.Comunication.Comunication.EnableRele1()
  type: Method
  source:
    id: EnableRele1
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 197
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> EnableRele1()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function EnableRele1() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.EnableRele1*
  implements:
  - MainRobot.Robot.Comunication.IComunication.EnableRele1
- uid: MainRobot.Robot.Comunication.Comunication.DisableRele2
  commentId: M:MainRobot.Robot.Comunication.Comunication.DisableRele2
  id: DisableRele2
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: DisableRele2()
  nameWithType: Comunication.DisableRele2()
  fullName: MainRobot.Robot.Comunication.Comunication.DisableRele2()
  type: Method
  source:
    id: DisableRele2
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 203
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> DisableRele2()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function DisableRele2() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.DisableRele2*
  implements:
  - MainRobot.Robot.Comunication.IComunication.DisableRele2
- uid: MainRobot.Robot.Comunication.Comunication.EnableRele2
  commentId: M:MainRobot.Robot.Comunication.Comunication.EnableRele2
  id: EnableRele2
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: EnableRele2()
  nameWithType: Comunication.EnableRele2()
  fullName: MainRobot.Robot.Comunication.Comunication.EnableRele2()
  type: Method
  source:
    id: EnableRele2
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 208
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> EnableRele2()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function EnableRele2() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.EnableRele2*
  implements:
  - MainRobot.Robot.Comunication.IComunication.EnableRele2
- uid: MainRobot.Robot.Comunication.Comunication.EnableFakeMoviment
  commentId: M:MainRobot.Robot.Comunication.Comunication.EnableFakeMoviment
  id: EnableFakeMoviment
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: EnableFakeMoviment()
  nameWithType: Comunication.EnableFakeMoviment()
  fullName: MainRobot.Robot.Comunication.Comunication.EnableFakeMoviment()
  type: Method
  source:
    id: EnableFakeMoviment
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 213
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> EnableFakeMoviment()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function EnableFakeMoviment() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.EnableFakeMoviment*
  implements:
  - MainRobot.Robot.Comunication.IComunication.EnableFakeMoviment
- uid: MainRobot.Robot.Comunication.Comunication.Stop
  commentId: M:MainRobot.Robot.Comunication.Comunication.Stop
  id: Stop
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: Comunication.Stop()
  fullName: MainRobot.Robot.Comunication.Comunication.Stop()
  type: Method
  source:
    id: Stop
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 219
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> Stop()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function [Stop]() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.Stop*
  implements:
  - MainRobot.Robot.Comunication.IComunication.Stop
- uid: MainRobot.Robot.Comunication.Comunication.Forward(System.Int32)
  commentId: M:MainRobot.Robot.Comunication.Comunication.Forward(System.Int32)
  id: Forward(System.Int32)
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: Forward(int)
  nameWithType: Comunication.Forward(int)
  fullName: MainRobot.Robot.Comunication.Comunication.Forward(int)
  type: Method
  source:
    id: Forward
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 225
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ResponseSerialForward> Forward(int distance)
    parameters:
    - id: distance
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.Model.ResponseSerialForward}
    content.vb: Public Function Forward(distance As Integer) As Task(Of ResponseSerialForward)
  overload: MainRobot.Robot.Comunication.Comunication.Forward*
  implements:
  - MainRobot.Robot.Comunication.IComunication.Forward(System.Int32)
  nameWithType.vb: Comunication.Forward(Integer)
  fullName.vb: MainRobot.Robot.Comunication.Comunication.Forward(Integer)
  name.vb: Forward(Integer)
- uid: MainRobot.Robot.Comunication.Comunication.StartLeftMotor(System.Int32)
  commentId: M:MainRobot.Robot.Comunication.Comunication.StartLeftMotor(System.Int32)
  id: StartLeftMotor(System.Int32)
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: StartLeftMotor(int)
  nameWithType: Comunication.StartLeftMotor(int)
  fullName: MainRobot.Robot.Comunication.Comunication.StartLeftMotor(int)
  type: Method
  source:
    id: StartLeftMotor
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 240
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> StartLeftMotor(int angle)
    parameters:
    - id: angle
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function StartLeftMotor(angle As Integer) As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.StartLeftMotor*
  implements:
  - MainRobot.Robot.Comunication.IComunication.StartLeftMotor(System.Int32)
  nameWithType.vb: Comunication.StartLeftMotor(Integer)
  fullName.vb: MainRobot.Robot.Comunication.Comunication.StartLeftMotor(Integer)
  name.vb: StartLeftMotor(Integer)
- uid: MainRobot.Robot.Comunication.Comunication.StartRightMotor(System.Int32)
  commentId: M:MainRobot.Robot.Comunication.Comunication.StartRightMotor(System.Int32)
  id: StartRightMotor(System.Int32)
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: StartRightMotor(int)
  nameWithType: Comunication.StartRightMotor(int)
  fullName: MainRobot.Robot.Comunication.Comunication.StartRightMotor(int)
  type: Method
  source:
    id: StartRightMotor
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 246
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> StartRightMotor(int angle)
    parameters:
    - id: angle
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function StartRightMotor(angle As Integer) As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.StartRightMotor*
  implements:
  - MainRobot.Robot.Comunication.IComunication.StartRightMotor(System.Int32)
  nameWithType.vb: Comunication.StartRightMotor(Integer)
  fullName.vb: MainRobot.Robot.Comunication.Comunication.StartRightMotor(Integer)
  name.vb: StartRightMotor(Integer)
- uid: MainRobot.Robot.Comunication.Comunication.Backward(System.Int32)
  commentId: M:MainRobot.Robot.Comunication.Comunication.Backward(System.Int32)
  id: Backward(System.Int32)
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: Backward(int)
  nameWithType: Comunication.Backward(int)
  fullName: MainRobot.Robot.Comunication.Comunication.Backward(int)
  type: Method
  source:
    id: Backward
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 253
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> Backward(int distance)
    parameters:
    - id: distance
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function Backward(distance As Integer) As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.Backward*
  implements:
  - MainRobot.Robot.Comunication.IComunication.Backward(System.Int32)
  nameWithType.vb: Comunication.Backward(Integer)
  fullName.vb: MainRobot.Robot.Comunication.Comunication.Backward(Integer)
  name.vb: Backward(Integer)
- uid: MainRobot.Robot.Comunication.Comunication.EnableMoviment
  commentId: M:MainRobot.Robot.Comunication.Comunication.EnableMoviment
  id: EnableMoviment
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: EnableMoviment()
  nameWithType: Comunication.EnableMoviment()
  fullName: MainRobot.Robot.Comunication.Comunication.EnableMoviment()
  type: Method
  source:
    id: EnableMoviment
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 260
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> EnableMoviment()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function EnableMoviment() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.EnableMoviment*
  implements:
  - MainRobot.Robot.Comunication.IComunication.EnableMoviment
- uid: MainRobot.Robot.Comunication.Comunication.DisableMoviment
  commentId: M:MainRobot.Robot.Comunication.Comunication.DisableMoviment
  id: DisableMoviment
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: DisableMoviment()
  nameWithType: Comunication.DisableMoviment()
  fullName: MainRobot.Robot.Comunication.Comunication.DisableMoviment()
  type: Method
  source:
    id: DisableMoviment
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 267
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> DisableMoviment()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function DisableMoviment() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.DisableMoviment*
  implements:
  - MainRobot.Robot.Comunication.IComunication.DisableMoviment
- uid: MainRobot.Robot.Comunication.Comunication.GetLevelOfAlimentation
  commentId: M:MainRobot.Robot.Comunication.Comunication.GetLevelOfAlimentation
  id: GetLevelOfAlimentation
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: GetLevelOfAlimentation()
  nameWithType: Comunication.GetLevelOfAlimentation()
  fullName: MainRobot.Robot.Comunication.Comunication.GetLevelOfAlimentation()
  type: Method
  source:
    id: GetLevelOfAlimentation
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 274
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<float> GetLevelOfAlimentation()
    return:
      type: System.Threading.Tasks.Task{System.Single}
    content.vb: Public Function GetLevelOfAlimentation() As Task(Of Single)
  overload: MainRobot.Robot.Comunication.Comunication.GetLevelOfAlimentation*
  implements:
  - MainRobot.Robot.Comunication.IComunication.GetLevelOfAlimentation
- uid: MainRobot.Robot.Comunication.Comunication.DisableObstacleFind
  commentId: M:MainRobot.Robot.Comunication.Comunication.DisableObstacleFind
  id: DisableObstacleFind
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: DisableObstacleFind()
  nameWithType: Comunication.DisableObstacleFind()
  fullName: MainRobot.Robot.Comunication.Comunication.DisableObstacleFind()
  type: Method
  source:
    id: DisableObstacleFind
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 281
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> DisableObstacleFind()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function DisableObstacleFind() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.DisableObstacleFind*
  implements:
  - MainRobot.Robot.Comunication.IComunication.DisableObstacleFind
- uid: MainRobot.Robot.Comunication.Comunication.EnableObstacleFind
  commentId: M:MainRobot.Robot.Comunication.Comunication.EnableObstacleFind
  id: EnableObstacleFind
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: EnableObstacleFind()
  nameWithType: Comunication.EnableObstacleFind()
  fullName: MainRobot.Robot.Comunication.Comunication.EnableObstacleFind()
  type: Method
  source:
    id: EnableObstacleFind
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 288
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> EnableObstacleFind()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function EnableObstacleFind() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.EnableObstacleFind*
  implements:
  - MainRobot.Robot.Comunication.IComunication.EnableObstacleFind
- uid: MainRobot.Robot.Comunication.Comunication.IsInRecharge
  commentId: M:MainRobot.Robot.Comunication.Comunication.IsInRecharge
  id: IsInRecharge
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: IsInRecharge()
  nameWithType: Comunication.IsInRecharge()
  fullName: MainRobot.Robot.Comunication.Comunication.IsInRecharge()
  type: Method
  source:
    id: IsInRecharge
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 295
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> IsInRecharge()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function IsInRecharge() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.IsInRecharge*
  implements:
  - MainRobot.Robot.Comunication.IComunication.IsInRecharge
- uid: MainRobot.Robot.Comunication.Comunication.OutInRecharge
  commentId: M:MainRobot.Robot.Comunication.Comunication.OutInRecharge
  id: OutInRecharge
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: OutInRecharge()
  nameWithType: Comunication.OutInRecharge()
  fullName: MainRobot.Robot.Comunication.Comunication.OutInRecharge()
  type: Method
  source:
    id: OutInRecharge
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 302
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> OutInRecharge()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function OutInRecharge() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.OutInRecharge*
  implements:
  - MainRobot.Robot.Comunication.IComunication.OutInRecharge
- uid: MainRobot.Robot.Comunication.Comunication.GetDistanceFrontSensor
  commentId: M:MainRobot.Robot.Comunication.Comunication.GetDistanceFrontSensor
  id: GetDistanceFrontSensor
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: GetDistanceFrontSensor()
  nameWithType: Comunication.GetDistanceFrontSensor()
  fullName: MainRobot.Robot.Comunication.Comunication.GetDistanceFrontSensor()
  type: Method
  source:
    id: GetDistanceFrontSensor
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 309
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<int> GetDistanceFrontSensor()
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function GetDistanceFrontSensor() As Task(Of Integer)
  overload: MainRobot.Robot.Comunication.Comunication.GetDistanceFrontSensor*
  implements:
  - MainRobot.Robot.Comunication.IComunication.GetDistanceFrontSensor
- uid: MainRobot.Robot.Comunication.Comunication.GetSourceOfAlimentation
  commentId: M:MainRobot.Robot.Comunication.Comunication.GetSourceOfAlimentation
  id: GetSourceOfAlimentation
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: GetSourceOfAlimentation()
  nameWithType: Comunication.GetSourceOfAlimentation()
  fullName: MainRobot.Robot.Comunication.Comunication.GetSourceOfAlimentation()
  type: Method
  source:
    id: GetSourceOfAlimentation
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 317
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  example: []
  syntax:
    content: public Task<int> GetSourceOfAlimentation()
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function GetSourceOfAlimentation() As Task(Of Integer)
  overload: MainRobot.Robot.Comunication.Comunication.GetSourceOfAlimentation*
  implements:
  - MainRobot.Robot.Comunication.IComunication.GetSourceOfAlimentation
- uid: MainRobot.Robot.Comunication.Comunication.TestThreadSleep
  commentId: M:MainRobot.Robot.Comunication.Comunication.TestThreadSleep
  id: TestThreadSleep
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: TestThreadSleep()
  nameWithType: Comunication.TestThreadSleep()
  fullName: MainRobot.Robot.Comunication.Comunication.TestThreadSleep()
  type: Method
  source:
    id: TestThreadSleep
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 325
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  syntax:
    content: public Task<ComunicationCommandReceived> TestThreadSleep()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function TestThreadSleep() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.TestThreadSleep*
- uid: MainRobot.Robot.Comunication.Comunication.TestThreadSleep1
  commentId: M:MainRobot.Robot.Comunication.Comunication.TestThreadSleep1
  id: TestThreadSleep1
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: TestThreadSleep1()
  nameWithType: Comunication.TestThreadSleep1()
  fullName: MainRobot.Robot.Comunication.Comunication.TestThreadSleep1()
  type: Method
  source:
    id: TestThreadSleep1
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 330
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  syntax:
    content: public Task<ComunicationCommandReceived> TestThreadSleep1()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
    content.vb: Public Function TestThreadSleep1() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.TestThreadSleep1*
- uid: MainRobot.Robot.Comunication.Comunication.ForceArduCleanStatus
  commentId: M:MainRobot.Robot.Comunication.Comunication.ForceArduCleanStatus
  id: ForceArduCleanStatus
  parent: MainRobot.Robot.Comunication.Comunication
  langs:
  - csharp
  - vb
  name: ForceArduCleanStatus()
  nameWithType: Comunication.ForceArduCleanStatus()
  fullName: MainRobot.Robot.Comunication.Comunication.ForceArduCleanStatus()
  type: Method
  source:
    id: ForceArduCleanStatus
    path: C:\Condivisa\Progetti\Robot\Robot\Comunication\Comunication.cs
    startLine: 336
  assemblies:
  - MainRobot - Backup
  namespace: MainRobot.Robot.Comunication
  summary: reset and clean arduino status
  example: []
  syntax:
    content: public Task<ComunicationCommandReceived> ForceArduCleanStatus()
    return:
      type: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
      description: ''
    content.vb: Public Function ForceArduCleanStatus() As Task(Of ComunicationCommandReceived)
  overload: MainRobot.Robot.Comunication.Comunication.ForceArduCleanStatus*
  implements:
  - MainRobot.Robot.Comunication.IComunication.ForceArduCleanStatus
references:
- uid: MainRobot.Robot.Comunication
  commentId: N:MainRobot.Robot.Comunication
  href: MainRobot.html
  name: MainRobot.Robot.Comunication
  nameWithType: MainRobot.Robot.Comunication
  fullName: MainRobot.Robot.Comunication
  spec.csharp:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.Comunication
    name: Comunication
    href: MainRobot.Robot.Comunication.html
  spec.vb:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.Comunication
    name: Comunication
    href: MainRobot.Robot.Comunication.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MainRobot.Robot.Comunication.IComunication
  commentId: T:MainRobot.Robot.Comunication.IComunication
  parent: MainRobot.Robot.Comunication
  href: MainRobot.Robot.Comunication.IComunication.html
  name: IComunication
  nameWithType: IComunication
  fullName: MainRobot.Robot.Comunication.IComunication
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MainRobot.Robot.Comunication.Comunication.#ctor*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.#ctor
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication__ctor_MainRobot_Robot_Device_ISerial_
  name: Comunication
  nameWithType: Comunication.Comunication
  fullName: MainRobot.Robot.Comunication.Comunication.Comunication
  nameWithType.vb: Comunication.New
  fullName.vb: MainRobot.Robot.Comunication.Comunication.New
  name.vb: New
- uid: MainRobot.Robot.Device.ISerial
  commentId: T:MainRobot.Robot.Device.ISerial
  parent: MainRobot.Robot.Device
  href: MainRobot.Robot.Device.ISerial.html
  name: ISerial
  nameWithType: ISerial
  fullName: MainRobot.Robot.Device.ISerial
- uid: MainRobot.Robot.Device
  commentId: N:MainRobot.Robot.Device
  href: MainRobot.html
  name: MainRobot.Robot.Device
  nameWithType: MainRobot.Robot.Device
  fullName: MainRobot.Robot.Device
  spec.csharp:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.Device
    name: Device
    href: MainRobot.Robot.Device.html
  spec.vb:
  - uid: MainRobot
    name: MainRobot
    href: MainRobot.html
  - name: .
  - uid: MainRobot.Robot
    name: Robot
    href: MainRobot.Robot.html
  - name: .
  - uid: MainRobot.Robot.Device
    name: Device
    href: MainRobot.Robot.Device.html
- uid: MainRobot.Robot.Comunication.Comunication.Enqueue*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.Enqueue
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_Enqueue_System_String_System_String_
  name: Enqueue
  nameWithType: Comunication.Enqueue
  fullName: MainRobot.Robot.Comunication.Comunication.Enqueue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
  commentId: T:System.Threading.Tasks.Task{MainRobot.Robot.Comunication.ComunicationCommandReceived}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ComunicationCommandReceived>
  nameWithType: Task<ComunicationCommandReceived>
  fullName: System.Threading.Tasks.Task<MainRobot.Robot.Comunication.ComunicationCommandReceived>
  nameWithType.vb: Task(Of ComunicationCommandReceived)
  fullName.vb: System.Threading.Tasks.Task(Of MainRobot.Robot.Comunication.ComunicationCommandReceived)
  name.vb: Task(Of ComunicationCommandReceived)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MainRobot.Robot.Comunication.ComunicationCommandReceived
    name: ComunicationCommandReceived
    href: MainRobot.Robot.Comunication.ComunicationCommandReceived.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MainRobot.Robot.Comunication.ComunicationCommandReceived
    name: ComunicationCommandReceived
    href: MainRobot.Robot.Comunication.ComunicationCommandReceived.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MainRobot.Robot.Comunication.Comunication.DisableRele1*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.DisableRele1
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_DisableRele1
  name: DisableRele1
  nameWithType: Comunication.DisableRele1
  fullName: MainRobot.Robot.Comunication.Comunication.DisableRele1
- uid: MainRobot.Robot.Comunication.IComunication.DisableRele1
  commentId: M:MainRobot.Robot.Comunication.IComunication.DisableRele1
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_DisableRele1
  name: DisableRele1()
  nameWithType: IComunication.DisableRele1()
  fullName: MainRobot.Robot.Comunication.IComunication.DisableRele1()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.DisableRele1
    name: DisableRele1
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_DisableRele1
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.DisableRele1
    name: DisableRele1
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_DisableRele1
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.EnableRele1*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.EnableRele1
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_EnableRele1
  name: EnableRele1
  nameWithType: Comunication.EnableRele1
  fullName: MainRobot.Robot.Comunication.Comunication.EnableRele1
- uid: MainRobot.Robot.Comunication.IComunication.EnableRele1
  commentId: M:MainRobot.Robot.Comunication.IComunication.EnableRele1
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableRele1
  name: EnableRele1()
  nameWithType: IComunication.EnableRele1()
  fullName: MainRobot.Robot.Comunication.IComunication.EnableRele1()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.EnableRele1
    name: EnableRele1
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableRele1
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.EnableRele1
    name: EnableRele1
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableRele1
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.DisableRele2*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.DisableRele2
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_DisableRele2
  name: DisableRele2
  nameWithType: Comunication.DisableRele2
  fullName: MainRobot.Robot.Comunication.Comunication.DisableRele2
- uid: MainRobot.Robot.Comunication.IComunication.DisableRele2
  commentId: M:MainRobot.Robot.Comunication.IComunication.DisableRele2
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_DisableRele2
  name: DisableRele2()
  nameWithType: IComunication.DisableRele2()
  fullName: MainRobot.Robot.Comunication.IComunication.DisableRele2()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.DisableRele2
    name: DisableRele2
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_DisableRele2
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.DisableRele2
    name: DisableRele2
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_DisableRele2
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.EnableRele2*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.EnableRele2
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_EnableRele2
  name: EnableRele2
  nameWithType: Comunication.EnableRele2
  fullName: MainRobot.Robot.Comunication.Comunication.EnableRele2
- uid: MainRobot.Robot.Comunication.IComunication.EnableRele2
  commentId: M:MainRobot.Robot.Comunication.IComunication.EnableRele2
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableRele2
  name: EnableRele2()
  nameWithType: IComunication.EnableRele2()
  fullName: MainRobot.Robot.Comunication.IComunication.EnableRele2()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.EnableRele2
    name: EnableRele2
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableRele2
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.EnableRele2
    name: EnableRele2
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableRele2
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.EnableFakeMoviment*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.EnableFakeMoviment
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_EnableFakeMoviment
  name: EnableFakeMoviment
  nameWithType: Comunication.EnableFakeMoviment
  fullName: MainRobot.Robot.Comunication.Comunication.EnableFakeMoviment
- uid: MainRobot.Robot.Comunication.IComunication.EnableFakeMoviment
  commentId: M:MainRobot.Robot.Comunication.IComunication.EnableFakeMoviment
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableFakeMoviment
  name: EnableFakeMoviment()
  nameWithType: IComunication.EnableFakeMoviment()
  fullName: MainRobot.Robot.Comunication.IComunication.EnableFakeMoviment()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.EnableFakeMoviment
    name: EnableFakeMoviment
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableFakeMoviment
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.EnableFakeMoviment
    name: EnableFakeMoviment
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableFakeMoviment
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.Stop*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.Stop
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_Stop
  name: Stop
  nameWithType: Comunication.Stop
  fullName: MainRobot.Robot.Comunication.Comunication.Stop
- uid: MainRobot.Robot.Comunication.IComunication.Stop
  commentId: M:MainRobot.Robot.Comunication.IComunication.Stop
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_Stop
  name: Stop()
  nameWithType: IComunication.Stop()
  fullName: MainRobot.Robot.Comunication.IComunication.Stop()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.Stop
    name: Stop
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_Stop
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.Stop
    name: Stop
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_Stop
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.Forward*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.Forward
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_Forward_System_Int32_
  name: Forward
  nameWithType: Comunication.Forward
  fullName: MainRobot.Robot.Comunication.Comunication.Forward
- uid: MainRobot.Robot.Comunication.IComunication.Forward(System.Int32)
  commentId: M:MainRobot.Robot.Comunication.IComunication.Forward(System.Int32)
  parent: MainRobot.Robot.Comunication.IComunication
  isExternal: true
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_Forward_System_Int32_
  name: Forward(int)
  nameWithType: IComunication.Forward(int)
  fullName: MainRobot.Robot.Comunication.IComunication.Forward(int)
  nameWithType.vb: IComunication.Forward(Integer)
  fullName.vb: MainRobot.Robot.Comunication.IComunication.Forward(Integer)
  name.vb: Forward(Integer)
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.Forward(System.Int32)
    name: Forward
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_Forward_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.Forward(System.Int32)
    name: Forward
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_Forward_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{MainRobot.Robot.Comunication.Model.ResponseSerialForward}
  commentId: T:System.Threading.Tasks.Task{MainRobot.Robot.Comunication.Model.ResponseSerialForward}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ResponseSerialForward>
  nameWithType: Task<ResponseSerialForward>
  fullName: System.Threading.Tasks.Task<MainRobot.Robot.Comunication.Model.ResponseSerialForward>
  nameWithType.vb: Task(Of ResponseSerialForward)
  fullName.vb: System.Threading.Tasks.Task(Of MainRobot.Robot.Comunication.Model.ResponseSerialForward)
  name.vb: Task(Of ResponseSerialForward)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MainRobot.Robot.Comunication.Model.ResponseSerialForward
    name: ResponseSerialForward
    href: MainRobot.Robot.Comunication.Model.ResponseSerialForward.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MainRobot.Robot.Comunication.Model.ResponseSerialForward
    name: ResponseSerialForward
    href: MainRobot.Robot.Comunication.Model.ResponseSerialForward.html
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.StartLeftMotor*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.StartLeftMotor
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_StartLeftMotor_System_Int32_
  name: StartLeftMotor
  nameWithType: Comunication.StartLeftMotor
  fullName: MainRobot.Robot.Comunication.Comunication.StartLeftMotor
- uid: MainRobot.Robot.Comunication.IComunication.StartLeftMotor(System.Int32)
  commentId: M:MainRobot.Robot.Comunication.IComunication.StartLeftMotor(System.Int32)
  parent: MainRobot.Robot.Comunication.IComunication
  isExternal: true
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_StartLeftMotor_System_Int32_
  name: StartLeftMotor(int)
  nameWithType: IComunication.StartLeftMotor(int)
  fullName: MainRobot.Robot.Comunication.IComunication.StartLeftMotor(int)
  nameWithType.vb: IComunication.StartLeftMotor(Integer)
  fullName.vb: MainRobot.Robot.Comunication.IComunication.StartLeftMotor(Integer)
  name.vb: StartLeftMotor(Integer)
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.StartLeftMotor(System.Int32)
    name: StartLeftMotor
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_StartLeftMotor_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.StartLeftMotor(System.Int32)
    name: StartLeftMotor
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_StartLeftMotor_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.StartRightMotor*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.StartRightMotor
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_StartRightMotor_System_Int32_
  name: StartRightMotor
  nameWithType: Comunication.StartRightMotor
  fullName: MainRobot.Robot.Comunication.Comunication.StartRightMotor
- uid: MainRobot.Robot.Comunication.IComunication.StartRightMotor(System.Int32)
  commentId: M:MainRobot.Robot.Comunication.IComunication.StartRightMotor(System.Int32)
  parent: MainRobot.Robot.Comunication.IComunication
  isExternal: true
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_StartRightMotor_System_Int32_
  name: StartRightMotor(int)
  nameWithType: IComunication.StartRightMotor(int)
  fullName: MainRobot.Robot.Comunication.IComunication.StartRightMotor(int)
  nameWithType.vb: IComunication.StartRightMotor(Integer)
  fullName.vb: MainRobot.Robot.Comunication.IComunication.StartRightMotor(Integer)
  name.vb: StartRightMotor(Integer)
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.StartRightMotor(System.Int32)
    name: StartRightMotor
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_StartRightMotor_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.StartRightMotor(System.Int32)
    name: StartRightMotor
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_StartRightMotor_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.Backward*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.Backward
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_Backward_System_Int32_
  name: Backward
  nameWithType: Comunication.Backward
  fullName: MainRobot.Robot.Comunication.Comunication.Backward
- uid: MainRobot.Robot.Comunication.IComunication.Backward(System.Int32)
  commentId: M:MainRobot.Robot.Comunication.IComunication.Backward(System.Int32)
  parent: MainRobot.Robot.Comunication.IComunication
  isExternal: true
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_Backward_System_Int32_
  name: Backward(int)
  nameWithType: IComunication.Backward(int)
  fullName: MainRobot.Robot.Comunication.IComunication.Backward(int)
  nameWithType.vb: IComunication.Backward(Integer)
  fullName.vb: MainRobot.Robot.Comunication.IComunication.Backward(Integer)
  name.vb: Backward(Integer)
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.Backward(System.Int32)
    name: Backward
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_Backward_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.Backward(System.Int32)
    name: Backward
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_Backward_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.EnableMoviment*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.EnableMoviment
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_EnableMoviment
  name: EnableMoviment
  nameWithType: Comunication.EnableMoviment
  fullName: MainRobot.Robot.Comunication.Comunication.EnableMoviment
- uid: MainRobot.Robot.Comunication.IComunication.EnableMoviment
  commentId: M:MainRobot.Robot.Comunication.IComunication.EnableMoviment
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableMoviment
  name: EnableMoviment()
  nameWithType: IComunication.EnableMoviment()
  fullName: MainRobot.Robot.Comunication.IComunication.EnableMoviment()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.EnableMoviment
    name: EnableMoviment
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableMoviment
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.EnableMoviment
    name: EnableMoviment
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableMoviment
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.DisableMoviment*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.DisableMoviment
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_DisableMoviment
  name: DisableMoviment
  nameWithType: Comunication.DisableMoviment
  fullName: MainRobot.Robot.Comunication.Comunication.DisableMoviment
- uid: MainRobot.Robot.Comunication.IComunication.DisableMoviment
  commentId: M:MainRobot.Robot.Comunication.IComunication.DisableMoviment
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_DisableMoviment
  name: DisableMoviment()
  nameWithType: IComunication.DisableMoviment()
  fullName: MainRobot.Robot.Comunication.IComunication.DisableMoviment()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.DisableMoviment
    name: DisableMoviment
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_DisableMoviment
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.DisableMoviment
    name: DisableMoviment
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_DisableMoviment
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.GetLevelOfAlimentation*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.GetLevelOfAlimentation
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_GetLevelOfAlimentation
  name: GetLevelOfAlimentation
  nameWithType: Comunication.GetLevelOfAlimentation
  fullName: MainRobot.Robot.Comunication.Comunication.GetLevelOfAlimentation
- uid: MainRobot.Robot.Comunication.IComunication.GetLevelOfAlimentation
  commentId: M:MainRobot.Robot.Comunication.IComunication.GetLevelOfAlimentation
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_GetLevelOfAlimentation
  name: GetLevelOfAlimentation()
  nameWithType: IComunication.GetLevelOfAlimentation()
  fullName: MainRobot.Robot.Comunication.IComunication.GetLevelOfAlimentation()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.GetLevelOfAlimentation
    name: GetLevelOfAlimentation
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_GetLevelOfAlimentation
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.GetLevelOfAlimentation
    name: GetLevelOfAlimentation
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_GetLevelOfAlimentation
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Single}
  commentId: T:System.Threading.Tasks.Task{System.Single}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<float>
  nameWithType: Task<float>
  fullName: System.Threading.Tasks.Task<float>
  nameWithType.vb: Task(Of Single)
  fullName.vb: System.Threading.Tasks.Task(Of Single)
  name.vb: Task(Of Single)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.DisableObstacleFind*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.DisableObstacleFind
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_DisableObstacleFind
  name: DisableObstacleFind
  nameWithType: Comunication.DisableObstacleFind
  fullName: MainRobot.Robot.Comunication.Comunication.DisableObstacleFind
- uid: MainRobot.Robot.Comunication.IComunication.DisableObstacleFind
  commentId: M:MainRobot.Robot.Comunication.IComunication.DisableObstacleFind
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_DisableObstacleFind
  name: DisableObstacleFind()
  nameWithType: IComunication.DisableObstacleFind()
  fullName: MainRobot.Robot.Comunication.IComunication.DisableObstacleFind()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.DisableObstacleFind
    name: DisableObstacleFind
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_DisableObstacleFind
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.DisableObstacleFind
    name: DisableObstacleFind
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_DisableObstacleFind
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.EnableObstacleFind*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.EnableObstacleFind
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_EnableObstacleFind
  name: EnableObstacleFind
  nameWithType: Comunication.EnableObstacleFind
  fullName: MainRobot.Robot.Comunication.Comunication.EnableObstacleFind
- uid: MainRobot.Robot.Comunication.IComunication.EnableObstacleFind
  commentId: M:MainRobot.Robot.Comunication.IComunication.EnableObstacleFind
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableObstacleFind
  name: EnableObstacleFind()
  nameWithType: IComunication.EnableObstacleFind()
  fullName: MainRobot.Robot.Comunication.IComunication.EnableObstacleFind()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.EnableObstacleFind
    name: EnableObstacleFind
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableObstacleFind
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.EnableObstacleFind
    name: EnableObstacleFind
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_EnableObstacleFind
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.IsInRecharge*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.IsInRecharge
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_IsInRecharge
  name: IsInRecharge
  nameWithType: Comunication.IsInRecharge
  fullName: MainRobot.Robot.Comunication.Comunication.IsInRecharge
- uid: MainRobot.Robot.Comunication.IComunication.IsInRecharge
  commentId: M:MainRobot.Robot.Comunication.IComunication.IsInRecharge
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_IsInRecharge
  name: IsInRecharge()
  nameWithType: IComunication.IsInRecharge()
  fullName: MainRobot.Robot.Comunication.IComunication.IsInRecharge()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.IsInRecharge
    name: IsInRecharge
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_IsInRecharge
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.IsInRecharge
    name: IsInRecharge
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_IsInRecharge
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.OutInRecharge*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.OutInRecharge
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_OutInRecharge
  name: OutInRecharge
  nameWithType: Comunication.OutInRecharge
  fullName: MainRobot.Robot.Comunication.Comunication.OutInRecharge
- uid: MainRobot.Robot.Comunication.IComunication.OutInRecharge
  commentId: M:MainRobot.Robot.Comunication.IComunication.OutInRecharge
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_OutInRecharge
  name: OutInRecharge()
  nameWithType: IComunication.OutInRecharge()
  fullName: MainRobot.Robot.Comunication.IComunication.OutInRecharge()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.OutInRecharge
    name: OutInRecharge
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_OutInRecharge
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.OutInRecharge
    name: OutInRecharge
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_OutInRecharge
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.GetDistanceFrontSensor*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.GetDistanceFrontSensor
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_GetDistanceFrontSensor
  name: GetDistanceFrontSensor
  nameWithType: Comunication.GetDistanceFrontSensor
  fullName: MainRobot.Robot.Comunication.Comunication.GetDistanceFrontSensor
- uid: MainRobot.Robot.Comunication.IComunication.GetDistanceFrontSensor
  commentId: M:MainRobot.Robot.Comunication.IComunication.GetDistanceFrontSensor
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_GetDistanceFrontSensor
  name: GetDistanceFrontSensor()
  nameWithType: IComunication.GetDistanceFrontSensor()
  fullName: MainRobot.Robot.Comunication.IComunication.GetDistanceFrontSensor()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.GetDistanceFrontSensor
    name: GetDistanceFrontSensor
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_GetDistanceFrontSensor
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.GetDistanceFrontSensor
    name: GetDistanceFrontSensor
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_GetDistanceFrontSensor
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.GetSourceOfAlimentation*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.GetSourceOfAlimentation
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_GetSourceOfAlimentation
  name: GetSourceOfAlimentation
  nameWithType: Comunication.GetSourceOfAlimentation
  fullName: MainRobot.Robot.Comunication.Comunication.GetSourceOfAlimentation
- uid: MainRobot.Robot.Comunication.IComunication.GetSourceOfAlimentation
  commentId: M:MainRobot.Robot.Comunication.IComunication.GetSourceOfAlimentation
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_GetSourceOfAlimentation
  name: GetSourceOfAlimentation()
  nameWithType: IComunication.GetSourceOfAlimentation()
  fullName: MainRobot.Robot.Comunication.IComunication.GetSourceOfAlimentation()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.GetSourceOfAlimentation
    name: GetSourceOfAlimentation
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_GetSourceOfAlimentation
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.GetSourceOfAlimentation
    name: GetSourceOfAlimentation
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_GetSourceOfAlimentation
  - name: (
  - name: )
- uid: MainRobot.Robot.Comunication.Comunication.TestThreadSleep*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.TestThreadSleep
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_TestThreadSleep
  name: TestThreadSleep
  nameWithType: Comunication.TestThreadSleep
  fullName: MainRobot.Robot.Comunication.Comunication.TestThreadSleep
- uid: MainRobot.Robot.Comunication.Comunication.TestThreadSleep1*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.TestThreadSleep1
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_TestThreadSleep1
  name: TestThreadSleep1
  nameWithType: Comunication.TestThreadSleep1
  fullName: MainRobot.Robot.Comunication.Comunication.TestThreadSleep1
- uid: MainRobot.Robot.Comunication.Comunication.ForceArduCleanStatus*
  commentId: Overload:MainRobot.Robot.Comunication.Comunication.ForceArduCleanStatus
  href: MainRobot.Robot.Comunication.Comunication.html#MainRobot_Robot_Comunication_Comunication_ForceArduCleanStatus
  name: ForceArduCleanStatus
  nameWithType: Comunication.ForceArduCleanStatus
  fullName: MainRobot.Robot.Comunication.Comunication.ForceArduCleanStatus
- uid: MainRobot.Robot.Comunication.IComunication.ForceArduCleanStatus
  commentId: M:MainRobot.Robot.Comunication.IComunication.ForceArduCleanStatus
  parent: MainRobot.Robot.Comunication.IComunication
  href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_ForceArduCleanStatus
  name: ForceArduCleanStatus()
  nameWithType: IComunication.ForceArduCleanStatus()
  fullName: MainRobot.Robot.Comunication.IComunication.ForceArduCleanStatus()
  spec.csharp:
  - uid: MainRobot.Robot.Comunication.IComunication.ForceArduCleanStatus
    name: ForceArduCleanStatus
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_ForceArduCleanStatus
  - name: (
  - name: )
  spec.vb:
  - uid: MainRobot.Robot.Comunication.IComunication.ForceArduCleanStatus
    name: ForceArduCleanStatus
    href: MainRobot.Robot.Comunication.IComunication.html#MainRobot_Robot_Comunication_IComunication_ForceArduCleanStatus
  - name: (
  - name: )
