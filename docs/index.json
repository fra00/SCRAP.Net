{
  "api/MainRobot.Common.Graphics.ImageUtility.html": {
    "href": "api/MainRobot.Common.Graphics.ImageUtility.html",
    "title": "Class ImageUtility | SCRAP.Net",
    "keywords": "Class ImageUtility Namespace MainRobot.Common.Graphics Assembly MainRobot.dll public class ImageUtility Inheritance object ImageUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPointWithHighestDensity(List<RPoint>) public static RPoint GetPointWithHighestDensity(List<RPoint> points) Parameters points List<RPoint> Returns RPoint IsDarkImage(Image<Rgba32>, double?) public static bool IsDarkImage(Image<Rgba32> image, double? threshold = 50) Parameters image Image<Rgba32> threshold double? Returns bool ListPixelOfColor(Image<Rgba32>, int, int, int, int, int, int) public static List<RPoint> ListPixelOfColor(Image<Rgba32> inputImage, int r, int g, int b, int toleranceRed, int toleranceGreen, int toleranceBlue) Parameters inputImage Image<Rgba32> r int g int b int toleranceRed int toleranceGreen int toleranceBlue int Returns List<RPoint> PositionOfColor(Image<Rgba32>, int, int, int, int, int, int) public static RPoint PositionOfColor(Image<Rgba32> inputImage, int r, int g, int b, int toleranceRed, int toleranceGreen, int toleranceBlue) Parameters inputImage Image<Rgba32> r int g int b int toleranceRed int toleranceGreen int toleranceBlue int Returns RPoint"
  },
  "api/MainRobot.Common.Graphics.html": {
    "href": "api/MainRobot.Common.Graphics.html",
    "title": "Namespace MainRobot.Common.Graphics | SCRAP.Net",
    "keywords": "Namespace MainRobot.Common.Graphics Classes ImageUtility"
  },
  "api/MainRobot.Common.Location.html": {
    "href": "api/MainRobot.Common.Location.html",
    "title": "Class Location | SCRAP.Net",
    "keywords": "Class Location Namespace MainRobot.Common Assembly MainRobot.dll public class Location Inheritance object Location Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Location() public Location() Location(int, RPoint, int) public Location(int id, RPoint position, int angle) Parameters id int position RPoint angle int Fields Angle public int Angle Field Value int Id public int Id Field Value int Position public RPoint Position Field Value RPoint"
  },
  "api/MainRobot.Common.MathUtil.html": {
    "href": "api/MainRobot.Common.MathUtil.html",
    "title": "Class MathUtil | SCRAP.Net",
    "keywords": "Class MathUtil Namespace MainRobot.Common Assembly MainRobot.dll public class MathUtil Inheritance object MathUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AngleBetweenTwoPoint180Origin(RPoint, RPoint) public static double AngleBetweenTwoPoint180Origin(RPoint p1, RPoint p2) Parameters p1 RPoint p2 RPoint Returns double AngleBetweenTwoPoints(RPoint, RPoint) public static double AngleBetweenTwoPoints(RPoint p1, RPoint p2) Parameters p1 RPoint p2 RPoint Returns double DifferenceTwoAngle(double, double) public static double DifferenceTwoAngle(double angle, double angle1) Parameters angle double angle1 double Returns double DifferenceTwoAngleSigned(double, double) esegue la differenza di due angoli con il segno tra 180,0,-180 public static double DifferenceTwoAngleSigned(double firstAngle, double secondAngle) Parameters firstAngle double secondAngle double Returns double DifferenceTwoAngleZero(double, double) public static double DifferenceTwoAngleZero(double angle, double angle1) Parameters angle double angle1 double Returns double Distance(RPoint, RPoint) public static double Distance(RPoint p1, RPoint p2) Parameters p1 RPoint p2 RPoint Returns double MovePointOfDistance(RPoint, double, double) public static RPoint MovePointOfDistance(RPoint p, double distance, double angle) Parameters p RPoint distance double angle double Returns RPoint MovePointOfDistanceRounded10(RPoint, double, double) public static RPoint MovePointOfDistanceRounded10(RPoint p, double distance, double angle) Parameters p RPoint distance double angle double Returns RPoint SumTwoAngle(double, double) public static double SumTwoAngle(double angle, double angle1) Parameters angle double angle1 double Returns double"
  },
  "api/MainRobot.Common.RPoint.html": {
    "href": "api/MainRobot.Common.RPoint.html",
    "title": "Class RPoint | SCRAP.Net",
    "keywords": "Class RPoint Namespace MainRobot.Common Assembly MainRobot.dll public class RPoint Inheritance object RPoint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RPoint() public RPoint() RPoint(int, int) public RPoint(int x, int y) Parameters x int y int Fields X public int X Field Value int Y public int Y Field Value int"
  },
  "api/MainRobot.Common.html": {
    "href": "api/MainRobot.Common.html",
    "title": "Namespace MainRobot.Common | SCRAP.Net",
    "keywords": "Namespace MainRobot.Common Classes Location MathUtil RPoint"
  },
  "api/MainRobot.Configuration.html": {
    "href": "api/MainRobot.Configuration.html",
    "title": "Class Configuration | SCRAP.Net",
    "keywords": "Class Configuration Namespace MainRobot Assembly MainRobot.dll public static class Configuration Inheritance object Configuration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ARGUMENTS_ESPEAK parameter to configure eSpeak int this case is italian voice with pitch 20 public static string ARGUMENTS_ESPEAK Field Value string CAMERA_IP_PAS public static string CAMERA_IP_PAS Field Value string CAMERA_IP_URL public static string CAMERA_IP_URL Field Value string CAMERA_IP_USR public static string CAMERA_IP_USR Field Value string FAKE_HW public static bool FAKE_HW Field Value bool FAKE_REMOTE_ARDUINO public static bool FAKE_REMOTE_ARDUINO Field Value bool HTTP_URL_BASE_LLM public static string HTTP_URL_BASE_LLM Field Value string HTTP_URL_COMUNICATION http settings : url to server http arduino public static string HTTP_URL_COMUNICATION Field Value string HTTP_URL_LLM public static string HTTP_URL_LLM Field Value string MAP_FILE_NAME path of image used as map public static string MAP_FILE_NAME Field Value string PATH_ESPEAK to speech by default is used eSpeak this is the folder when espeak is installed public static string PATH_ESPEAK Field Value string SERIAL_ARRAY_SEPARETOR separator char for array elements public static string SERIAL_ARRAY_SEPARETOR Field Value string SERIAL_END_MESSAGE Chars for end message public static string SERIAL_END_MESSAGE Field Value string SERIAL_NAME serial settings : serial name public static string SERIAL_NAME Field Value string SERIAL_SEPARETOR separator char for command public static string SERIAL_SEPARETOR Field Value string SERIAL_SPEED serial settings : serial speed public static int SERIAL_SPEED Field Value int SERIAL_START_MESSAGE_ARDU Start chars for message from Server (message from Arduino to Server) public static string SERIAL_START_MESSAGE_ARDU Field Value string SERIAL_START_MESSAGE_RPI Start chars for message from Server (message from Server to Arduino) public static string SERIAL_START_MESSAGE_RPI Field Value string TCP_URL_COMUNICATION TCP settings if is configured as tcp use this to configure \"ip;port\" public static string TCP_URL_COMUNICATION Field Value string"
  },
  "api/MainRobot.Http.HttpMethodAttribute.html": {
    "href": "api/MainRobot.Http.HttpMethodAttribute.html",
    "title": "Class HttpMethodAttribute | SCRAP.Net",
    "keywords": "Class HttpMethodAttribute Namespace MainRobot.Http Assembly MainRobot.dll [AttributeUsage(AttributeTargets.Method)] public class HttpMethodAttribute : Attribute Inheritance object Attribute HttpMethodAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HttpMethodAttribute(string) public HttpMethodAttribute(string method) Parameters method string Properties Method public string Method { get; } Property Value string"
  },
  "api/MainRobot.Http.HttpServer.html": {
    "href": "api/MainRobot.Http.HttpServer.html",
    "title": "Class HttpServer | SCRAP.Net",
    "keywords": "Class HttpServer Namespace MainRobot.Http Assembly MainRobot.dll public class HttpServer Inheritance object HttpServer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HttpServer(string, IServiceProvider) public HttpServer(string prefix, IServiceProvider provider) Parameters prefix string provider IServiceProvider Methods StartAsync() public Task StartAsync() Returns Task"
  },
  "api/MainRobot.Http.RestApiClient.html": {
    "href": "api/MainRobot.Http.RestApiClient.html",
    "title": "Class RestApiClient | SCRAP.Net",
    "keywords": "Class RestApiClient Namespace MainRobot.Http Assembly MainRobot.dll public class RestApiClient Inheritance object RestApiClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RestApiClient(string) public RestApiClient(string baseUrl) Parameters baseUrl string Methods SendRequestAsync(string, string, object) public Task<HttpResponseMessage> SendRequestAsync(string method, string url, object data = null) Parameters method string url string data object Returns Task<HttpResponseMessage> addHeader(string, string) public void addHeader(string key, string value) Parameters key string value string"
  },
  "api/MainRobot.Http.SerializationMiddleware.html": {
    "href": "api/MainRobot.Http.SerializationMiddleware.html",
    "title": "Class SerializationMiddleware | SCRAP.Net",
    "keywords": "Class SerializationMiddleware Namespace MainRobot.Http Assembly MainRobot.dll public class SerializationMiddleware Inheritance object SerializationMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InvokeAsync(HttpListenerContext, Dictionary<string, object>, IServiceProvider) public Task InvokeAsync(HttpListenerContext context, Dictionary<string, object> data, IServiceProvider provider) Parameters context HttpListenerContext data Dictionary<string, object> provider IServiceProvider Returns Task"
  },
  "api/MainRobot.Http.html": {
    "href": "api/MainRobot.Http.html",
    "title": "Namespace MainRobot.Http | SCRAP.Net",
    "keywords": "Namespace MainRobot.Http Classes HttpMethodAttribute HttpServer RestApiClient SerializationMiddleware"
  },
  "api/MainRobot.NaturalLanguage.SpacyNet.IntentRecognition.html": {
    "href": "api/MainRobot.NaturalLanguage.SpacyNet.IntentRecognition.html",
    "title": "Class IntentRecognition | SCRAP.Net",
    "keywords": "Class IntentRecognition Namespace MainRobot.NaturalLanguage.SpacyNet Assembly MainRobot.dll public class IntentRecognition : IIntentRecognition Inheritance object IntentRecognition Implements IIntentRecognition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IntentRecognition() public IntentRecognition() Methods Init() public void Init() ProcessIntent(string) public Task<List<IntentData>> ProcessIntent(string sentence) Parameters sentence string Returns Task<List<IntentData>>"
  },
  "api/MainRobot.NaturalLanguage.SpacyNet.Vocabulary.html": {
    "href": "api/MainRobot.NaturalLanguage.SpacyNet.Vocabulary.html",
    "title": "Class Vocabulary | SCRAP.Net",
    "keywords": "Class Vocabulary Namespace MainRobot.NaturalLanguage.SpacyNet Assembly MainRobot.dll public static class Vocabulary Inheritance object Vocabulary Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Intent public static Dictionary<string, string> Intent Field Value Dictionary<string, string>"
  },
  "api/MainRobot.NaturalLanguage.SpacyNet.html": {
    "href": "api/MainRobot.NaturalLanguage.SpacyNet.html",
    "title": "Namespace MainRobot.NaturalLanguage.SpacyNet | SCRAP.Net",
    "keywords": "Namespace MainRobot.NaturalLanguage.SpacyNet Classes IntentRecognition Vocabulary"
  },
  "api/MainRobot.Program.html": {
    "href": "api/MainRobot.Program.html",
    "title": "Class Program | SCRAP.Net",
    "keywords": "Class Program Namespace MainRobot Assembly MainRobot.dll public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MainRobot.Robot.ActionExec.ActionExec.html": {
    "href": "api/MainRobot.Robot.ActionExec.ActionExec.html",
    "title": "Class ActionExec | SCRAP.Net",
    "keywords": "Class ActionExec Namespace MainRobot.Robot.ActionExec Assembly MainRobot.dll public class ActionExec : IActionExec Inheritance object ActionExec Implements IActionExec Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ActionExec(IIntentRecognition, IRoomInfo, INavigation, IMovement, ITextToSpeach, IWebSocketCommand) public ActionExec(IIntentRecognition intentRecognition, IRoomInfo roomInfo, INavigation navigation, IMovement movement, ITextToSpeach textToSpeach, IWebSocketCommand webSocketCommand) Parameters intentRecognition IIntentRecognition roomInfo IRoomInfo navigation INavigation movement IMovement textToSpeach ITextToSpeach webSocketCommand IWebSocketCommand Methods SentenceExec(string) public Task SentenceExec(string sentence) Parameters sentence string Returns Task"
  },
  "api/MainRobot.Robot.ActionExec.GeneratedText.html": {
    "href": "api/MainRobot.Robot.ActionExec.GeneratedText.html",
    "title": "Class GeneratedText | SCRAP.Net",
    "keywords": "Class GeneratedText Namespace MainRobot.Robot.ActionExec Assembly MainRobot.dll public class GeneratedText Inheritance object GeneratedText Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties generated_text public string generated_text { get; set; } Property Value string"
  },
  "api/MainRobot.Robot.ActionExec.IActionExec.html": {
    "href": "api/MainRobot.Robot.ActionExec.IActionExec.html",
    "title": "Interface IActionExec | SCRAP.Net",
    "keywords": "Interface IActionExec Namespace MainRobot.Robot.ActionExec Assembly MainRobot.dll public interface IActionExec Methods SentenceExec(string) Task SentenceExec(string sentence) Parameters sentence string Returns Task"
  },
  "api/MainRobot.Robot.ActionExec.ILLMRestCall.html": {
    "href": "api/MainRobot.Robot.ActionExec.ILLMRestCall.html",
    "title": "Interface ILLMRestCall | SCRAP.Net",
    "keywords": "Interface ILLMRestCall Namespace MainRobot.Robot.ActionExec Assembly MainRobot.dll public interface ILLMRestCall Methods ProcessIntent(string) Task<List<IntentData>> ProcessIntent(string sentence) Parameters sentence string Returns Task<List<IntentData>> ProcessIntentASK(string) Task<string?> ProcessIntentASK(string sentence) Parameters sentence string Returns Task<string> ProcessIntentGOTO(string) Task<string?> ProcessIntentGOTO(string sentence) Parameters sentence string Returns Task<string>"
  },
  "api/MainRobot.Robot.ActionExec.InputsImage.html": {
    "href": "api/MainRobot.Robot.ActionExec.InputsImage.html",
    "title": "Class InputsImage | SCRAP.Net",
    "keywords": "Class InputsImage Namespace MainRobot.Robot.ActionExec Assembly MainRobot.dll public class InputsImage Inheritance object InputsImage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties image public string image { get; set; } Property Value string"
  },
  "api/MainRobot.Robot.ActionExec.LLM.LLMIntentRecognition.html": {
    "href": "api/MainRobot.Robot.ActionExec.LLM.LLMIntentRecognition.html",
    "title": "Class LLMIntentRecognition | SCRAP.Net",
    "keywords": "Class LLMIntentRecognition Namespace MainRobot.Robot.ActionExec.LLM Assembly MainRobot.dll public class LLMIntentRecognition : IIntentRecognition Inheritance object LLMIntentRecognition Implements IIntentRecognition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LLMIntentRecognition(ILLMRestCall) public LLMIntentRecognition(ILLMRestCall llmRestCall) Parameters llmRestCall ILLMRestCall Methods Init() public void Init() ProcessIntent(string) public Task<List<IntentData>> ProcessIntent(string sentence) Parameters sentence string Returns Task<List<IntentData>>"
  },
  "api/MainRobot.Robot.ActionExec.LLM.LlmStudioResponse.html": {
    "href": "api/MainRobot.Robot.ActionExec.LLM.LlmStudioResponse.html",
    "title": "Class LlmStudioResponse | SCRAP.Net",
    "keywords": "Class LlmStudioResponse Namespace MainRobot.Robot.ActionExec.LLM Assembly MainRobot.dll public class LlmStudioResponse Inheritance object LlmStudioResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties choices public List<LlmStudioResponseChoiche> choices { get; set; } Property Value List<LlmStudioResponseChoiche> created public double created { get; set; } Property Value double id public string id { get; set; } Property Value string model public string model { get; set; } Property Value string"
  },
  "api/MainRobot.Robot.ActionExec.LLM.LlmStudioResponseChoiche.html": {
    "href": "api/MainRobot.Robot.ActionExec.LLM.LlmStudioResponseChoiche.html",
    "title": "Class LlmStudioResponseChoiche | SCRAP.Net",
    "keywords": "Class LlmStudioResponseChoiche Namespace MainRobot.Robot.ActionExec.LLM Assembly MainRobot.dll public class LlmStudioResponseChoiche Inheritance object LlmStudioResponseChoiche Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties finish_reason public string finish_reason { get; set; } Property Value string index public int index { get; set; } Property Value int message public LlmStudioResponseMessage message { get; set; } Property Value LlmStudioResponseMessage"
  },
  "api/MainRobot.Robot.ActionExec.LLM.LlmStudioResponseMessage.html": {
    "href": "api/MainRobot.Robot.ActionExec.LLM.LlmStudioResponseMessage.html",
    "title": "Class LlmStudioResponseMessage | SCRAP.Net",
    "keywords": "Class LlmStudioResponseMessage Namespace MainRobot.Robot.ActionExec.LLM Assembly MainRobot.dll public class LlmStudioResponseMessage Inheritance object LlmStudioResponseMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties content public string content { get; set; } Property Value string role public string role { get; set; } Property Value string"
  },
  "api/MainRobot.Robot.ActionExec.LLM.html": {
    "href": "api/MainRobot.Robot.ActionExec.LLM.html",
    "title": "Namespace MainRobot.Robot.ActionExec.LLM | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.ActionExec.LLM Classes LLMIntentRecognition LlmStudioResponse LlmStudioResponseChoiche LlmStudioResponseMessage"
  },
  "api/MainRobot.Robot.ActionExec.LLMHFCall.html": {
    "href": "api/MainRobot.Robot.ActionExec.LLMHFCall.html",
    "title": "Class LLMHFCall | SCRAP.Net",
    "keywords": "Class LLMHFCall Namespace MainRobot.Robot.ActionExec Assembly MainRobot.dll public class LLMHFCall : ILLMRestCall Inheritance object LLMHFCall Implements ILLMRestCall Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Init() public void Init() ProcessIntent(string) public Task<List<IntentData>?> ProcessIntent(string sentence) Parameters sentence string Returns Task<List<IntentData>> ProcessIntentASK(string) public Task<string?>? ProcessIntentASK(string sentence) Parameters sentence string Returns Task<string> ProcessIntentGOTO(string) public Task<string?>? ProcessIntentGOTO(string sentence) Parameters sentence string Returns Task<string>"
  },
  "api/MainRobot.Robot.ActionExec.LLMHFImageToTextCall.html": {
    "href": "api/MainRobot.Robot.ActionExec.LLMHFImageToTextCall.html",
    "title": "Class LLMHFImageToTextCall | SCRAP.Net",
    "keywords": "Class LLMHFImageToTextCall Namespace MainRobot.Robot.ActionExec Assembly MainRobot.dll public class LLMHFImageToTextCall Inheritance object LLMHFImageToTextCall Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LLMHFImageToTextCall() public LLMHFImageToTextCall() Methods ProcessImage(string) public Task<string?> ProcessImage(string image) Parameters image string Returns Task<string>"
  },
  "api/MainRobot.Robot.ActionExec.LLMHFInput.html": {
    "href": "api/MainRobot.Robot.ActionExec.LLMHFInput.html",
    "title": "Class LLMHFInput | SCRAP.Net",
    "keywords": "Class LLMHFInput Namespace MainRobot.Robot.ActionExec Assembly MainRobot.dll public class LLMHFInput Inheritance object LLMHFInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties inputs public string inputs { get; set; } Property Value string parameters public LLMHFParameters parameters { get; set; } Property Value LLMHFParameters"
  },
  "api/MainRobot.Robot.ActionExec.LLMHFInputImage.html": {
    "href": "api/MainRobot.Robot.ActionExec.LLMHFInputImage.html",
    "title": "Class LLMHFInputImage | SCRAP.Net",
    "keywords": "Class LLMHFInputImage Namespace MainRobot.Robot.ActionExec Assembly MainRobot.dll public class LLMHFInputImage Inheritance object LLMHFInputImage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties inputs public InputsImage inputs { get; set; } Property Value InputsImage"
  },
  "api/MainRobot.Robot.ActionExec.LLMHFParameters.html": {
    "href": "api/MainRobot.Robot.ActionExec.LLMHFParameters.html",
    "title": "Class LLMHFParameters | SCRAP.Net",
    "keywords": "Class LLMHFParameters Namespace MainRobot.Robot.ActionExec Assembly MainRobot.dll public class LLMHFParameters Inheritance object LLMHFParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties do_sample public bool do_sample { get; set; } Property Value bool max_new_tokens public int max_new_tokens { get; set; } Property Value int temperature public double temperature { get; set; } Property Value double top_p public double top_p { get; set; } Property Value double"
  },
  "api/MainRobot.Robot.ActionExec.LLMRestCall.html": {
    "href": "api/MainRobot.Robot.ActionExec.LLMRestCall.html",
    "title": "Class LLMRestCall | SCRAP.Net",
    "keywords": "Class LLMRestCall Namespace MainRobot.Robot.ActionExec Assembly MainRobot.dll public class LLMRestCall : ILLMRestCall Inheritance object LLMRestCall Implements ILLMRestCall Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Init() public void Init() ProcessIntent(string) public Task<List<IntentData>?> ProcessIntent(string sentence) Parameters sentence string Returns Task<List<IntentData>> ProcessIntentASK(string) public Task<string> ProcessIntentASK(string sentence) Parameters sentence string Returns Task<string> ProcessIntentGOTO(string) public Task<string> ProcessIntentGOTO(string sentence) Parameters sentence string Returns Task<string>"
  },
  "api/MainRobot.Robot.ActionExec.ResultAction.html": {
    "href": "api/MainRobot.Robot.ActionExec.ResultAction.html",
    "title": "Class ResultAction | SCRAP.Net",
    "keywords": "Class ResultAction Namespace MainRobot.Robot.ActionExec Assembly MainRobot.dll public class ResultAction Inheritance object ResultAction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties action public string action { get; set; } Property Value string"
  },
  "api/MainRobot.Robot.ActionExec.html": {
    "href": "api/MainRobot.Robot.ActionExec.html",
    "title": "Namespace MainRobot.Robot.ActionExec | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.ActionExec Classes ActionExec GeneratedText InputsImage LLMHFCall LLMHFImageToTextCall LLMHFInput LLMHFInputImage LLMHFParameters LLMRestCall ResultAction Interfaces IActionExec ILLMRestCall"
  },
  "api/MainRobot.Robot.Battery.BatteryManager.html": {
    "href": "api/MainRobot.Robot.Battery.BatteryManager.html",
    "title": "Class BatteryManager | SCRAP.Net",
    "keywords": "Class BatteryManager Namespace MainRobot.Robot.Battery Assembly MainRobot.dll public class BatteryManager : IBatteryManager Inheritance object BatteryManager Implements IBatteryManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BatteryManager(ICommandComunication, INavigation, ITextToSpeach) public BatteryManager(ICommandComunication comunication, INavigation navigation, ITextToSpeach textToSpeach) Parameters comunication ICommandComunication navigation INavigation textToSpeach ITextToSpeach"
  },
  "api/MainRobot.Robot.Battery.IBatteryManager.html": {
    "href": "api/MainRobot.Robot.Battery.IBatteryManager.html",
    "title": "Interface IBatteryManager | SCRAP.Net",
    "keywords": "Interface IBatteryManager Namespace MainRobot.Robot.Battery Assembly MainRobot.dll public interface IBatteryManager"
  },
  "api/MainRobot.Robot.Battery.html": {
    "href": "api/MainRobot.Robot.Battery.html",
    "title": "Namespace MainRobot.Robot.Battery | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Battery Classes BatteryManager Interfaces IBatteryManager"
  },
  "api/MainRobot.Robot.Comunication.CommandComunication.html": {
    "href": "api/MainRobot.Robot.Comunication.CommandComunication.html",
    "title": "Class CommandComunication | SCRAP.Net",
    "keywords": "Class CommandComunication Namespace MainRobot.Robot.Comunication Assembly MainRobot.dll Implementazione comandi del robot per il movimento e la gestione delle funzionalità base public class CommandComunication : ICommandComunication Inheritance object CommandComunication Implements ICommandComunication Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandComunication(ICommandQueue) public CommandComunication(ICommandQueue comunication) Parameters comunication ICommandQueue Methods Backward(int) Move Backward public Task<ComunicationCommandReceived> Backward(int distance) Parameters distance int distnce in cm Returns Task<ComunicationCommandReceived> DisableMoviment() Disable Robot to move public Task<ComunicationCommandReceived> DisableMoviment() Returns Task<ComunicationCommandReceived> DisableObstacleFind() After disable no obstacle are detected public Task<ComunicationCommandReceived> DisableObstacleFind() Returns Task<ComunicationCommandReceived> DisableRele1() Open rele1 public Task<ComunicationCommandReceived> DisableRele1() Returns Task<ComunicationCommandReceived> DisableRele2() Open Rele2 public Task<ComunicationCommandReceived> DisableRele2() Returns Task<ComunicationCommandReceived> EnableFakeMoviment() Opern Rele2 public Task<ComunicationCommandReceived> EnableFakeMoviment() Returns Task<ComunicationCommandReceived> EnableMoviment() Enable Moviment : Enable robot to move public Task<ComunicationCommandReceived> EnableMoviment() Returns Task<ComunicationCommandReceived> EnableObstacleFind() Enable obstacle detection public Task<ComunicationCommandReceived> EnableObstacleFind() Returns Task<ComunicationCommandReceived> EnableRele1() Close Rele2 public Task<ComunicationCommandReceived> EnableRele1() Returns Task<ComunicationCommandReceived> EnableRele2() Close Rele2 public Task<ComunicationCommandReceived> EnableRele2() Returns Task<ComunicationCommandReceived> ForceArduCleanStatus() reset and clean arduino status public Task<ComunicationCommandReceived> ForceArduCleanStatus() Returns Task<ComunicationCommandReceived> Forward(int) Move forward public Task<ResponseSerialForward> Forward(int distance) Parameters distance int distance in Cm Returns Task<ResponseSerialForward> GetDistanceFrontSensor() Read distance from Ultrasonic sensor front , center public Task<float> GetDistanceFrontSensor() Returns Task<float> distance in cm from the obstacle or 0 if there are none GetLevelOfAlimentation() Get volts of battery alimentation public Task<float?> GetLevelOfAlimentation() Returns Task<float?> Volts of alimentation GetSourceOfAlimentation() Return status of alimentation public Task<int> GetSourceOfAlimentation() Returns Task<int> \"1 network 0 battery\" IsInRecharge() Check if robot is in recharge public Task<ComunicationCommandReceived> IsInRecharge() Returns Task<ComunicationCommandReceived> MoveServo(int, int) moves a servo by a set angle public Task<ComunicationCommandReceived> MoveServo(int numServo, int angle) Parameters numServo int angle int Returns Task<ComunicationCommandReceived> OutInRecharge() Exit from recharge public Task<ComunicationCommandReceived> OutInRecharge() Returns Task<ComunicationCommandReceived> ReadLidar() Get data from lidar public Task<List<(float, float)>?> ReadLidar() Returns Task<List<(float, float)>> List of tuple (angle, distance) StartLeftMotor(int) Turn left public Task<ComunicationCommandReceived> StartLeftMotor(int angle) Parameters angle int angle to rotate Returns Task<ComunicationCommandReceived> StartRightMotor(int) Turn right public Task<ComunicationCommandReceived> StartRightMotor(int angle) Parameters angle int angle to rotate Returns Task<ComunicationCommandReceived> Stop() public Task<ComunicationCommandReceived> Stop() Returns Task<ComunicationCommandReceived> TestThreadSleep() public Task<ComunicationCommandReceived> TestThreadSleep() Returns Task<ComunicationCommandReceived> TestThreadSleep1() public Task<ComunicationCommandReceived> TestThreadSleep1() Returns Task<ComunicationCommandReceived>"
  },
  "api/MainRobot.Robot.Comunication.CommandQueue.html": {
    "href": "api/MainRobot.Robot.Comunication.CommandQueue.html",
    "title": "Class CommandQueue | SCRAP.Net",
    "keywords": "Class CommandQueue Namespace MainRobot.Robot.Comunication Assembly MainRobot.dll public class CommandQueue : ICommandQueue Inheritance object CommandQueue Implements ICommandQueue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandQueue(IComunication) public CommandQueue(IComunication comunication) Parameters comunication IComunication Methods Enqueue(string, string) public Task<ComunicationCommandReceived> Enqueue(string command, string logDescriptionCmd) Parameters command string logDescriptionCmd string Returns Task<ComunicationCommandReceived>"
  },
  "api/MainRobot.Robot.Comunication.ComunicationTransport.HttpClient.FakeHttpClientComunication.html": {
    "href": "api/MainRobot.Robot.Comunication.ComunicationTransport.HttpClient.FakeHttpClientComunication.html",
    "title": "Class FakeHttpClientComunication | SCRAP.Net",
    "keywords": "Class FakeHttpClientComunication Namespace MainRobot.Robot.Comunication.ComunicationTransport.HttpClient Assembly MainRobot.dll public class FakeHttpClientComunication : IHttpClientComunication Inheritance object FakeHttpClientComunication Implements IHttpClientComunication Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FakeHttpClientComunication(IHttpClientFactory) public FakeHttpClientComunication(IHttpClientFactory httpClientFactory) Parameters httpClientFactory IHttpClientFactory Methods SendAsync(string) public Task<string> SendAsync(string command) Parameters command string Returns Task<string>"
  },
  "api/MainRobot.Robot.Comunication.ComunicationTransport.HttpClient.HttpClientComunication.html": {
    "href": "api/MainRobot.Robot.Comunication.ComunicationTransport.HttpClient.HttpClientComunication.html",
    "title": "Class HttpClientComunication | SCRAP.Net",
    "keywords": "Class HttpClientComunication Namespace MainRobot.Robot.Comunication.ComunicationTransport.HttpClient Assembly MainRobot.dll public class HttpClientComunication : IHttpClientComunication Inheritance object HttpClientComunication Implements IHttpClientComunication Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HttpClientComunication(IHttpClientFactory) public HttpClientComunication(IHttpClientFactory httpClientFactory) Parameters httpClientFactory IHttpClientFactory Methods SendAsync(string) public Task<string> SendAsync(string command) Parameters command string Returns Task<string>"
  },
  "api/MainRobot.Robot.Comunication.ComunicationTransport.HttpClient.IHttpClientComunication.html": {
    "href": "api/MainRobot.Robot.Comunication.ComunicationTransport.HttpClient.IHttpClientComunication.html",
    "title": "Interface IHttpClientComunication | SCRAP.Net",
    "keywords": "Interface IHttpClientComunication Namespace MainRobot.Robot.Comunication.ComunicationTransport.HttpClient Assembly MainRobot.dll public interface IHttpClientComunication Methods SendAsync(string) Task<string> SendAsync(string command) Parameters command string Returns Task<string>"
  },
  "api/MainRobot.Robot.Comunication.ComunicationTransport.HttpClient.TcpClientComunication.html": {
    "href": "api/MainRobot.Robot.Comunication.ComunicationTransport.HttpClient.TcpClientComunication.html",
    "title": "Class TcpClientComunication | SCRAP.Net",
    "keywords": "Class TcpClientComunication Namespace MainRobot.Robot.Comunication.ComunicationTransport.HttpClient Assembly MainRobot.dll public class TcpClientComunication : IHttpClientComunication Inheritance object TcpClientComunication Implements IHttpClientComunication Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TcpClientComunication() public TcpClientComunication() Methods ConnectAsync() public Task<bool> ConnectAsync() Returns Task<bool> SendAsync(string) public Task<string> SendAsync(string message) Parameters message string Returns Task<string>"
  },
  "api/MainRobot.Robot.Comunication.ComunicationTransport.HttpClient.html": {
    "href": "api/MainRobot.Robot.Comunication.ComunicationTransport.HttpClient.html",
    "title": "Namespace MainRobot.Robot.Comunication.ComunicationTransport.HttpClient | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Comunication.ComunicationTransport.HttpClient Classes FakeHttpClientComunication HttpClientComunication TcpClientComunication Interfaces IHttpClientComunication"
  },
  "api/MainRobot.Robot.Comunication.ComunicationTransport.HttpComunication.html": {
    "href": "api/MainRobot.Robot.Comunication.ComunicationTransport.HttpComunication.html",
    "title": "Class HttpComunication | SCRAP.Net",
    "keywords": "Class HttpComunication Namespace MainRobot.Robot.Comunication.ComunicationTransport Assembly MainRobot.dll public class HttpComunication : IComunication Inheritance object HttpComunication Implements IComunication Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HttpComunication(IHttpClientComunication) public HttpComunication(IHttpClientComunication httpClientCom) Parameters httpClientCom IHttpClientComunication Methods RunCommand(ComunicationCommand) public Task<string> RunCommand(ComunicationCommand currentCommand) Parameters currentCommand ComunicationCommand Returns Task<string>"
  },
  "api/MainRobot.Robot.Comunication.ComunicationTransport.IComunication.html": {
    "href": "api/MainRobot.Robot.Comunication.ComunicationTransport.IComunication.html",
    "title": "Interface IComunication | SCRAP.Net",
    "keywords": "Interface IComunication Namespace MainRobot.Robot.Comunication.ComunicationTransport Assembly MainRobot.dll public interface IComunication Methods RunCommand(ComunicationCommand?) Task<string> RunCommand(ComunicationCommand? currentCommand) Parameters currentCommand ComunicationCommand Returns Task<string>"
  },
  "api/MainRobot.Robot.Comunication.ComunicationTransport.SerialComunication.html": {
    "href": "api/MainRobot.Robot.Comunication.ComunicationTransport.SerialComunication.html",
    "title": "Class SerialComunication | SCRAP.Net",
    "keywords": "Class SerialComunication Namespace MainRobot.Robot.Comunication.ComunicationTransport Assembly MainRobot.dll public class SerialComunication : IComunication Inheritance object SerialComunication Implements IComunication Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SerialComunication(ISerial) public SerialComunication(ISerial serial) Parameters serial ISerial Methods ParseCommandReceived(string) public void ParseCommandReceived(string line) Parameters line string RunCommand(ComunicationCommand?) public Task<string> RunCommand(ComunicationCommand? currentCommand) Parameters currentCommand ComunicationCommand Returns Task<string>"
  },
  "api/MainRobot.Robot.Comunication.ComunicationTransport.html": {
    "href": "api/MainRobot.Robot.Comunication.ComunicationTransport.html",
    "title": "Namespace MainRobot.Robot.Comunication.ComunicationTransport | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Comunication.ComunicationTransport Classes HttpComunication SerialComunication Interfaces IComunication"
  },
  "api/MainRobot.Robot.Comunication.Interface.ICommandComunication.html": {
    "href": "api/MainRobot.Robot.Comunication.Interface.ICommandComunication.html",
    "title": "Interface ICommandComunication | SCRAP.Net",
    "keywords": "Interface ICommandComunication Namespace MainRobot.Robot.Comunication.Interface Assembly MainRobot.dll public interface ICommandComunication Methods Backward(int) Task<ComunicationCommandReceived> Backward(int distance) Parameters distance int Returns Task<ComunicationCommandReceived> DisableMoviment() Task<ComunicationCommandReceived> DisableMoviment() Returns Task<ComunicationCommandReceived> DisableObstacleFind() Task<ComunicationCommandReceived> DisableObstacleFind() Returns Task<ComunicationCommandReceived> DisableRele1() disable rele1 Task<ComunicationCommandReceived> DisableRele1() Returns Task<ComunicationCommandReceived> DisableRele2() Task<ComunicationCommandReceived> DisableRele2() Returns Task<ComunicationCommandReceived> EnableFakeMoviment() Task<ComunicationCommandReceived> EnableFakeMoviment() Returns Task<ComunicationCommandReceived> EnableMoviment() Task<ComunicationCommandReceived> EnableMoviment() Returns Task<ComunicationCommandReceived> EnableObstacleFind() Task<ComunicationCommandReceived> EnableObstacleFind() Returns Task<ComunicationCommandReceived> EnableRele1() Task<ComunicationCommandReceived> EnableRele1() Returns Task<ComunicationCommandReceived> EnableRele2() Task<ComunicationCommandReceived> EnableRele2() Returns Task<ComunicationCommandReceived> ForceArduCleanStatus() reset and clean arduino status Task<ComunicationCommandReceived> ForceArduCleanStatus() Returns Task<ComunicationCommandReceived> Forward(int) Task<ResponseSerialForward> Forward(int distance) Parameters distance int Returns Task<ResponseSerialForward> GetDistanceFrontSensor() Task<float> GetDistanceFrontSensor() Returns Task<float> GetLevelOfAlimentation() Task<float?> GetLevelOfAlimentation() Returns Task<float?> GetSourceOfAlimentation() Task<int> GetSourceOfAlimentation() Returns Task<int> IsInRecharge() Task<ComunicationCommandReceived> IsInRecharge() Returns Task<ComunicationCommandReceived> MoveServo(int, int) Task<ComunicationCommandReceived> MoveServo(int numServo, int angle) Parameters numServo int angle int Returns Task<ComunicationCommandReceived> OutInRecharge() Task<ComunicationCommandReceived> OutInRecharge() Returns Task<ComunicationCommandReceived> ReadLidar() Task<List<(float, float)>> ReadLidar() Returns Task<List<(float, float)>> StartLeftMotor(int) Task<ComunicationCommandReceived> StartLeftMotor(int angle) Parameters angle int Returns Task<ComunicationCommandReceived> StartRightMotor(int) Task<ComunicationCommandReceived> StartRightMotor(int angle) Parameters angle int Returns Task<ComunicationCommandReceived> Stop() Task<ComunicationCommandReceived> Stop() Returns Task<ComunicationCommandReceived>"
  },
  "api/MainRobot.Robot.Comunication.Interface.ICommandQueue.html": {
    "href": "api/MainRobot.Robot.Comunication.Interface.ICommandQueue.html",
    "title": "Interface ICommandQueue | SCRAP.Net",
    "keywords": "Interface ICommandQueue Namespace MainRobot.Robot.Comunication.Interface Assembly MainRobot.dll public interface ICommandQueue Methods Enqueue(string, string) Task<ComunicationCommandReceived> Enqueue(string command, string logDescriptionCmd) Parameters command string logDescriptionCmd string Returns Task<ComunicationCommandReceived>"
  },
  "api/MainRobot.Robot.Comunication.Interface.html": {
    "href": "api/MainRobot.Robot.Comunication.Interface.html",
    "title": "Namespace MainRobot.Robot.Comunication.Interface | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Comunication.Interface Interfaces ICommandComunication ICommandQueue"
  },
  "api/MainRobot.Robot.Comunication.Model.ComunicationCommand.html": {
    "href": "api/MainRobot.Robot.Comunication.Model.ComunicationCommand.html",
    "title": "Class ComunicationCommand | SCRAP.Net",
    "keywords": "Class ComunicationCommand Namespace MainRobot.Robot.Comunication.Model Assembly MainRobot.dll public class ComunicationCommand Inheritance object ComunicationCommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Id public int Id Field Value int Properties AliasCommand public string? AliasCommand { get; set; } Property Value string Command public string? Command { get; set; } Property Value string CommandReceived public string? CommandReceived { get; set; } Property Value string ReceivedResponseFromArduino public bool ReceivedResponseFromArduino { get; set; } Property Value bool SendDate public DateTime SendDate { get; set; } Property Value DateTime SendedConfirmReceive public bool SendedConfirmReceive { get; set; } Property Value bool SendedToArduino public bool SendedToArduino { get; set; } Property Value bool Task public TaskCompletionSource<ComunicationCommandReceived> Task { get; set; } Property Value TaskCompletionSource<ComunicationCommandReceived>"
  },
  "api/MainRobot.Robot.Comunication.Model.ComunicationCommandReceived.html": {
    "href": "api/MainRobot.Robot.Comunication.Model.ComunicationCommandReceived.html",
    "title": "Class ComunicationCommandReceived | SCRAP.Net",
    "keywords": "Class ComunicationCommandReceived Namespace MainRobot.Robot.Comunication.Model Assembly MainRobot.dll public class ComunicationCommandReceived Inheritance object ComunicationCommandReceived Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ComunicationCommandReceived() public ComunicationCommandReceived() ComunicationCommandReceived(string[]) public ComunicationCommandReceived(string[] array) Parameters array string[] Properties HaveError public bool HaveError { get; set; } Property Value bool ReceiveOrigin ARDU or RPI public string ReceiveOrigin { get; set; } Property Value string ReceivedCmd Command code public string ReceivedCmd { get; set; } Property Value string ReceivedId Command id public string ReceivedId { get; set; } Property Value string ReceivedParam1 public string ReceivedParam1 { get; set; } Property Value string ReceivedParam2 public string ReceivedParam2 { get; set; } Property Value string ReceivedParam3 public string ReceivedParam3 { get; set; } Property Value string ReceivedParam4 public string ReceivedParam4 { get; set; } Property Value string"
  },
  "api/MainRobot.Robot.Comunication.Model.ResponseSerialForward.html": {
    "href": "api/MainRobot.Robot.Comunication.Model.ResponseSerialForward.html",
    "title": "Class ResponseSerialForward | SCRAP.Net",
    "keywords": "Class ResponseSerialForward Namespace MainRobot.Robot.Comunication.Model Assembly MainRobot.dll public class ResponseSerialForward Inheritance object ResponseSerialForward Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Angle public int Angle { get; set; } Property Value int Completed public bool Completed { get; set; } Property Value bool DistanceObstacle public string DistanceObstacle { get; set; } Property Value string DistanceRunned public int DistanceRunned { get; set; } Property Value int"
  },
  "api/MainRobot.Robot.Comunication.Model.html": {
    "href": "api/MainRobot.Robot.Comunication.Model.html",
    "title": "Namespace MainRobot.Robot.Comunication.Model | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Comunication.Model Classes ComunicationCommand ComunicationCommandReceived ResponseSerialForward"
  },
  "api/MainRobot.Robot.Comunication.WebSocketTransport.ActionType.html": {
    "href": "api/MainRobot.Robot.Comunication.WebSocketTransport.ActionType.html",
    "title": "Class ActionType | SCRAP.Net",
    "keywords": "Class ActionType Namespace MainRobot.Robot.Comunication.WebSocketTransport Assembly MainRobot.dll public static class ActionType Inheritance object ActionType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Photobase64 public static string Photobase64 Field Value string Speak public static string Speak Field Value string"
  },
  "api/MainRobot.Robot.Comunication.WebSocketTransport.IWebSocketCommand.html": {
    "href": "api/MainRobot.Robot.Comunication.WebSocketTransport.IWebSocketCommand.html",
    "title": "Interface IWebSocketCommand | SCRAP.Net",
    "keywords": "Interface IWebSocketCommand Namespace MainRobot.Robot.Comunication.WebSocketTransport Assembly MainRobot.dll public interface IWebSocketCommand Methods Looks() Task<string?> Looks() Returns Task<string> Talk(string) Task Talk(string text) Parameters text string Returns Task"
  },
  "api/MainRobot.Robot.Comunication.WebSocketTransport.WebSocketCommand.html": {
    "href": "api/MainRobot.Robot.Comunication.WebSocketTransport.WebSocketCommand.html",
    "title": "Class WebSocketCommand | SCRAP.Net",
    "keywords": "Class WebSocketCommand Namespace MainRobot.Robot.Comunication.WebSocketTransport Assembly MainRobot.dll public class WebSocketCommand : IWebSocketCommand Inheritance object WebSocketCommand Implements IWebSocketCommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WebSocketCommand(IWebSocketServer) public WebSocketCommand(IWebSocketServer webSocket) Parameters webSocket IWebSocketServer Methods Looks() public Task<string?> Looks() Returns Task<string> Talk(string) public Task Talk(string text) Parameters text string Returns Task"
  },
  "api/MainRobot.Robot.Comunication.WebSocketTransport.WebSocketHandler.html": {
    "href": "api/MainRobot.Robot.Comunication.WebSocketTransport.WebSocketHandler.html",
    "title": "Class WebSocketHandler | SCRAP.Net",
    "keywords": "Class WebSocketHandler Namespace MainRobot.Robot.Comunication.WebSocketTransport Assembly MainRobot.dll public class WebSocketHandler Inheritance object WebSocketHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WebSocketHandler(INavigation, INavigationMover, IMovement, IHelperInvisibleWall, IActionExec, ITextToSpeach) public WebSocketHandler(INavigation navigation, INavigationMover navigationMover, IMovement movement, IHelperInvisibleWall invisibleWall, IActionExec actionExec, ITextToSpeach tts) Parameters navigation INavigation navigationMover INavigationMover movement IMovement invisibleWall IHelperInvisibleWall actionExec IActionExec tts ITextToSpeach Methods handler(WebSocketOutputData) public Task<WebSocketOutputData> handler(WebSocketOutputData input) Parameters input WebSocketOutputData Returns Task<WebSocketOutputData>"
  },
  "api/MainRobot.Robot.Comunication.WebSocketTransport.WebSocketOutputData.html": {
    "href": "api/MainRobot.Robot.Comunication.WebSocketTransport.WebSocketOutputData.html",
    "title": "Class WebSocketOutputData | SCRAP.Net",
    "keywords": "Class WebSocketOutputData Namespace MainRobot.Robot.Comunication.WebSocketTransport Assembly MainRobot.dll public class WebSocketOutputData Inheritance object WebSocketOutputData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties command public string command { get; set; } Property Value string data public string data { get; set; } Property Value string id public string id { get; set; } Property Value string"
  },
  "api/MainRobot.Robot.Comunication.WebSocketTransport.html": {
    "href": "api/MainRobot.Robot.Comunication.WebSocketTransport.html",
    "title": "Namespace MainRobot.Robot.Comunication.WebSocketTransport | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Comunication.WebSocketTransport Classes ActionType WebSocketCommand WebSocketHandler WebSocketOutputData Interfaces IWebSocketCommand"
  },
  "api/MainRobot.Robot.Comunication.html": {
    "href": "api/MainRobot.Robot.Comunication.html",
    "title": "Namespace MainRobot.Robot.Comunication | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Comunication Classes CommandComunication Implementazione comandi del robot per il movimento e la gestione delle funzionalità base CommandQueue"
  },
  "api/MainRobot.Robot.ControllerWeb.NavigationWebController.html": {
    "href": "api/MainRobot.Robot.ControllerWeb.NavigationWebController.html",
    "title": "Class NavigationWebController | SCRAP.Net",
    "keywords": "Class NavigationWebController Namespace MainRobot.Robot.ControllerWeb Assembly MainRobot.dll public class NavigationWebController Inheritance object NavigationWebController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NavigationWebController(INavigation, INavigationMover, IMovement, IHelperInvisibleWall, IActionExec, ITextToSpeach) public NavigationWebController(INavigation navigation, INavigationMover navigationMover, IMovement movement, IHelperInvisibleWall invisibleWall, IActionExec actionExec, ITextToSpeach tts) Parameters navigation INavigation navigationMover INavigationMover movement IMovement invisibleWall IHelperInvisibleWall actionExec IActionExec tts ITextToSpeach Methods AddWall(Dictionary<string, object>) Add wall to point [HttpMethod(\"GET\")] public object AddWall(Dictionary<string, object> data) Parameters data Dictionary<string, object> int x, int y Returns object Bck(Dictionary<string, object>) [HttpMethod(\"GET\")] public object Bck(Dictionary<string, object> data) Parameters data Dictionary<string, object> Returns object Fwd(Dictionary<string, object>) [HttpMethod(\"GET\")] public object Fwd(Dictionary<string, object> data) Parameters data Dictionary<string, object> Returns object GetObstacleInMap(Dictionary<string, object>) [HttpMethod(\"GET\")] public object GetObstacleInMap(Dictionary<string, object> data) Parameters data Dictionary<string, object> Returns object Lft(Dictionary<string, object>) [HttpMethod(\"GET\")] public object Lft(Dictionary<string, object> data) Parameters data Dictionary<string, object> Returns object NavigateTo(Dictionary<string, object>) Navigate to point [HttpMethod(\"GET\")] public object NavigateTo(Dictionary<string, object> data) Parameters data Dictionary<string, object> int x, int y Returns object ReadObstacleFromLidar(Dictionary<string, object>) [HttpMethod(\"GET\")] public object ReadObstacleFromLidar(Dictionary<string, object> data) Parameters data Dictionary<string, object> Returns object ReadRawLidar(Dictionary<string, object>) [HttpMethod(\"GET\")] public object ReadRawLidar(Dictionary<string, object> data) Parameters data Dictionary<string, object> Returns object Recharge(Dictionary<string, object>) novigate to recharge position [HttpMethod(\"GET\")] public object Recharge(Dictionary<string, object> data) Parameters data Dictionary<string, object> Returns object RemoveWall(Dictionary<string, object>) Remove wall at point [HttpMethod(\"GET\")] public object RemoveWall(Dictionary<string, object> data) Parameters data Dictionary<string, object> int x, int y Returns object Rht(Dictionary<string, object>) [HttpMethod(\"GET\")] public object Rht(Dictionary<string, object> data) Parameters data Dictionary<string, object> Returns object SentenceAction(Dictionary<string, object>) [HttpMethod(\"GET\")] public object SentenceAction(Dictionary<string, object> data) Parameters data Dictionary<string, object> Returns object SetPosition(Dictionary<string, object>) set position of robot [HttpMethod(\"GET\")] public object SetPosition(Dictionary<string, object> data) Parameters data Dictionary<string, object> int x, int y Returns object Talk(Dictionary<string, object>) [HttpMethod(\"GET\")] public object Talk(Dictionary<string, object> data) Parameters data Dictionary<string, object> Returns object"
  },
  "api/MainRobot.Robot.ControllerWeb.html": {
    "href": "api/MainRobot.Robot.ControllerWeb.html",
    "title": "Namespace MainRobot.Robot.ControllerWeb | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.ControllerWeb Classes NavigationWebController"
  },
  "api/MainRobot.Robot.CustomException.ExceptionRunCommand.html": {
    "href": "api/MainRobot.Robot.CustomException.ExceptionRunCommand.html",
    "title": "Class ExceptionRunCommand | SCRAP.Net",
    "keywords": "Class ExceptionRunCommand Namespace MainRobot.Robot.CustomException Assembly MainRobot.dll public class ExceptionRunCommand : Exception, ISerializable Inheritance object Exception ExceptionRunCommand Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExceptionRunCommand(string) public ExceptionRunCommand(string message) Parameters message string"
  },
  "api/MainRobot.Robot.CustomException.html": {
    "href": "api/MainRobot.Robot.CustomException.html",
    "title": "Namespace MainRobot.Robot.CustomException | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.CustomException Classes ExceptionRunCommand"
  },
  "api/MainRobot.Robot.Device.FakeSerial.html": {
    "href": "api/MainRobot.Robot.Device.FakeSerial.html",
    "title": "Class FakeSerial | SCRAP.Net",
    "keywords": "Class FakeSerial Namespace MainRobot.Robot.Device Assembly MainRobot.dll public class FakeSerial : ISerial Inheritance object FakeSerial Implements ISerial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FakeSerial(string?, bool?) public FakeSerial(string? fixedResponse = null, bool? remote = null) Parameters fixedResponse string remote bool? Methods CloseSerial() public void CloseSerial() OpenSerial(Action<string>) public void OpenSerial(Action<string> dataReceivedHandler) Parameters dataReceivedHandler Action<string> OpenSerialByte(string, int, Action<byte[]>) public void OpenSerialByte(string serialName, int speed, Action<byte[]> dataReceivedHandler) Parameters serialName string speed int dataReceivedHandler Action<byte[]> WriteLine(string) public void WriteLine(string message) Parameters message string"
  },
  "api/MainRobot.Robot.Device.ISerial.html": {
    "href": "api/MainRobot.Robot.Device.ISerial.html",
    "title": "Interface ISerial | SCRAP.Net",
    "keywords": "Interface ISerial Namespace MainRobot.Robot.Device Assembly MainRobot.dll public interface ISerial Methods CloseSerial() void CloseSerial() OpenSerial(Action<string>) void OpenSerial(Action<string> dataReceivedHandler) Parameters dataReceivedHandler Action<string> OpenSerialByte(string, int, Action<byte[]>) void OpenSerialByte(string serialName, int speed, Action<byte[]> dataReceivedHandler) Parameters serialName string speed int dataReceivedHandler Action<byte[]> WriteLine(string) void WriteLine(string message) Parameters message string"
  },
  "api/MainRobot.Robot.Device.IpCam.FakeIpCam.html": {
    "href": "api/MainRobot.Robot.Device.IpCam.FakeIpCam.html",
    "title": "Class FakeIpCam | SCRAP.Net",
    "keywords": "Class FakeIpCam Namespace MainRobot.Robot.Device.IpCam Assembly MainRobot.dll Class fake ipcam for emulator public class FakeIpCam : IIpCam Inheritance object FakeIpCam Implements IIpCam Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FakeIpCam() public FakeIpCam() Methods GetSnapshot() get snapshot for ipCam configured public Task<Image<Rgba32>> GetSnapshot() Returns Task<Image<Rgba32>> IsDark() check if image is dark public Task<bool> IsDark() Returns Task<bool> TryFindPointOfColor(Rgba32, Rgba32, short?) find color into image get from ipcam image public Task<RPoint> TryFindPointOfColor(Rgba32 color, Rgba32 tollerance, short? maxAttempts = 10) Parameters color Rgba32 tollerance Rgba32 maxAttempts short? Returns Task<RPoint>"
  },
  "api/MainRobot.Robot.Device.IpCam.IIpCam.html": {
    "href": "api/MainRobot.Robot.Device.IpCam.IIpCam.html",
    "title": "Interface IIpCam | SCRAP.Net",
    "keywords": "Interface IIpCam Namespace MainRobot.Robot.Device.IpCam Assembly MainRobot.dll public interface IIpCam Methods GetSnapshot() get snapshot for ipCam configured Task<Image<Rgba32>> GetSnapshot() Returns Task<Image<Rgba32>> IsDark() check if image is dark Task<bool> IsDark() Returns Task<bool> TryFindPointOfColor(Rgba32, Rgba32, short?) find color into image get from ipcam image Task<RPoint> TryFindPointOfColor(Rgba32 color, Rgba32 tollerance, short? maxAttempts = 10) Parameters color Rgba32 tollerance Rgba32 maxAttempts short? Returns Task<RPoint>"
  },
  "api/MainRobot.Robot.Device.IpCam.IpCam.html": {
    "href": "api/MainRobot.Robot.Device.IpCam.IpCam.html",
    "title": "Class IpCam | SCRAP.Net",
    "keywords": "Class IpCam Namespace MainRobot.Robot.Device.IpCam Assembly MainRobot.dll public class IpCam : IIpCam Inheritance object IpCam Implements IIpCam Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IpCam() public IpCam() Methods FindPointOfColor(Rgba32, Rgba32) public Task<RPoint> FindPointOfColor(Rgba32 color, Rgba32 tollerance) Parameters color Rgba32 tollerance Rgba32 Returns Task<RPoint> GetSnapshot() get snapshot for ipCam configured public Task<Image<Rgba32>> GetSnapshot() Returns Task<Image<Rgba32>> IsDark() check if image is dark public Task<bool> IsDark() Returns Task<bool> TryFindPointOfColor(Rgba32, Rgba32, short?) public Task<RPoint> TryFindPointOfColor(Rgba32 color, Rgba32 tollerance, short? maxAttempts = 10) Parameters color Rgba32 color rgb to find in image tollerance Rgba32 tollerance rgb to find a color maxAttempts short? max number of attempts , if no find color return nul Returns Task<RPoint>"
  },
  "api/MainRobot.Robot.Device.IpCam.html": {
    "href": "api/MainRobot.Robot.Device.IpCam.html",
    "title": "Namespace MainRobot.Robot.Device.IpCam | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Device.IpCam Classes FakeIpCam Class fake ipcam for emulator IpCam Interfaces IIpCam"
  },
  "api/MainRobot.Robot.Device.Lidar.ILidarManager.html": {
    "href": "api/MainRobot.Robot.Device.Lidar.ILidarManager.html",
    "title": "Interface ILidarManager | SCRAP.Net",
    "keywords": "Interface ILidarManager Namespace MainRobot.Robot.Device.Lidar Assembly MainRobot.dll public interface ILidarManager Methods FindAngleFromLidar(RPoint, IEnumerable<(int, float)>, IEnumerable<(int, float)>) int? FindAngleFromLidar(RPoint center, IEnumerable<(int, float)> before, IEnumerable<(int, float)> after) Parameters center RPoint before IEnumerable<(int, float)> after IEnumerable<(int, float)> Returns int? MapRawLidar(IEnumerable<(int, float)>?, Action<int, int>) IEnumerable<(int, float)>? MapRawLidar(IEnumerable<(int, float)>? rawData, Action<int, int> callbackPointReceived) Parameters rawData IEnumerable<(int, float)> callbackPointReceived Action<int, int> Returns IEnumerable<(int, float)> ReadLidar(Action<int, int>) Task<IEnumerable<(int, float)>?> ReadLidar(Action<int, int> callbackPointReceived) Parameters callbackPointReceived Action<int, int> Returns Task<IEnumerable<(int, float)>> ReadRawLidar() Task<IEnumerable<(int, float)>?> ReadRawLidar() Returns Task<IEnumerable<(int, float)>>"
  },
  "api/MainRobot.Robot.Device.Lidar.LidarManager.html": {
    "href": "api/MainRobot.Robot.Device.Lidar.LidarManager.html",
    "title": "Class LidarManager | SCRAP.Net",
    "keywords": "Class LidarManager Namespace MainRobot.Robot.Device.Lidar Assembly MainRobot.dll public class LidarManager : ILidarManager Inheritance object LidarManager Implements ILidarManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LidarManager(ICommandComunication) public LidarManager(ICommandComunication communication) Parameters communication ICommandComunication Methods FindAngleFromLidar(RPoint, IEnumerable<(int, float)>, IEnumerable<(int, float)>) public int? FindAngleFromLidar(RPoint center, IEnumerable<(int, float)> before, IEnumerable<(int, float)> after) Parameters center RPoint before IEnumerable<(int, float)> after IEnumerable<(int, float)> Returns int? MapRawLidar(IEnumerable<(int, float)>?, Action<int, int>) public IEnumerable<(int, float)>? MapRawLidar(IEnumerable<(int, float)>? rawData, Action<int, int> callbackPointReceived) Parameters rawData IEnumerable<(int, float)> callbackPointReceived Action<int, int> Returns IEnumerable<(int, float)> ReadLidar(Action<int, int>) il rilevamento dei punti viene fatto in base alla direzione del robot public Task<IEnumerable<(int, float)>?> ReadLidar(Action<int, int> callbackPointReceived) Parameters callbackPointReceived Action<int, int> Returns Task<IEnumerable<(int, float)>> ReadRawLidar() L'angolo è assoluto rispetto alla posizione del lidar , non rispetto alla direzione del robot public Task<IEnumerable<(int, float)>?> ReadRawLidar() Returns Task<IEnumerable<(int, float)>>"
  },
  "api/MainRobot.Robot.Device.Lidar.LidarUtility.html": {
    "href": "api/MainRobot.Robot.Device.Lidar.LidarUtility.html",
    "title": "Class LidarUtility | SCRAP.Net",
    "keywords": "Class LidarUtility Namespace MainRobot.Robot.Device.Lidar Assembly MainRobot.dll public static class LidarUtility Inheritance object LidarUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AutoPostiionFromLidar(IEnumerable<(int, float)>, Func<RPoint, int, bool>) public static RPoint? AutoPostiionFromLidar(IEnumerable<(int, float)> distances, Func<RPoint, int, bool> isPointOnWall) Parameters distances IEnumerable<(int, float)> isPointOnWall Func<RPoint, int, bool> Returns RPoint CalcolaRetta(RPoint, RPoint) public static (double pendenza, double intercetta)? CalcolaRetta(RPoint punto1, RPoint punto2) Parameters punto1 RPoint punto2 RPoint Returns (double pendenza, double intercetta)? CalculateLineAngle(double?) public static double? CalculateLineAngle(double? slope) Parameters slope double? Returns double? DistanceToPoints(RPoint, IEnumerable<(int, float)>?) public static IEnumerable<RPoint>? DistanceToPoints(RPoint current, IEnumerable<(int, float)>? distances) Parameters current RPoint distances IEnumerable<(int, float)> Returns IEnumerable<RPoint> GroupPointsByLine(IEnumerable<RPoint>) public static LinesInfo? GroupPointsByLine(IEnumerable<RPoint> points) Parameters points IEnumerable<RPoint> Returns LinesInfo"
  },
  "api/MainRobot.Robot.Device.Lidar.LinesInfo.html": {
    "href": "api/MainRobot.Robot.Device.Lidar.LinesInfo.html",
    "title": "Class LinesInfo | SCRAP.Net",
    "keywords": "Class LinesInfo Namespace MainRobot.Robot.Device.Lidar Assembly MainRobot.dll public class LinesInfo Inheritance object LinesInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Angle public double? Angle { get; set; } Property Value double? Intercept public double? Intercept { get; set; } Property Value double? Points public IEnumerable<RPoint> Points { get; set; } Property Value IEnumerable<RPoint> Slope public double? Slope { get; set; } Property Value double?"
  },
  "api/MainRobot.Robot.Device.Lidar.html": {
    "href": "api/MainRobot.Robot.Device.Lidar.html",
    "title": "Namespace MainRobot.Robot.Device.Lidar | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Device.Lidar Classes LidarManager LidarUtility LinesInfo Interfaces ILidarManager"
  },
  "api/MainRobot.Robot.Device.Serial.html": {
    "href": "api/MainRobot.Robot.Device.Serial.html",
    "title": "Class Serial | SCRAP.Net",
    "keywords": "Class Serial Namespace MainRobot.Robot.Device Assembly MainRobot.dll public class Serial : ISerial Inheritance object Serial Implements ISerial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CloseSerial() public void CloseSerial() OpenSerial(Action<string>) public void OpenSerial(Action<string> dataReceivedHandler) Parameters dataReceivedHandler Action<string> OpenSerialByte(string, int, Action<byte[]>) public void OpenSerialByte(string serialName, int speed, Action<byte[]> dataReceivedHandler) Parameters serialName string speed int dataReceivedHandler Action<byte[]> WriteLine(string) public void WriteLine(string message) Parameters message string"
  },
  "api/MainRobot.Robot.Device.html": {
    "href": "api/MainRobot.Robot.Device.html",
    "title": "Namespace MainRobot.Robot.Device | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Device Classes FakeSerial Serial Interfaces ISerial"
  },
  "api/MainRobot.Robot.IRobot.html": {
    "href": "api/MainRobot.Robot.IRobot.html",
    "title": "Interface IRobot | SCRAP.Net",
    "keywords": "Interface IRobot Namespace MainRobot.Robot Assembly MainRobot.dll public interface IRobot Methods InitRobot() Task InitRobot() Returns Task"
  },
  "api/MainRobot.Robot.LLM.HuggingFace.LLLMApiCall.html": {
    "href": "api/MainRobot.Robot.LLM.HuggingFace.LLLMApiCall.html",
    "title": "Class LLLMApiCall | SCRAP.Net",
    "keywords": "Class LLLMApiCall Namespace MainRobot.Robot.LLM.HuggingFace Assembly MainRobot.dll public class LLLMApiCall Inheritance object LLLMApiCall Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LLLMApiCall(string, string, string, string) public LLLMApiCall(string UrlLLM, string modelLLM, string token, string prompt) Parameters UrlLLM string modelLLM string token string prompt string Methods CallImage(string) public Task<string> CallImage(string sentence) Parameters sentence string Returns Task<string> CallPrompt(string) public Task<string> CallPrompt(string sentence) Parameters sentence string Returns Task<string>"
  },
  "api/MainRobot.Robot.LLM.HuggingFace.LLMHuggingFace.html": {
    "href": "api/MainRobot.Robot.LLM.HuggingFace.LLMHuggingFace.html",
    "title": "Class LLMHuggingFace | SCRAP.Net",
    "keywords": "Class LLMHuggingFace Namespace MainRobot.Robot.LLM.HuggingFace Assembly MainRobot.dll public class LLMHuggingFace : IIntentRecognition Inheritance object LLMHuggingFace Implements IIntentRecognition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LLMHuggingFace(ILLMRestCall) public LLMHuggingFace(ILLMRestCall llmRestCall) Parameters llmRestCall ILLMRestCall Methods Init() public void Init() ProcessIntent(string) public Task<List<IntentData>> ProcessIntent(string sentence) Parameters sentence string Returns Task<List<IntentData>>"
  },
  "api/MainRobot.Robot.LLM.HuggingFace.html": {
    "href": "api/MainRobot.Robot.LLM.HuggingFace.html",
    "title": "Namespace MainRobot.Robot.LLM.HuggingFace | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.LLM.HuggingFace Classes LLLMApiCall LLMHuggingFace"
  },
  "api/MainRobot.Robot.LogFileForEmulator.html": {
    "href": "api/MainRobot.Robot.LogFileForEmulator.html",
    "title": "Class LogFileForEmulator | SCRAP.Net",
    "keywords": "Class LogFileForEmulator Namespace MainRobot.Robot Assembly MainRobot.dll public static class LogFileForEmulator Inheritance object LogFileForEmulator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Write(string, string) public static void Write(string textJson, string fileName) Parameters textJson string fileName string WriteCommand(string, string) public static void WriteCommand(string command, string fileName) Parameters command string fileName string"
  },
  "api/MainRobot.Robot.NaturalLanguage.IIntentRecognition.html": {
    "href": "api/MainRobot.Robot.NaturalLanguage.IIntentRecognition.html",
    "title": "Interface IIntentRecognition | SCRAP.Net",
    "keywords": "Interface IIntentRecognition Namespace MainRobot.Robot.NaturalLanguage Assembly MainRobot.dll public interface IIntentRecognition Methods Init() void Init() ProcessIntent(string) Task<List<IntentData>> ProcessIntent(string sentence) Parameters sentence string Returns Task<List<IntentData>>"
  },
  "api/MainRobot.Robot.NaturalLanguage.Intent.IntentGoto.html": {
    "href": "api/MainRobot.Robot.NaturalLanguage.Intent.IntentGoto.html",
    "title": "Class IntentGoto | SCRAP.Net",
    "keywords": "Class IntentGoto Namespace MainRobot.Robot.NaturalLanguage.Intent Assembly MainRobot.dll {\"action\":\"GOTO\",\"destination\":STRING}\\n public class IntentGoto Inheritance object IntentGoto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties destination public string destination { get; set; } Property Value string"
  },
  "api/MainRobot.Robot.NaturalLanguage.Intent.IntentMove.html": {
    "href": "api/MainRobot.Robot.NaturalLanguage.Intent.IntentMove.html",
    "title": "Class IntentMove | SCRAP.Net",
    "keywords": "Class IntentMove Namespace MainRobot.Robot.NaturalLanguage.Intent Assembly MainRobot.dll {\"action\":\"move\",\"direction\":\"forward\",\"distance\":INT}\\n {\"action\":\"move\",\"direction\":\"backward\",\"distance\":INT}\\n {\"action\":\"move\",\"direction\":\"left\",\"angle\":INT}\\n {\"action\":\"move\",\"direction\":\"right\",\"angle\":INT}\\n public class IntentMove Inheritance object IntentMove Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties direction public string direction { get; set; } Property Value string distance public int distance { get; set; } Property Value int"
  },
  "api/MainRobot.Robot.NaturalLanguage.Intent.IntentSpeech.html": {
    "href": "api/MainRobot.Robot.NaturalLanguage.Intent.IntentSpeech.html",
    "title": "Class IntentSpeech | SCRAP.Net",
    "keywords": "Class IntentSpeech Namespace MainRobot.Robot.NaturalLanguage.Intent Assembly MainRobot.dll {\"action\":\"speech\",\"text\":STRING} public class IntentSpeech Inheritance object IntentSpeech Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties text public string text { get; set; } Property Value string"
  },
  "api/MainRobot.Robot.NaturalLanguage.Intent.html": {
    "href": "api/MainRobot.Robot.NaturalLanguage.Intent.html",
    "title": "Namespace MainRobot.Robot.NaturalLanguage.Intent | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.NaturalLanguage.Intent Classes IntentGoto {\"action\":\"GOTO\",\"destination\":STRING}\\n IntentMove {\"action\":\"move\",\"direction\":\"forward\",\"distance\":INT}\\n {\"action\":\"move\",\"direction\":\"backward\",\"distance\":INT}\\n {\"action\":\"move\",\"direction\":\"left\",\"angle\":INT}\\n {\"action\":\"move\",\"direction\":\"right\",\"angle\":INT}\\n IntentSpeech {\"action\":\"speech\",\"text\":STRING}"
  },
  "api/MainRobot.Robot.NaturalLanguage.IntentDefinition.html": {
    "href": "api/MainRobot.Robot.NaturalLanguage.IntentDefinition.html",
    "title": "Class IntentDefinition | SCRAP.Net",
    "keywords": "Class IntentDefinition Namespace MainRobot.Robot.NaturalLanguage Assembly MainRobot.dll public static class IntentDefinition Inheritance object IntentDefinition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ASK public static string ASK Field Value string GOTO public static string GOTO Field Value string MOVE public static string MOVE Field Value string REPEAT public static string REPEAT Field Value string"
  },
  "api/MainRobot.Robot.NaturalLanguage.SpacyNet.IntentData.html": {
    "href": "api/MainRobot.Robot.NaturalLanguage.SpacyNet.IntentData.html",
    "title": "Class IntentData | SCRAP.Net",
    "keywords": "Class IntentData Namespace MainRobot.Robot.NaturalLanguage.SpacyNet Assembly MainRobot.dll public class IntentData Inheritance object IntentData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Data public string Data { get; set; } Property Value string Intent public string Intent { get; set; } Property Value string"
  },
  "api/MainRobot.Robot.NaturalLanguage.SpacyNet.html": {
    "href": "api/MainRobot.Robot.NaturalLanguage.SpacyNet.html",
    "title": "Namespace MainRobot.Robot.NaturalLanguage.SpacyNet | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.NaturalLanguage.SpacyNet Classes IntentData"
  },
  "api/MainRobot.Robot.NaturalLanguage.html": {
    "href": "api/MainRobot.Robot.NaturalLanguage.html",
    "title": "Namespace MainRobot.Robot.NaturalLanguage | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.NaturalLanguage Classes IntentDefinition Interfaces IIntentRecognition"
  },
  "api/MainRobot.Robot.Navigation.Astar.Astar.html": {
    "href": "api/MainRobot.Robot.Navigation.Astar.Astar.html",
    "title": "Class Astar | SCRAP.Net",
    "keywords": "Class Astar Namespace MainRobot.Robot.Navigation.Astar Assembly MainRobot.dll public class Astar : IAstar Inheritance object Astar Implements IAstar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Astar(IHelperInvisibleWall) public Astar(IHelperInvisibleWall helperInvisbleWall = null) Parameters helperInvisbleWall IHelperInvisibleWall Fields obstacleInMap public bool[,] obstacleInMap Field Value bool[,] Properties AstarWeight public List<Weight> AstarWeight { get; } Property Value List<Weight> Methods CalculateScore(Path) public double CalculateScore(Path p) Parameters p Path Returns double CalculateValidity(Path) public bool CalculateValidity(Path p) Parameters p Path Returns bool ClearObstacle() public void ClearObstacle() FindClosest(Path) public List<Path> FindClosest(Path p) Parameters p Path Returns List<Path> FindPath(RPoint, RPoint) public Path FindPath(RPoint s, RPoint e) Parameters s RPoint e RPoint Returns Path GetObstacleInMap() public bool[,] GetObstacleInMap() Returns bool[,] IsObstacle(RPoint) public bool IsObstacle(RPoint point) Parameters point RPoint Returns bool IsWall(RPoint, int) public bool IsWall(RPoint point, int tolerance) Parameters point RPoint tolerance int Returns bool ObstacleAdd(RPoint) Set obstacle in map but not change weight public void ObstacleAdd(RPoint point) Parameters point RPoint ObstacleEncountered(RPoint) public void ObstacleEncountered(RPoint point) Parameters point RPoint Search() public Path Search() Returns Path SetWeight(RPoint, bool) public void SetWeight(RPoint point, bool increment) Parameters point RPoint increment bool SetWeightPoints(IEnumerable<RPoint>, bool) public void SetWeightPoints(IEnumerable<RPoint> points, bool increment) Parameters points IEnumerable<RPoint> increment bool"
  },
  "api/MainRobot.Robot.Navigation.Astar.IAstar.html": {
    "href": "api/MainRobot.Robot.Navigation.Astar.IAstar.html",
    "title": "Interface IAstar | SCRAP.Net",
    "keywords": "Interface IAstar Namespace MainRobot.Robot.Navigation.Astar Assembly MainRobot.dll public interface IAstar Methods ClearObstacle() void ClearObstacle() FindPath(RPoint, RPoint) Path FindPath(RPoint s, RPoint e) Parameters s RPoint e RPoint Returns Path GetObstacleInMap() bool[,] GetObstacleInMap() Returns bool[,] IsObstacle(RPoint) bool IsObstacle(RPoint point) Parameters point RPoint Returns bool IsWall(RPoint, int) bool IsWall(RPoint point, int tolerance) Parameters point RPoint tolerance int Returns bool ObstacleAdd(RPoint) Set obstacle in map but not change weight void ObstacleAdd(RPoint point) Parameters point RPoint ObstacleEncountered(RPoint) void ObstacleEncountered(RPoint point) Parameters point RPoint SetWeight(RPoint, bool) void SetWeight(RPoint point, bool increment) Parameters point RPoint increment bool SetWeightPoints(IEnumerable<RPoint>, bool) void SetWeightPoints(IEnumerable<RPoint> points, bool increment) Parameters points IEnumerable<RPoint> increment bool"
  },
  "api/MainRobot.Robot.Navigation.Astar.Path.html": {
    "href": "api/MainRobot.Robot.Navigation.Astar.Path.html",
    "title": "Class Path | SCRAP.Net",
    "keywords": "Class Path Namespace MainRobot.Robot.Navigation.Astar Assembly MainRobot.dll public class Path Inheritance object Path Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Path(RPoint) public Path(RPoint p) Parameters p RPoint Path(PointPath) public Path(PointPath p) Parameters p PointPath Fields CurrentPoint public PointPath CurrentPoint Field Value PointPath Order public int Order Field Value int Parent public Path Parent Field Value Path PathPoint public List<PointPath> PathPoint Field Value List<PointPath> Score public double Score Field Value double Tentative_G public int Tentative_G Field Value int"
  },
  "api/MainRobot.Robot.Navigation.Astar.PointPath.html": {
    "href": "api/MainRobot.Robot.Navigation.Astar.PointPath.html",
    "title": "Class PointPath | SCRAP.Net",
    "keywords": "Class PointPath Namespace MainRobot.Robot.Navigation.Astar Assembly MainRobot.dll public class PointPath Inheritance object PointPath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PointPath(int, int) public PointPath(int x, int y) Parameters x int y int Fields X public int X Field Value int Y public int Y Field Value int w public int w Field Value int"
  },
  "api/MainRobot.Robot.Navigation.Astar.TempObstacle.html": {
    "href": "api/MainRobot.Robot.Navigation.Astar.TempObstacle.html",
    "title": "Class TempObstacle | SCRAP.Net",
    "keywords": "Class TempObstacle Namespace MainRobot.Robot.Navigation.Astar Assembly MainRobot.dll public class TempObstacle Inheritance object TempObstacle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public int Id { get; set; } Property Value int X public int X { get; set; } Property Value int Y public int Y { get; set; } Property Value int"
  },
  "api/MainRobot.Robot.Navigation.Astar.Weight.html": {
    "href": "api/MainRobot.Robot.Navigation.Astar.Weight.html",
    "title": "Class Weight | SCRAP.Net",
    "keywords": "Class Weight Namespace MainRobot.Robot.Navigation.Astar Assembly MainRobot.dll public class Weight Inheritance object Weight Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties W public int W { get; set; } Property Value int X public int X { get; set; } Property Value int Y public int Y { get; set; } Property Value int"
  },
  "api/MainRobot.Robot.Navigation.Astar.html": {
    "href": "api/MainRobot.Robot.Navigation.Astar.html",
    "title": "Namespace MainRobot.Robot.Navigation.Astar | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Navigation.Astar Classes Astar Path PointPath TempObstacle Weight Interfaces IAstar"
  },
  "api/MainRobot.Robot.Navigation.Helpers.HelperInvisibleWall.html": {
    "href": "api/MainRobot.Robot.Navigation.Helpers.HelperInvisibleWall.html",
    "title": "Class HelperInvisibleWall | SCRAP.Net",
    "keywords": "Class HelperInvisibleWall Namespace MainRobot.Robot.Navigation.Helpers Assembly MainRobot.dll public class HelperInvisibleWall : IHelperInvisibleWall Inheritance object HelperInvisibleWall Implements IHelperInvisibleWall Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HelperInvisibleWall() public HelperInvisibleWall() Methods Add(RPoint) public void Add(RPoint point) Parameters point RPoint Find(RPoint) public bool Find(RPoint point) Parameters point RPoint Returns bool Load() public void Load() Remove(RPoint) public void Remove(RPoint point) Parameters point RPoint Save() public void Save()"
  },
  "api/MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall.html": {
    "href": "api/MainRobot.Robot.Navigation.Helpers.IHelperInvisibleWall.html",
    "title": "Interface IHelperInvisibleWall | SCRAP.Net",
    "keywords": "Interface IHelperInvisibleWall Namespace MainRobot.Robot.Navigation.Helpers Assembly MainRobot.dll public interface IHelperInvisibleWall Methods Add(RPoint) void Add(RPoint point) Parameters point RPoint Find(RPoint) bool Find(RPoint point) Parameters point RPoint Returns bool Load() void Load() Remove(RPoint) void Remove(RPoint point) Parameters point RPoint Save() void Save()"
  },
  "api/MainRobot.Robot.Navigation.Helpers.html": {
    "href": "api/MainRobot.Robot.Navigation.Helpers.html",
    "title": "Namespace MainRobot.Robot.Navigation.Helpers | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Navigation.Helpers Classes HelperInvisibleWall Interfaces IHelperInvisibleWall"
  },
  "api/MainRobot.Robot.Navigation.Interface.IMovement.html": {
    "href": "api/MainRobot.Robot.Navigation.Interface.IMovement.html",
    "title": "Interface IMovement | SCRAP.Net",
    "keywords": "Interface IMovement Namespace MainRobot.Robot.Navigation.Interface Assembly MainRobot.dll public interface IMovement Methods Backward(int) move backward Task<EndMovModel> Backward(int distance) Parameters distance int Returns Task<EndMovModel> EnableMoviment() Task EnableMoviment() Returns Task Forward(int) Task<EndMovModel> Forward(int distance) Parameters distance int Returns Task<EndMovModel> ObstacleFinded(string, int, int, int) RPoint ObstacleFinded(string distance, int angle, int distanceForward, int backward) Parameters distance string angle int distanceForward int backward int Returns RPoint Rotate(bool, int) Rotate robot left or right Task<EndMovModel> Rotate(bool left, int deltaAngle) Parameters left bool true for left false for Right deltaAngle int Returns Task<EndMovModel> RotateXCell(int) Task RotateXCell(int angle) Parameters angle int Returns Task RotateYCell(int) Task RotateYCell(int angle) Parameters angle int Returns Task SetObstacle(int, int) void SetObstacle(int x, int y) Parameters x int y int Stop() Stop Task Stop() Returns Task TurnLeft(int, int) Rotate Robot to left Task<EndMovModel> TurnLeft(int angleToStop, int deltaAngle) Parameters angleToStop int deltaAngle int Returns Task<EndMovModel> TurnRight(int, int) Rotate Robot to right Task<EndMovModel> TurnRight(int angleToStop, int deltaAngle) Parameters angleToStop int deltaAngle int Returns Task<EndMovModel>"
  },
  "api/MainRobot.Robot.Navigation.Interface.INavigation.html": {
    "href": "api/MainRobot.Robot.Navigation.Interface.INavigation.html",
    "title": "Interface INavigation | SCRAP.Net",
    "keywords": "Interface INavigation Namespace MainRobot.Robot.Navigation.Interface Assembly MainRobot.dll public interface INavigation Methods GetObstacleInMap() bool[,] GetObstacleInMap() Returns bool[,] NavigateTo(RPoint, bool?, bool?) Navigate to point Task NavigateTo(RPoint end, bool? isForRecharge = false, bool? continueNavigation = false) Parameters end RPoint Point to navigate isForRecharge bool? continueNavigation bool? Returns Task NavigateToRecharge() Navigate to recharge position Task NavigateToRecharge() Returns Task ReadObstacleFromLidar() Task<IEnumerable<(int, float)>?> ReadObstacleFromLidar() Returns Task<IEnumerable<(int, float)>> ReadRawLidar() Task<IEnumerable<(int, float)>?> ReadRawLidar() Returns Task<IEnumerable<(int, float)>> ResetNavigation(RPoint?, bool?) Stop navigation and restart Task ResetNavigation(RPoint? endPoint = null, bool? isForRecharge = false) Parameters endPoint RPoint isForRecharge bool? Returns Task"
  },
  "api/MainRobot.Robot.Navigation.Interface.INavigationMover.html": {
    "href": "api/MainRobot.Robot.Navigation.Interface.INavigationMover.html",
    "title": "Interface INavigationMover | SCRAP.Net",
    "keywords": "Interface INavigationMover Namespace MainRobot.Robot.Navigation.Interface Assembly MainRobot.dll public interface INavigationMover Methods Backward(int) Task<EndMovModel> Backward(int distance) Parameters distance int Returns Task<EndMovModel> Forward(int) Task<EndMovModel> Forward(int distance) Parameters distance int Returns Task<EndMovModel> Rotate(bool, int) Task<EndMovModel> Rotate(bool left, int deltaAngle) Parameters left bool deltaAngle int Returns Task<EndMovModel> UpdatePosition(RPoint, int) void UpdatePosition(RPoint nextPoint, int angle) Parameters nextPoint RPoint angle int"
  },
  "api/MainRobot.Robot.Navigation.Interface.IPathFinding.html": {
    "href": "api/MainRobot.Robot.Navigation.Interface.IPathFinding.html",
    "title": "Interface IPathFinding | SCRAP.Net",
    "keywords": "Interface IPathFinding Namespace MainRobot.Robot.Navigation.Interface Assembly MainRobot.dll public interface IPathFinding Methods ClearObstacle() clear all obstacle void ClearObstacle() FindPath(RPoint, RPoint) Calculate the path from a starting point to a destination using an A* algorithm List<RPoint> FindPath(RPoint start, RPoint end) Parameters start RPoint end RPoint Returns List<RPoint> GetObstacleInMap() Return all obstacle in map bool[,] GetObstacleInMap() Returns bool[,] IsObstacle(RPoint) bool IsObstacle(RPoint point) Parameters point RPoint Returns bool IsWall(RPoint, int) bool IsWall(RPoint point, int tolerance) Parameters point RPoint tolerance int Returns bool ObstacleAdd(RPoint) Set obstacle at point specified without change weight void ObstacleAdd(RPoint point) Parameters point RPoint ObstacleEncountered(RPoint) Set obstacle at point specified void ObstacleEncountered(RPoint point) Parameters point RPoint SetWeight(RPoint, bool) Increment weight of a point void SetWeight(RPoint point, bool increment) Parameters point RPoint increment bool SetWeightPoints(IEnumerable<RPoint>, bool) Set weight of list points void SetWeightPoints(IEnumerable<RPoint> points, bool increment) Parameters points IEnumerable<RPoint> increment bool"
  },
  "api/MainRobot.Robot.Navigation.Interface.html": {
    "href": "api/MainRobot.Robot.Navigation.Interface.html",
    "title": "Namespace MainRobot.Robot.Navigation.Interface | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Navigation.Interface Interfaces IMovement INavigation INavigationMover IPathFinding"
  },
  "api/MainRobot.Robot.Navigation.Model.DoMovimentEndModel.html": {
    "href": "api/MainRobot.Robot.Navigation.Model.DoMovimentEndModel.html",
    "title": "Class DoMovimentEndModel | SCRAP.Net",
    "keywords": "Class DoMovimentEndModel Namespace MainRobot.Robot.Navigation.Model Assembly MainRobot.dll public class DoMovimentEndModel Inheritance object DoMovimentEndModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Angle public int Angle { get; set; } Property Value int AngleMoved public int? AngleMoved { get; } Property Value int? EndMovModel public EndMovModel EndMovModel { get; set; } Property Value EndMovModel NextMovement public bool NextMovement { get; set; } Property Value bool Point public RPoint Point { get; set; } Property Value RPoint"
  },
  "api/MainRobot.Robot.Navigation.Model.EndMovModel.html": {
    "href": "api/MainRobot.Robot.Navigation.Model.EndMovModel.html",
    "title": "Class EndMovModel | SCRAP.Net",
    "keywords": "Class EndMovModel Namespace MainRobot.Robot.Navigation.Model Assembly MainRobot.dll public class EndMovModel Inheritance object EndMovModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Angle public int Angle { get; set; } Property Value int Completed public bool Completed { get; set; } Property Value bool Point public RPoint Point { get; set; } Property Value RPoint Recalculate public bool Recalculate { get; set; } Property Value bool Skipped public bool Skipped { get; set; } Property Value bool"
  },
  "api/MainRobot.Robot.Navigation.Model.html": {
    "href": "api/MainRobot.Robot.Navigation.Model.html",
    "title": "Namespace MainRobot.Robot.Navigation.Model | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Navigation.Model Classes DoMovimentEndModel EndMovModel"
  },
  "api/MainRobot.Robot.Navigation.Movement.html": {
    "href": "api/MainRobot.Robot.Navigation.Movement.html",
    "title": "Class Movement | SCRAP.Net",
    "keywords": "Class Movement Namespace MainRobot.Robot.Navigation Assembly MainRobot.dll public class Movement : IMovement Inheritance object Movement Implements IMovement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Movement(ICommandComunication, IPathFinding) public Movement(ICommandComunication comunication, IPathFinding pathFinding) Parameters comunication ICommandComunication pathFinding IPathFinding Fields AutoPositionCheck public bool AutoPositionCheck Field Value bool MoveToAutoPositionCheck public bool MoveToAutoPositionCheck Field Value bool RecalculatePath public bool RecalculatePath Field Value bool distanceFrontSensor public int distanceFrontSensor Field Value int Methods Backward(int) move backward public Task<EndMovModel> Backward(int distance) Parameters distance int Returns Task<EndMovModel> EnableMoviment() public Task EnableMoviment() Returns Task Forward(int) public Task<EndMovModel> Forward(int distance) Parameters distance int Returns Task<EndMovModel> ObstacleFinded(string, int, int, int) This method is called when an obstacle encountering an obstacle on the road, Collisions are checked with bump sensor or ultrasonic sensor public RPoint ObstacleFinded(string distance, int angle, int distanceForward, int backward) Parameters distance string 999;0;0 => left bump sensor pressed; 0;0;999 => right bump sensor pressed; 50;20;0 => [0] left distance from ultrasonic sensor [1] center distance from ultrasonic sensor [2] right distance from right ultrasonic sensor angle int distanceForward int backward int Returns RPoint Rotate(bool, int) Rotate robot of deltaAngle public Task<EndMovModel> Rotate(bool left, int deltaAngle) Parameters left bool if true turn left deltaAngle int angle to rotate Returns Task<EndMovModel> RotateXCell(int) public Task RotateXCell(int angle) Parameters angle int Returns Task RotateYCell(int) public Task RotateYCell(int angle) Parameters angle int Returns Task SetObstacle(int, int) public void SetObstacle(int x, int y) Parameters x int y int Stop() Stop public Task Stop() Returns Task TurnLeft(int, int) Rotate Robot to left public Task<EndMovModel> TurnLeft(int angleToStop, int deltaAngle) Parameters angleToStop int deltaAngle int Returns Task<EndMovModel> TurnRight(int, int) Rotate Robot to right public Task<EndMovModel> TurnRight(int angleToStop, int deltaAngle) Parameters angleToStop int deltaAngle int Returns Task<EndMovModel>"
  },
  "api/MainRobot.Robot.Navigation.Navigation.html": {
    "href": "api/MainRobot.Robot.Navigation.Navigation.html",
    "title": "Class Navigation | SCRAP.Net",
    "keywords": "Class Navigation Namespace MainRobot.Robot.Navigation Assembly MainRobot.dll Class to find path and navigate public class Navigation : INavigation Inheritance object Navigation Implements INavigation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Navigation(INavigationMover, IMovement, ICommandComunication, IRechargeManager, ILidarManager, IPathFinding, ITextToSpeach, IIpCam) public Navigation(INavigationMover navigationMover, IMovement movement, ICommandComunication comunication, IRechargeManager rechargeManager, ILidarManager lidarManager, IPathFinding pathFinding, ITextToSpeach textToSpeach, IIpCam ipCam) Parameters navigationMover INavigationMover movement IMovement Class for moviment comunication ICommandComunication Class for comunication rechargeManager IRechargeManager lidarManager ILidarManager pathFinding IPathFinding Class for pathfinding textToSpeach ITextToSpeach class for speach ipCam IIpCam class for ipcam Methods GetObstacleInMap() public bool[,] GetObstacleInMap() Returns bool[,] NavigateTo(RPoint, bool?, bool?) search path and navigate to point public Task NavigateTo(RPoint end, bool? isForRecharge = false, bool? continueNavigation = false) Parameters end RPoint isForRecharge bool? continueNavigation bool? Returns Task NavigateToRecharge() Si muove fino alla posizione da dove deve iniziare l'avvicinamento alla ricarica public Task NavigateToRecharge() Returns Task ReadObstacleFromLidar() public Task<IEnumerable<(int, float)>?> ReadObstacleFromLidar() Returns Task<IEnumerable<(int, float)>> ReadRawLidar() public Task<IEnumerable<(int, float)>?> ReadRawLidar() Returns Task<IEnumerable<(int, float)>> ResetNavigation(RPoint?, bool?) Stop current navigation and restart new navigation public Task ResetNavigation(RPoint? endPoint = null, bool? isForRecharge = false) Parameters endPoint RPoint Facoltative if is null destination is endPosition isForRecharge bool? Returns Task"
  },
  "api/MainRobot.Robot.Navigation.NavigationMover.html": {
    "href": "api/MainRobot.Robot.Navigation.NavigationMover.html",
    "title": "Class NavigationMover | SCRAP.Net",
    "keywords": "Class NavigationMover Namespace MainRobot.Robot.Navigation Assembly MainRobot.dll public class NavigationMover : INavigationMover Inheritance object NavigationMover Implements INavigationMover Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NavigationMover(IMovement) public NavigationMover(IMovement movement) Parameters movement IMovement Methods Backward(int) public Task<EndMovModel> Backward(int distance) Parameters distance int Returns Task<EndMovModel> Forward(int) move forward public Task<EndMovModel> Forward(int distance) Parameters distance int Returns Task<EndMovModel> Rotate(bool, int) rotate public Task<EndMovModel> Rotate(bool left, int deltaAngle) Parameters left bool deltaAngle int Returns Task<EndMovModel> UpdatePosition(RPoint, int) update current position and angle public void UpdatePosition(RPoint nextPoint, int angle) Parameters nextPoint RPoint angle int"
  },
  "api/MainRobot.Robot.Navigation.PathFinding.html": {
    "href": "api/MainRobot.Robot.Navigation.PathFinding.html",
    "title": "Class PathFinding | SCRAP.Net",
    "keywords": "Class PathFinding Namespace MainRobot.Robot.Navigation Assembly MainRobot.dll public class PathFinding : IPathFinding Inheritance object PathFinding Implements IPathFinding Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PathFinding(IAstar) public PathFinding(IAstar pathFinding) Parameters pathFinding IAstar Methods ClearObstacle() clear all obstacle public void ClearObstacle() FindPath(RPoint, RPoint) Calculate the path from a starting point to a destination using an A* algorithm public List<RPoint> FindPath(RPoint start, RPoint end) Parameters start RPoint end RPoint Returns List<RPoint> GetObstacleInMap() Return all obstacle in map public bool[,] GetObstacleInMap() Returns bool[,] IsObstacle(RPoint) public bool IsObstacle(RPoint point) Parameters point RPoint Returns bool IsWall(RPoint, int) public bool IsWall(RPoint point, int tolerance) Parameters point RPoint tolerance int Returns bool ObstacleAdd(RPoint) Set obstacle at point specified without change weight public void ObstacleAdd(RPoint point) Parameters point RPoint ObstacleEncountered(RPoint) Set obstacle at point specified public void ObstacleEncountered(RPoint point) Parameters point RPoint SetWeight(RPoint, bool) Increment weight of a point public void SetWeight(RPoint point, bool increment) Parameters point RPoint increment bool SetWeightPoints(IEnumerable<RPoint>, bool) Set weight of list points public void SetWeightPoints(IEnumerable<RPoint> points, bool increment) Parameters points IEnumerable<RPoint> increment bool"
  },
  "api/MainRobot.Robot.Navigation.Recharge.Interface.IRechargeManager.html": {
    "href": "api/MainRobot.Robot.Navigation.Recharge.Interface.IRechargeManager.html",
    "title": "Interface IRechargeManager | SCRAP.Net",
    "keywords": "Interface IRechargeManager Namespace MainRobot.Robot.Navigation.Recharge.Interface Assembly MainRobot.dll public interface IRechargeManager Methods ExitFromRecharge() Task ExitFromRecharge() Returns Task NavigateToRecharge() Task NavigateToRecharge() Returns Task PlaceInRecharge() Task PlaceInRecharge() Returns Task"
  },
  "api/MainRobot.Robot.Navigation.Recharge.Interface.IRechargeNavigation.html": {
    "href": "api/MainRobot.Robot.Navigation.Recharge.Interface.IRechargeNavigation.html",
    "title": "Interface IRechargeNavigation | SCRAP.Net",
    "keywords": "Interface IRechargeNavigation Namespace MainRobot.Robot.Navigation.Recharge.Interface Assembly MainRobot.dll public interface IRechargeNavigation Methods StartPositioningInRecharge() Task StartPositioningInRecharge() Returns Task"
  },
  "api/MainRobot.Robot.Navigation.Recharge.Interface.html": {
    "href": "api/MainRobot.Robot.Navigation.Recharge.Interface.html",
    "title": "Namespace MainRobot.Robot.Navigation.Recharge.Interface | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Navigation.Recharge.Interface Interfaces IRechargeManager IRechargeNavigation"
  },
  "api/MainRobot.Robot.Navigation.Recharge.RechargeManager.html": {
    "href": "api/MainRobot.Robot.Navigation.Recharge.RechargeManager.html",
    "title": "Class RechargeManager | SCRAP.Net",
    "keywords": "Class RechargeManager Namespace MainRobot.Robot.Navigation.Recharge Assembly MainRobot.dll public class RechargeManager : IRechargeManager Inheritance object RechargeManager Implements IRechargeManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RechargeManager(INavigationMover, ICommandComunication, IRechargeNavigation) public RechargeManager(INavigationMover navigationMover, ICommandComunication comunication, IRechargeNavigation rechargeNavigation) Parameters navigationMover INavigationMover comunication ICommandComunication rechargeNavigation IRechargeNavigation Methods ExitFromRecharge() public Task ExitFromRecharge() Returns Task NavigateToRecharge() Inizia l'avvicinamento alla base di ricarica public Task NavigateToRecharge() Returns Task PlaceInRecharge() il robot è arrivato in ricarica setto gli stati in ricarica public Task PlaceInRecharge() Returns Task"
  },
  "api/MainRobot.Robot.Navigation.Recharge.RechargeNavigation.html": {
    "href": "api/MainRobot.Robot.Navigation.Recharge.RechargeNavigation.html",
    "title": "Class RechargeNavigation | SCRAP.Net",
    "keywords": "Class RechargeNavigation Namespace MainRobot.Robot.Navigation.Recharge Assembly MainRobot.dll public class RechargeNavigation : IRechargeNavigation Inheritance object RechargeNavigation Implements IRechargeNavigation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RechargeNavigation(INavigationMover, IMovement, ICommandComunication, ITextToSpeach, IIpCam) public RechargeNavigation(INavigationMover navigationMover, IMovement movement, ICommandComunication comunication, ITextToSpeach textToSpeach, IIpCam ipcam) Parameters navigationMover INavigationMover movement IMovement comunication ICommandComunication textToSpeach ITextToSpeach ipcam IIpCam Methods RotateToAngleStartRecharge() public Task<bool> RotateToAngleStartRecharge() Returns Task<bool> StartPositioningInRecharge() Esegue i movimenti di avvicinamento fino alla base di ricarica public Task StartPositioningInRecharge() Returns Task centerOnBaseChargeDirection(bool) public Task centerOnBaseChargeDirection(bool small) Parameters small bool Returns Task centerOnBaseLateralLed() public Task centerOnBaseLateralLed() Returns Task rotateToFindCentralLed(bool) public Task<RPoint> rotateToFindCentralLed(bool left) Parameters left bool Returns Task<RPoint> startApproach() public Task startApproach() Returns Task"
  },
  "api/MainRobot.Robot.Navigation.Recharge.html": {
    "href": "api/MainRobot.Robot.Navigation.Recharge.html",
    "title": "Namespace MainRobot.Robot.Navigation.Recharge | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Navigation.Recharge Classes RechargeManager RechargeNavigation"
  },
  "api/MainRobot.Robot.Navigation.html": {
    "href": "api/MainRobot.Robot.Navigation.html",
    "title": "Namespace MainRobot.Robot.Navigation | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Navigation Classes Movement Navigation Class to find path and navigate NavigationMover PathFinding"
  },
  "api/MainRobot.Robot.Robot.html": {
    "href": "api/MainRobot.Robot.Robot.html",
    "title": "Class Robot | SCRAP.Net",
    "keywords": "Class Robot Namespace MainRobot.Robot Assembly MainRobot.dll Main class robot public class Robot : IRobot Inheritance object Robot Implements IRobot Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Robot(INavigation, IRechargeManager, ITextToSpeach, IBatteryManager, ICommandComunication) public Robot(INavigation navigation, IRechargeManager rechargeMaanger, ITextToSpeach textToSpeach, IBatteryManager batteryManager, ICommandComunication comunication) Parameters navigation INavigation rechargeMaanger IRechargeManager textToSpeach ITextToSpeach batteryManager IBatteryManager comunication ICommandComunication Methods InitRobot() Set initial status of robot public Task InitRobot() Returns Task"
  },
  "api/MainRobot.Robot.Room.IRoomInfo.html": {
    "href": "api/MainRobot.Robot.Room.IRoomInfo.html",
    "title": "Interface IRoomInfo | SCRAP.Net",
    "keywords": "Interface IRoomInfo Namespace MainRobot.Robot.Room Assembly MainRobot.dll public interface IRoomInfo Methods GetPointRoom(string) RPoint? GetPointRoom(string room) Parameters room string Returns RPoint"
  },
  "api/MainRobot.Robot.Room.RoomInfo.html": {
    "href": "api/MainRobot.Robot.Room.RoomInfo.html",
    "title": "Class RoomInfo | SCRAP.Net",
    "keywords": "Class RoomInfo Namespace MainRobot.Robot.Room Assembly MainRobot.dll public class RoomInfo : IRoomInfo Inheritance object RoomInfo Implements IRoomInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RoomInfo() public RoomInfo() Methods GetPointRoom(string) public RPoint? GetPointRoom(string room) Parameters room string Returns RPoint"
  },
  "api/MainRobot.Robot.Room.html": {
    "href": "api/MainRobot.Robot.Room.html",
    "title": "Namespace MainRobot.Robot.Room | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.Room Classes RoomInfo Interfaces IRoomInfo"
  },
  "api/MainRobot.Robot.WebSocket.RobotWebSocketHandler.html": {
    "href": "api/MainRobot.Robot.WebSocket.RobotWebSocketHandler.html",
    "title": "Class RobotWebSocketHandler | SCRAP.Net",
    "keywords": "Class RobotWebSocketHandler Namespace MainRobot.Robot.WebSocket Assembly MainRobot.dll public class RobotWebSocketHandler : IWebSocketHandler Inheritance object RobotWebSocketHandler Implements IWebSocketHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RobotWebSocketHandler(IActionExec) public RobotWebSocketHandler(IActionExec actionExec) Parameters actionExec IActionExec Methods Exec(WebSocketOutputData?) public WebSocketOutputData? Exec(WebSocketOutputData? dataReceived) Parameters dataReceived WebSocketOutputData Returns WebSocketOutputData"
  },
  "api/MainRobot.Robot.WebSocket.html": {
    "href": "api/MainRobot.Robot.WebSocket.html",
    "title": "Namespace MainRobot.Robot.WebSocket | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot.WebSocket Classes RobotWebSocketHandler"
  },
  "api/MainRobot.Robot.html": {
    "href": "api/MainRobot.Robot.html",
    "title": "Namespace MainRobot.Robot | SCRAP.Net",
    "keywords": "Namespace MainRobot.Robot Classes LogFileForEmulator Robot Main class robot Interfaces IRobot"
  },
  "api/MainRobot.RobotConfiguration.html": {
    "href": "api/MainRobot.RobotConfiguration.html",
    "title": "Class RobotConfiguration | SCRAP.Net",
    "keywords": "Class RobotConfiguration Namespace MainRobot Assembly MainRobot.dll public static class RobotConfiguration Inheritance object RobotConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ANGLE_CORRECTION_LIDAR fixed correction of calculated angle from lidar public static int ANGLE_CORRECTION_LIDAR Field Value int AngleStartRecharge Angle to start recharge base public static int AngleStartRecharge Field Value int HALF_HEIGHT_ROBOT half height of robot in cm public static int HALF_HEIGHT_ROBOT Field Value int HALF_WIDTH_ROBOT half width of robot in cm public static int HALF_WIDTH_ROBOT Field Value int HAVE_LIDAR true if robot have a lidar public static bool HAVE_LIDAR Field Value bool HEIGHT_MAP max heeight of map in cm public static int HEIGHT_MAP Field Value int LOG_FILE_EMULATOR used to the emulator to write the path calculation to the path.json file public static bool LOG_FILE_EMULATOR Field Value bool MAX_DISTANCE_AUTOPOS_LIDAR If the distance from teoric position and calculated position from lidar is greater than this value, invalidate autoposition public static int MAX_DISTANCE_AUTOPOS_LIDAR Field Value int MAX_DISTANCE_FORWARD_CONSEC maximum distance travelled in a straight line, once this distance has been travelled the robot performs position checks public static int MAX_DISTANCE_FORWARD_CONSEC Field Value int MAX_DISTANCE_LIDAR Max distance valid for lidar public static int MAX_DISTANCE_LIDAR Field Value int MESSAGGIO_AVVIO public static string MESSAGGIO_AVVIO Field Value string MESSAGGIO_AVVIO_COMPLETATO public static string MESSAGGIO_AVVIO_COMPLETATO Field Value string MESSAGGIO_RICARICA public static string MESSAGGIO_RICARICA Field Value string MIN_DISTANCE_LIDAR Min distance valid for lidar public static int MIN_DISTANCE_LIDAR Field Value int MIN_STEP_FOR_FINDPATH min step use for pathfinding public static int MIN_STEP_FOR_FINDPATH Field Value int MIN_STEP_FOR_WEIGHTPATH Each time an obstacle is detected, the weight of the point where the obstacle was detected is increased by this value public static int MIN_STEP_FOR_WEIGHTPATH Field Value int ORIENTATION_LIDAR orientation of the lidar sensor relative to the zero of the robot public static int ORIENTATION_LIDAR Field Value int PERC_POINT_OVERLAP_AUTOPOS_LIDAR Used for autoposition , if percentage of ovelapping point finded from lidar are greter then this percentage , calculate autoposition public static int PERC_POINT_OVERLAP_AUTOPOS_LIDAR Field Value int PointRecharge Point where the charging base is positioned public static RPoint PointRecharge Field Value RPoint PointStartRecharge point where the robot begins to approach the charging base public static RPoint PointStartRecharge Field Value RPoint WIDHT_MAP max width of map in cm public static int WIDHT_MAP Field Value int Properties DxLedColorRecharge public static Rgba32 DxLedColorRecharge { get; } Property Value Rgba32 DxLedTolleranceRecharge public static Rgba32 DxLedTolleranceRecharge { get; } Property Value Rgba32 FrontLedColorRecharge public static Rgba32 FrontLedColorRecharge { get; } Property Value Rgba32 FrontLedTolleranceRecharge public static Rgba32 FrontLedTolleranceRecharge { get; } Property Value Rgba32 SxLedColorRecharge public static Rgba32 SxLedColorRecharge { get; } Property Value Rgba32 SxLedTolleranceRecharge public static Rgba32 SxLedTolleranceRecharge { get; } Property Value Rgba32"
  },
  "api/MainRobot.ServiceRegistration.html": {
    "href": "api/MainRobot.ServiceRegistration.html",
    "title": "Class ServiceRegistration | SCRAP.Net",
    "keywords": "Class ServiceRegistration Namespace MainRobot Assembly MainRobot.dll public static class ServiceRegistration Inheritance object ServiceRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Register(IServiceCollection) public static void Register(IServiceCollection services) Parameters services IServiceCollection"
  },
  "api/MainRobot.StatusFile.html": {
    "href": "api/MainRobot.StatusFile.html",
    "title": "Class StatusFile | SCRAP.Net",
    "keywords": "Class StatusFile Namespace MainRobot Assembly MainRobot.dll public class StatusFile Inheritance object StatusFile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Angle public int Angle { get; set; } Property Value int AngleStartRecharge public int AngleStartRecharge { get; set; } Property Value int PointStartRecharge public RPoint PointStartRecharge { get; set; } Property Value RPoint X public int X { get; set; } Property Value int Y public int Y { get; set; } Property Value int"
  },
  "api/MainRobot.StatusLogInfo.html": {
    "href": "api/MainRobot.StatusLogInfo.html",
    "title": "Class StatusLogInfo | SCRAP.Net",
    "keywords": "Class StatusLogInfo Namespace MainRobot Assembly MainRobot.dll public class StatusLogInfo Inheritance object StatusLogInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EnableMoviment public bool EnableMoviment { get; set; } Property Value bool Path public List<RPoint> Path { get; set; } Property Value List<RPoint> Rele1Active public bool Rele1Active { get; set; } Property Value bool Rele2Active public bool Rele2Active { get; set; } Property Value bool"
  },
  "api/MainRobot.StatusRobot.html": {
    "href": "api/MainRobot.StatusRobot.html",
    "title": "Class StatusRobot | SCRAP.Net",
    "keywords": "Class StatusRobot Namespace MainRobot Assembly MainRobot.dll public static class StatusRobot Inheritance object StatusRobot Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentAngle public static int CurrentAngle { get; set; } Property Value int CurrentPosition public static RPoint CurrentPosition { get; set; } Property Value RPoint FakeMoviment public static bool FakeMoviment { get; set; } Property Value bool IsInMoviment public static bool IsInMoviment { get; set; } Property Value bool IsInRecharge public static bool IsInRecharge { get; set; } Property Value bool LowBattery public static bool LowBattery { get; set; } Property Value bool Navigating public static bool Navigating { get; set; } Property Value bool NavigatingToRecharge public static bool NavigatingToRecharge { get; set; } Property Value bool Methods InitStatus() public static void InitStatus() UpdateStatus(StatusFile) public static void UpdateStatus(StatusFile statusFile = null) Parameters statusFile StatusFile"
  },
  "api/MainRobot.TTS.ITextToSpeach.html": {
    "href": "api/MainRobot.TTS.ITextToSpeach.html",
    "title": "Interface ITextToSpeach | SCRAP.Net",
    "keywords": "Interface ITextToSpeach Namespace MainRobot.TTS Assembly MainRobot.dll public interface ITextToSpeach Methods TalkAsync(string) void TalkAsync(string textToSpeach) Parameters textToSpeach string"
  },
  "api/MainRobot.TTS.TextToSpeach.html": {
    "href": "api/MainRobot.TTS.TextToSpeach.html",
    "title": "Class TextToSpeach | SCRAP.Net",
    "keywords": "Class TextToSpeach Namespace MainRobot.TTS Assembly MainRobot.dll public class TextToSpeach : ITextToSpeach Inheritance object TextToSpeach Implements ITextToSpeach Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TextToSpeach(IWebSocketServer) public TextToSpeach(IWebSocketServer webSocket) Parameters webSocket IWebSocketServer Methods TalkAsync(string) public void TalkAsync(string textToSpeach) Parameters textToSpeach string"
  },
  "api/MainRobot.TTS.html": {
    "href": "api/MainRobot.TTS.html",
    "title": "Namespace MainRobot.TTS | SCRAP.Net",
    "keywords": "Namespace MainRobot.TTS Classes TextToSpeach Interfaces ITextToSpeach"
  },
  "api/MainRobot.WebSocketServer.IWebSocketServer.html": {
    "href": "api/MainRobot.WebSocketServer.IWebSocketServer.html",
    "title": "Interface IWebSocketServer | SCRAP.Net",
    "keywords": "Interface IWebSocketServer Namespace MainRobot.WebSocketServer Assembly MainRobot.dll public interface IWebSocketServer Methods Connected() bool Connected() Returns bool Echo() Task Echo() Returns Task Init() Task Init() Returns Task SendAsync(WebSocketOutputData) Task SendAsync(WebSocketOutputData outputdata) Parameters outputdata WebSocketOutputData Returns Task SendWithResponseAsync(WebSocketOutputData) Task<string?> SendWithResponseAsync(WebSocketOutputData message) Parameters message WebSocketOutputData Returns Task<string> SetHandler(IWebSocketHandler) void SetHandler(IWebSocketHandler handler) Parameters handler IWebSocketHandler"
  },
  "api/MainRobot.WebSocketServer.WebSocketServer.html": {
    "href": "api/MainRobot.WebSocketServer.WebSocketServer.html",
    "title": "Class WebSocketServer | SCRAP.Net",
    "keywords": "Class WebSocketServer Namespace MainRobot.WebSocketServer Assembly MainRobot.dll public class WebSocketServer : IWebSocketServer Inheritance object WebSocketServer Implements IWebSocketServer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WebSocketServer() public WebSocketServer() Methods Connected() public bool Connected() Returns bool Echo() public Task Echo() Returns Task Init() public Task Init() Returns Task SendAsync(WebSocketOutputData) public Task SendAsync(WebSocketOutputData message) Parameters message WebSocketOutputData Returns Task SendWithResponseAsync(WebSocketOutputData) public Task<string?> SendWithResponseAsync(WebSocketOutputData message) Parameters message WebSocketOutputData Returns Task<string> SetHandler(IWebSocketHandler) public void SetHandler(IWebSocketHandler handler) Parameters handler IWebSocketHandler"
  },
  "api/MainRobot.WebSocketServer.html": {
    "href": "api/MainRobot.WebSocketServer.html",
    "title": "Namespace MainRobot.WebSocketServer | SCRAP.Net",
    "keywords": "Namespace MainRobot.WebSocketServer Classes WebSocketServer Interfaces IWebSocketServer"
  },
  "api/MainRobot.html": {
    "href": "api/MainRobot.html",
    "title": "Namespace MainRobot | SCRAP.Net",
    "keywords": "Namespace MainRobot Classes Configuration Program RobotConfiguration ServiceRegistration StatusFile StatusLogInfo StatusRobot"
  },
  "api/Robot.Common.CommandJson.html": {
    "href": "api/Robot.Common.CommandJson.html",
    "title": "Class CommandJson | SCRAP.Net",
    "keywords": "Class CommandJson Namespace Robot.Common Assembly Robot.Common.dll public class CommandJson Inheritance object CommandJson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Command public string Command { get; set; } Property Value string"
  },
  "api/Robot.Common.IO.FileMonitor-1.FileChangedEventHandler.html": {
    "href": "api/Robot.Common.IO.FileMonitor-1.FileChangedEventHandler.html",
    "title": "Delegate FileMonitor<T>.FileChangedEventHandler | SCRAP.Net",
    "keywords": "Delegate FileMonitor<T>.FileChangedEventHandler Namespace Robot.Common.IO Assembly Robot.Common.dll public delegate void FileMonitor<T>.FileChangedEventHandler(object sender, T json) Parameters sender object json T"
  },
  "api/Robot.Common.IO.FileMonitor-1.html": {
    "href": "api/Robot.Common.IO.FileMonitor-1.html",
    "title": "Class FileMonitor<T> | SCRAP.Net",
    "keywords": "Class FileMonitor<T> Namespace Robot.Common.IO Assembly Robot.Common.dll public class FileMonitor<T> where T : class Type Parameters T Inheritance object FileMonitor<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FileMonitor(string, string) public FileMonitor(string path, string file) Parameters path string file string Methods Start() public void Start() Stop() public void Stop() Events FileChanged public event FileMonitor<T>.FileChangedEventHandler FileChanged Event Type FileMonitor<T>.FileChangedEventHandler"
  },
  "api/Robot.Common.IO.html": {
    "href": "api/Robot.Common.IO.html",
    "title": "Namespace Robot.Common.IO | SCRAP.Net",
    "keywords": "Namespace Robot.Common.IO Classes FileMonitor<T> Delegates FileMonitor<T>.FileChangedEventHandler"
  },
  "api/Robot.Common.html": {
    "href": "api/Robot.Common.html",
    "title": "Namespace Robot.Common | SCRAP.Net",
    "keywords": "Namespace Robot.Common Classes CommandJson"
  },
  "api/Robot.Robot.Device.FakeArduino.FakeArduino.html": {
    "href": "api/Robot.Robot.Device.FakeArduino.FakeArduino.html",
    "title": "Class FakeArduino | SCRAP.Net",
    "keywords": "Class FakeArduino Namespace Robot.Robot.Device.FakeArduino Assembly MainRobot.dll public class FakeArduino : IFakeArduino Inheritance object FakeArduino Implements IFakeArduino Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FakeArduino(string?) public FakeArduino(string? fixedResponse = null) Parameters fixedResponse string Methods OpenSerial(Action<string>) public void OpenSerial(Action<string> dataReceivedHandler) Parameters dataReceivedHandler Action<string> WriteLine(string) public void WriteLine(string message) Parameters message string"
  },
  "api/Robot.Robot.Device.FakeArduino.FakeRemoteArduino.html": {
    "href": "api/Robot.Robot.Device.FakeArduino.FakeRemoteArduino.html",
    "title": "Class FakeRemoteArduino | SCRAP.Net",
    "keywords": "Class FakeRemoteArduino Namespace Robot.Robot.Device.FakeArduino Assembly MainRobot.dll public class FakeRemoteArduino : IFakeArduino Inheritance object FakeRemoteArduino Implements IFakeArduino Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FakeRemoteArduino() public FakeRemoteArduino() Methods OpenSerial(Action<string>) public void OpenSerial(Action<string> dataReceivedHandler) Parameters dataReceivedHandler Action<string> WriteLine(string) public void WriteLine(string message) Parameters message string"
  },
  "api/Robot.Robot.Device.FakeArduino.IFakeArduino.html": {
    "href": "api/Robot.Robot.Device.FakeArduino.IFakeArduino.html",
    "title": "Interface IFakeArduino | SCRAP.Net",
    "keywords": "Interface IFakeArduino Namespace Robot.Robot.Device.FakeArduino Assembly MainRobot.dll public interface IFakeArduino Methods OpenSerial(Action<string>) void OpenSerial(Action<string> dataReceivedHandler) Parameters dataReceivedHandler Action<string> WriteLine(string) void WriteLine(string message) Parameters message string"
  },
  "api/Robot.Robot.Device.FakeArduino.StatusRobotArdu.html": {
    "href": "api/Robot.Robot.Device.FakeArduino.StatusRobotArdu.html",
    "title": "Class StatusRobotArdu | SCRAP.Net",
    "keywords": "Class StatusRobotArdu Namespace Robot.Robot.Device.FakeArduino Assembly MainRobot.dll public static class StatusRobotArdu Inheritance object StatusRobotArdu Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FakeMoviment public static bool FakeMoviment { get; set; } Property Value bool Rele1 public static bool Rele1 { get; set; } Property Value bool Rele2 public static bool Rele2 { get; set; } Property Value bool"
  },
  "api/Robot.Robot.Device.FakeArduino.html": {
    "href": "api/Robot.Robot.Device.FakeArduino.html",
    "title": "Namespace Robot.Robot.Device.FakeArduino | SCRAP.Net",
    "keywords": "Namespace Robot.Robot.Device.FakeArduino Classes FakeArduino FakeRemoteArduino StatusRobotArdu Interfaces IFakeArduino"
  },
  "api/Robot.Test.AstarTest.html": {
    "href": "api/Robot.Test.AstarTest.html",
    "title": "Class AstarTest | SCRAP.Net",
    "keywords": "Class AstarTest Namespace Robot.Test Assembly Robot.Test.dll public class AstarTest Inheritance object AstarTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ObstacleEncounterd() [Test] public void ObstacleEncounterd() OneTimeSetUp() [OneTimeSetUp] public void OneTimeSetUp() Setup() [SetUp] public void Setup() TestAstar() [Test] public Task TestAstar() Returns Task"
  },
  "api/Robot.Test.ComunicationTest.html": {
    "href": "api/Robot.Test.ComunicationTest.html",
    "title": "Class ComunicationTest | SCRAP.Net",
    "keywords": "Class ComunicationTest Namespace Robot.Test Assembly Robot.Test.dll public class ComunicationTest Inheritance object ComunicationTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OneTimeSetUp() [OneTimeSetUp] public void OneTimeSetUp() Setup() [SetUp] public void Setup() TestDisableRele1() [Test] public Task TestDisableRele1() Returns Task TestOverflowTimeout() Simula che arduino non risponda mai [Test] public Task TestOverflowTimeout() Returns Task TestTooManyRequestNotification() Simula che arduino non riceva mai la notifica e la richiede sempre [Test] public Task TestTooManyRequestNotification() Returns Task TestTwoTimeConcurrentDisableRele1() [Test] public Task TestTwoTimeConcurrentDisableRele1() Returns Task TestTwoTimeDisableRele1() [Test] public Task TestTwoTimeDisableRele1() Returns Task"
  },
  "api/Robot.Test.ImageUtilityTest.html": {
    "href": "api/Robot.Test.ImageUtilityTest.html",
    "title": "Class ImageUtilityTest | SCRAP.Net",
    "keywords": "Class ImageUtilityTest Namespace Robot.Test Assembly Robot.Test.dll public class ImageUtilityTest Inheritance object ImageUtilityTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OneTimeSetUp() [OneTimeSetUp] public void OneTimeSetUp() Setup() [SetUp] public void Setup() TestAstar() [Test] public Task TestAstar() Returns Task"
  },
  "api/Robot.Test.IpCamTest.html": {
    "href": "api/Robot.Test.IpCamTest.html",
    "title": "Class IpCamTest | SCRAP.Net",
    "keywords": "Class IpCamTest Namespace Robot.Test Assembly Robot.Test.dll public class IpCamTest Inheritance object IpCamTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OneTimeSetUp() [OneTimeSetUp] public void OneTimeSetUp() Setup() [SetUp] public void Setup() TryFindPointOfColorCentral() [Test] public Task TryFindPointOfColorCentral() Returns Task"
  },
  "api/Robot.Test.MathUtilityTest.html": {
    "href": "api/Robot.Test.MathUtilityTest.html",
    "title": "Class MathUtilityTest | SCRAP.Net",
    "keywords": "Class MathUtilityTest Namespace Robot.Test Assembly Robot.Test.dll public class MathUtilityTest Inheritance object MathUtilityTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DifferenceTwoAngleZero() [Test] public Task DifferenceTwoAngleZero() Returns Task OneTimeSetUp() [OneTimeSetUp] public void OneTimeSetUp() Setup() [SetUp] public void Setup()"
  },
  "api/Robot.Test.MovementTest.html": {
    "href": "api/Robot.Test.MovementTest.html",
    "title": "Class MovementTest | SCRAP.Net",
    "keywords": "Class MovementTest Namespace Robot.Test Assembly Robot.Test.dll public class MovementTest Inheritance object MovementTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OneTimeSetUp() [OneTimeSetUp] public void OneTimeSetUp() Setup() [SetUp] public void Setup() TestForward() [Test] public Task TestForward() Returns Task TestForwardWithObstacleFixed() [Test] public Task TestForwardWithObstacleFixed() Returns Task TestObstacleFinded() [Test] public Task TestObstacleFinded() Returns Task TestStop() [Test] public Task TestStop() Returns Task TestTurnLeft() [Test] public Task TestTurnLeft() Returns Task TestTurnRight() [Test] public Task TestTurnRight() Returns Task"
  },
  "api/Robot.Test.NavigationRecharge.html": {
    "href": "api/Robot.Test.NavigationRecharge.html",
    "title": "Class NavigationRecharge | SCRAP.Net",
    "keywords": "Class NavigationRecharge Namespace Robot.Test Assembly Robot.Test.dll public class NavigationRecharge Inheritance object NavigationRecharge Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OneTimeSetUp() [OneTimeSetUp] public void OneTimeSetUp() Setup() [SetUp] public void Setup() StartApproach() [Test] public Task StartApproach() Returns Task TestCenterOnBaseLateralLed() [Test] public Task TestCenterOnBaseLateralLed() Returns Task TestCenterOnBaseLateralLed1() [Test] public Task TestCenterOnBaseLateralLed1() Returns Task TestRotateToFindCentralLed() [Test] public Task TestRotateToFindCentralLed() Returns Task TestStartPositioningInRecharge() [Test] public Task TestStartPositioningInRecharge() Returns Task TestStartPositioningInRecharge1() [Test] public Task TestStartPositioningInRecharge1() Returns Task centerOnBaseChargeDirection() [Test] public Task centerOnBaseChargeDirection() Returns Task centerOnBaseChargeDirectionOk() [Test] public Task centerOnBaseChargeDirectionOk() Returns Task centerOnBaseChargeDirectionOk1() [Test] public Task centerOnBaseChargeDirectionOk1() Returns Task"
  },
  "api/Robot.Test.NavigationTest.html": {
    "href": "api/Robot.Test.NavigationTest.html",
    "title": "Class NavigationTest | SCRAP.Net",
    "keywords": "Class NavigationTest Namespace Robot.Test Assembly Robot.Test.dll public class NavigationTest Inheritance object NavigationTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OneTimeSetUp() [OneTimeSetUp] public void OneTimeSetUp() Setup() [SetUp] public void Setup() TestNavigation1() [Test] public Task TestNavigation1() Returns Task TestNavigation2() [Test] public Task TestNavigation2() Returns Task TestNavigation3() [Test] public Task TestNavigation3() Returns Task TestNavigation4() [Test] public Task TestNavigation4() Returns Task TestNavigation5() [Test] public Task TestNavigation5() Returns Task TestNavigation6() [Test] public Task TestNavigation6() Returns Task"
  },
  "api/Robot.Test.html": {
    "href": "api/Robot.Test.html",
    "title": "Namespace Robot.Test | SCRAP.Net",
    "keywords": "Namespace Robot.Test Classes AstarTest ComunicationTest ImageUtilityTest IpCamTest MathUtilityTest MovementTest NavigationRecharge NavigationTest"
  },
  "api/WinFormsApp1.Form1.html": {
    "href": "api/WinFormsApp1.Form1.html",
    "title": "Class Form1 | SCRAP.Net",
    "keywords": "Class Form1 Namespace WinFormsApp1 Assembly WindowFormRobotEmulator.dll public class Form1 : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form Form1 Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Form1() public Form1() Fields BaseUrlService public static string BaseUrlService Field Value string Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false."
  },
  "api/WinFormsApp1.html": {
    "href": "api/WinFormsApp1.html",
    "title": "Namespace WinFormsApp1 | SCRAP.Net",
    "keywords": "Namespace WinFormsApp1 Classes Form1"
  },
  "api/WindowFormRobotEmulator.ArduinoEmulator.html": {
    "href": "api/WindowFormRobotEmulator.ArduinoEmulator.html",
    "title": "Class ArduinoEmulator | SCRAP.Net",
    "keywords": "Class ArduinoEmulator Namespace WindowFormRobotEmulator Assembly WindowFormRobotEmulator.dll public class ArduinoEmulator Inheritance object ArduinoEmulator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ArduinoEmulator() public ArduinoEmulator() Fields arrayObstacle public bool[,] arrayObstacle Field Value bool[,] Properties BatteryLevel public float BatteryLevel { get; set; } Property Value float EnableMoviment public bool EnableMoviment { get; set; } Property Value bool IsInRecharge public bool IsInRecharge { get; set; } Property Value bool ObstacleFind public bool ObstacleFind { get; set; } Property Value bool Rele1 public bool Rele1 { get; set; } Property Value bool Rele2 public bool Rele2 { get; set; } Property Value bool SimulatedAngle public double SimulatedAngle { get; set; } Property Value double SimulatedPosition public RPoint SimulatedPosition { get; set; } Property Value RPoint TeoricAngle public double TeoricAngle { get; set; } Property Value double TeoricPosition public RPoint TeoricPosition { get; set; } Property Value RPoint UpdateSimulatedPosition public Action UpdateSimulatedPosition { get; set; } Property Value Action Methods CalculatePosition(RPoint, double) public void CalculatePosition(RPoint position, double angle) Parameters position RPoint angle double RunCommand(string, bool?) public Task<string> RunCommand(string message, bool? parseOnlyName = null) Parameters message string parseOnlyName bool? Returns Task<string> SimulateForward(ComunicationCommandReceived, bool) public Task<string> SimulateForward(ComunicationCommandReceived cmd, bool back = false) Parameters cmd ComunicationCommandReceived back bool Returns Task<string> SimulateLidar() public Task<string> SimulateLidar() Returns Task<string> SimulateRotate(ComunicationCommandReceived, bool) public Task SimulateRotate(ComunicationCommandReceived cmd, bool left) Parameters cmd ComunicationCommandReceived left bool Returns Task checkFrontalObstacle(int, int, RPoint?) public (string? obs, bool baffo) checkFrontalObstacle(int distance, int remaingDistance, RPoint? point = null) Parameters distance int remaingDistance int point RPoint Returns (string obs, bool baffo)"
  },
  "api/WindowFormRobotEmulator.ControlMove.html": {
    "href": "api/WindowFormRobotEmulator.ControlMove.html",
    "title": "Class ControlMove | SCRAP.Net",
    "keywords": "Class ControlMove Namespace WindowFormRobotEmulator Assembly WindowFormRobotEmulator.dll public class ControlMove : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form ControlMove Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ControlMove() public ControlMove() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false."
  },
  "api/WindowFormRobotEmulator.IdeLidar.html": {
    "href": "api/WindowFormRobotEmulator.IdeLidar.html",
    "title": "Class IdeLidar | SCRAP.Net",
    "keywords": "Class IdeLidar Namespace WindowFormRobotEmulator Assembly WindowFormRobotEmulator.dll public class IdeLidar : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form IdeLidar Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IdeLidar() public IdeLidar() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. FindOrigin(List<(int, float)>) public static RPoint FindOrigin(List<(int, float)> points) Parameters points List<(int, float)> Returns RPoint PolarToCartesian((int, float)) public static RPoint PolarToCartesian((int, float) polar) Parameters polar (int, float) Returns RPoint TrovaPuntiSovrapposti(List<RPoint>, List<RPoint>, int) public List<RPoint> TrovaPuntiSovrapposti(List<RPoint> before, List<RPoint> after, int tolleranza) Parameters before List<RPoint> after List<RPoint> tolleranza int Returns List<RPoint>"
  },
  "api/WindowFormRobotEmulator.Info.html": {
    "href": "api/WindowFormRobotEmulator.Info.html",
    "title": "Class Info | SCRAP.Net",
    "keywords": "Class Info Namespace WindowFormRobotEmulator Assembly WindowFormRobotEmulator.dll public class Info Inheritance object Info Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties data public string data { get; set; } Property Value string message public string message { get; set; } Property Value string"
  },
  "api/WindowFormRobotEmulator.html": {
    "href": "api/WindowFormRobotEmulator.html",
    "title": "Namespace WindowFormRobotEmulator | SCRAP.Net",
    "keywords": "Namespace WindowFormRobotEmulator Classes ArduinoEmulator ControlMove IdeLidar Info"
  },
  "api/WindowFormRobotEmulatorTest.Tests.html": {
    "href": "api/WindowFormRobotEmulatorTest.Tests.html",
    "title": "Class Tests | SCRAP.Net",
    "keywords": "Class Tests Namespace WindowFormRobotEmulatorTest Assembly WindowFormRobotEmulatorTest.dll public class Tests Inheritance object Tests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckBaffiObstacle() Angolo 0 (destra) collisione 300,340 [Test] public Task CheckBaffiObstacle() Returns Task CheckBaffiObstacle1() Angolo 180 (sx) collisione 260,340 [Test] public Task CheckBaffiObstacle1() Returns Task CheckBaffiObstacle2() Angolo 90 (dx) collisione 260,340 [Test] public Task CheckBaffiObstacle2() Returns Task CheckBaffiObstacle3() Angolo 270 (sx) collisione 260,340 [Test] public Task CheckBaffiObstacle3() Returns Task CheckBaffiObstacleZeroDistance() Angolo 0 (destra) collisione 280,320 [Test] public Task CheckBaffiObstacleZeroDistance() Returns Task CheckFrontObstacle() [Test] public Task CheckFrontObstacle() Returns Task CheckSimulateForwardBaffoCollision() [Test] public Task CheckSimulateForwardBaffoCollision() Returns Task CheckSimulateForwardBaffoCollision1() [Test] public Task CheckSimulateForwardBaffoCollision1() Returns Task CheckSimulateForwardSensorCollision1() [Test] public Task CheckSimulateForwardSensorCollision1() Returns Task CheckSimulateForwardZeroDistance() [Test] public Task CheckSimulateForwardZeroDistance() Returns Task Setup() [SetUp] public void Setup()"
  },
  "api/WindowFormRobotEmulatorTest.html": {
    "href": "api/WindowFormRobotEmulatorTest.html",
    "title": "Namespace WindowFormRobotEmulatorTest | SCRAP.Net",
    "keywords": "Namespace WindowFormRobotEmulatorTest Classes Tests"
  },
  "bin/Debug/net7.0/img/readme.html": {
    "href": "bin/Debug/net7.0/img/readme.html",
    "title": "| SCRAP.Net",
    "keywords": "In this folder add the map image. The image must be black and white, where black is the wall and white is the floor."
  },
  "docs-other/com-net-arduino.html": {
    "href": "docs-other/com-net-arduino.html",
    "title": "| SCRAP.Net",
    "keywords": "SCRAP.Net and Arduino Communication Guide Overview SCRAP.Net is the main program that interfaces with the hardware. It breaks down user requests (e.g., \"go to the kitchen\") into a series of commands executed by Arduino. Arduino receives these commands, interfaces with the hardware, and once the command is completed, it responds to SCRAP.Net. This process continues until the initial task is completed. Communication Flow Here's an example of how a command to move forward 10 cm is sent and processed: sequenceDiagram participant Net participant Arduino participant HW Net->>Arduino: Send command forward RPI_105_11_10 Arduino->>HW: Start forward execution HW->>HW: Make moviment HW->>Arduino: Response Arduino ARDU_105_11_$$ Arduino->>Net: Response from arduino Message Format The data transmission format is structured as follows: [sender]_[id]_[IdCommand]_[param1]_[param2]_[param3]_[param4]_[end] Example: RPI_1_11_10_&& The data transmission format was selected to provide compatibility with various protocols, including serial and HTTP. Components: [sender]: Message sender (RPI for SCRAP.Net, ARDU for Arduino) [id]: Auto-incremental command identifier [IdCommand]: ID of the command to send [param1...4]: Optional parameters (arrays are split based on SERIAL_ARRAY_SEPARETOR) [end]: End of message string Configuration These parameters can be configured in the Configuration.cs file: public static string SERIAL_SEPARETOR = \"_\"; public static string SERIAL_ARRAY_SEPARETOR = \";\"; public static string SERIAL_START_MESSAGE_RPI = \"RPI\"; public static string SERIAL_START_MESSAGE_ARDU = \"ARDU\"; public static string SERIAL_END_MESSAGE = \"$$\\r\\n\";` ` IMPORTANT: The same configurations must be implemented in SCRAP.Arduino and must match, otherwise communication will fail. Command Implementation In SCRAP.Net, all Arduino commands are implemented and declared in the CommandComunication class of the MainRobot.Robot.Comunication namespace. List Command Method Name Parameter 1 DisableRele1 05 EnableRele1 06 DisableRele2 07 EnableRele2 08 EnableFakeMoviment 09 Stop 10 Forward 11{Configuration.SERIAL_SEPARETOR}{distance} StartLeftMotor 12{Configuration.SERIAL_SEPARETOR}{angle} StartRightMotor 13{Configuration.SERIAL_SEPARETOR}{angle} Backward 16{Configuration.SERIAL_SEPARETOR}{distance} EnableMoviment 21 DisableMoviment 22 GetLevelOfAlimentation 32 ReadLidar 33 DisableObstacleFind 14 EnableObstacleFind 15 IsInRecharge 17 OutInRecharge 18 GetDistanceFrontSensor 30 GetSourceOfAlimentation 31 MoveServo 40{Configuration.SERIAL_SEPARETOR}{numServo}{Configuration.SERIAL_SEPARETOR}{angle} Always ensure that the configuration in SCRAP.Net and SCRAP.Arduino match. Use meaningful and unique command IDs to avoid confusion."
  },
  "docs-other/emulator.html": {
    "href": "docs-other/emulator.html",
    "title": "SCRAP.Net Emulator Guide | SCRAP.Net",
    "keywords": "SCRAP.Net Emulator Guide Overview The SCRAP.Net emulator is an experimental tool designed to simulate the hardware and asynchronous communication of the robot. It provides a way to test and develop SCRAP.Net functionalities without physical hardware. Important Notes The emulator is experimental and contains test features. Not all functionalities are guaranteed to work perfectly. Configuration To use the emulator, you need to modify the Configuration.cs file in the MainRobot project: public static bool FAKE_HW = true; public static bool FAKE_REMOTE_ARDUINO = true;` These settings enable the use of fake communication classes for the emulator. How It Works When a command is sent, the fake communication class writes it to a file (command.json). The emulator detects the file change, parses, and executes the fake command. Once completed, the emulator writes the response to responseCommand.json. The system reads the response and proceeds with the next command. Note: In debug mode, the main folder is .\\SCRAP.Net\\Robot\\bin\\Debug\\net7.0 Emulator Interface Control Buttons FreePos: Position the robot within the map Cursor: When clicked, simulates movement to the clicked point on the map +InvWall / -InvWall: Add/remove \"invisible wall\" points as obstacles +obs / -obs: Add/remove temporary obstacles (for testing) show: Display obstacles encountered by the robot clear: Remove all temporary obstacles save: Save obstacles added to the map via clicks Other Features w.map: Visualize the weight of detected obstacles in grayscale (best with lidar) Lidar and AutoPosLidar: Experimental Lidar functionality Robot Directory button: Modify the directory where SCRAP.Net runs Command Textbox: Shows the history of commands received from SCRAP.NET Robot Position and Status: Displays current robot information \"Control Move\" Button: Opens a form for manually moving the robot Experimental Features Some buttons and features (like Lidar) are experimental and not final. Use these with caution and expect potential changes or issues."
  },
  "docs-other/getting-started.html": {
    "href": "docs-other/getting-started.html",
    "title": "# Getting Started with SCRAP.Net | SCRAP.Net",
    "keywords": "# Getting Started with SCRAP.Net This guide will walk you through the process of setting up SCRAP.Net on your local machine. SCRAP.Net is a project that simulates robot communication with Arduino using HTTP protocol. Prerequisites Before you begin, ensure you have the following installed: Git Visual Studio 2022 (or newer) with the .NET workload installed .NET Core 7.0 eSpeak Installation Steps 1. Clone the Repository Open a terminal or command prompt. Navigate to the directory where you want to save the project. Run the following command: git clone https://github.com/fra00/SCRAP.Net.git [your_path] Replace [your_path] with your desired directory path. 2. Open the Solution Launch Visual Studio 2022 with administrator privileges. Go to \"File\" -> \"Open\" -> \"Project/Solution\". Navigate to the cloned repository and open the file: [your_path]\\SCRAP.Net\\Robot\\Robot.sln 3. Configure MainRobot Project Edit Configuration.cs Open Configuration.cs in the MainRobot project. Set the full path to eSpeak: public static string PATH_ESPEAK = \"C:\\\\Program Files (x86)\\\\eSpeak\\\\command_line\\\\\"; Modify eSpeak TTS configuration arguments: public static string ARGUMENTS_ESPEAK = \"-v it -p 20 \\\"[@textToSpeach]\\\"\"; Note: -v it changes the language to Italian. Remove it for English. Set the Arduino device IP (for emulator, leave as is): public static string HTTP_URL_COMUNICATION = \"http://192.168.1.238/?cmdData=\"; Enable hardware simulation and remote Arduino simulation: public static bool FAKE_HW = true; public static bool FAKE_REMOTE_ARDUINO = true; Edit RobotConfiguration.cs Open RobotConfiguration.cs in the MainRobot project. Specify the path to load the map: public static string MAP_FILE_NAME = \"img//mappaMuri.png\"; Set the maximum dimensions of the floor plan in cm: public static int WIDHT_MAP = 1000; public static int HEIGHT_MAP = 1000; Set the robot's dimensions in cm: public static int HALF_WIDTH_ROBOT = 15; public static int HALF_HEIGHT_ROBOT = 15; Leave the minimum movement size unchanged: public static int MIN_STEP_FOR_FINDPATH = 10; Creating the Map The map is a crucial element that you, as the user, need to create. It's used to support the lidar and sensors, and helps speed up pathfinding. Here's how to create and configure the map: Map Creation Guidelines Format: The map should be a PNG image in black and white. Content: Black areas represent walls or obstacles. White areas represent the floor or navigable space. Dimensions: The image size should be calculated based on the WIDHT_MAP and HEIGHT_MAP properties in RobotConfiguration.cs. In the current configuration, one pixel corresponds to one centimeter. Creation Tool: You can use any graphic editor to create this map. Steps to Create and Configure the Map Create a black and white PNG image representing your environment. Ensure the dimensions match your WIDHT_MAP and HEIGHT_MAP settings. Save the map file in your project directory, typically in an img folder. Update the MAP_FILE_NAME in RobotConfiguration.cs: public static string MAP_FILE_NAME = \"img//yourMapFileName.png\"; Ensure the WIDHT_MAP and HEIGHT_MAP properties in RobotConfiguration.cs match your map's dimensions in centimeters: public static int WIDHT_MAP = 1000; // if your map is 1000 pixels wide public static int HEIGHT_MAP = 1000; // if your map is 1000 pixels tall Adjust the robot's dimensions if necessary: public static int HALF_WIDTH_ROBOT = 15; public static int HALF_HEIGHT_ROBOT = 15; Remember, the accuracy of your map will directly impact the performance of the pathfinding algorithm and the overall simulation. Configure the Emulator Right-click on the WindowFormRobotEmulator project and select \"Properties\". Go to the \"Resources\" section. Update the map file resource (.png). Modify the path where SCRAP.NET is executed (should be the bin folder of the MainRobot project). Run the Projects Right-click on WindowFormRobotEmulator -> Debug -> Start New Instance Right-click on MainRobot -> Debug -> Start New Instance Verification If everything is set up correctly: A shell should open, executing a series of commands. The emulator should launch. You should see a console window with various commands being executed, and the emulator interface should appear."
  },
  "docs-other/index.html": {
    "href": "docs-other/index.html",
    "title": "This is the Doc home page**. | SCRAP.Net",
    "keywords": "This is the Doc home page**. Refer to Markdown for how to write markdown files. the images folder if the file is referencing an image."
  },
  "docs-other/introduction.html": {
    "href": "docs-other/introduction.html",
    "title": "Introduction | SCRAP.Net",
    "keywords": "Introduction SCRAP is a modular software platform, specifically designed for the development of autonomous robotic systems. Its distributed and scalable architecture allows it to handle a wide range of complexities, from automating simple household tasks. System Architecture SCRAP is structured into three main modules, each with a well-defined role: SCRAP.Android: Acts as the user interface, providing an intuitive API for human interaction. The Android app includes speech-to-text (STT) functionality for more natural interaction and a graphical user interface for viewing the robot's status and configuring parameters. SCRAP.Net: The computational heart of the platform. It implements: Motion planning: Uses advanced pathfinding algorithms (A*) to generate optimal paths in dynamic and static environments, considering constraints of space, time, and energy. Environment interaction: Handles perception of the environment through sensors (LiDAR, cameras, etc.) and physical interaction with it through actuators (motors, grippers, etc.). Communications: Uses communication protocols (WebSocket, HTTP) to exchange data with other modules and external systems. LLM interface: Integrates large language models to interpret natural language commands and generate complex actions. SCRAP.Arduino: The module dedicated to interfacing with the robot's hardware. Manages communication with microcontrollers (typically Arduino) and connected sensors/actuators. Provides a simplified API to control hardware devices and acquire data from sensors. Command Execution Flow User request: The user sends a command through the Android interface. Command processing: SCRAP.Net receives the command and analyzes it. Planning: The actions necessary to execute the command are planned, taking into account the current state of the robot and the surrounding environment. Execution: Commands are sent to SCRAP.Arduino, which executes them directly on the hardware. Feedback: The robot sends feedback on the execution status to SCRAP.Net, which in turn communicates it to the Android interface. Environment Mapping and Navigation SCRAP.Net uses algorithms to build detailed maps of the environment in real time. Maps are used for: Localization: Determining the robot's exact position in space. Navigation: Planning safe and efficient paths, avoiding static and dynamic obstacles. Odometry: Estimating the robot's displacement based on sensor readings. Hardware Emulator The emulator integrated into SCRAP.Net allows you to simulate the behavior of the robot in a virtual environment. This feature is essential for developing, debugging, and testing new algorithms and functionalities, without the need for a physical robot. Technologies Used SCRAP.Net: C# and .NET Core for portability and performance. SCRAP.Android: Kotlin for Android app development. SCRAP.Arduino: C++ for programming Arduino microcontrollers. Communications: WebSocket, HTTP, serial. Motion planning: A*."
  },
  "img/readme.html": {
    "href": "img/readme.html",
    "title": "| SCRAP.Net",
    "keywords": "In this folder add the map image. The image must be black and white, where black is the wall and white is the floor."
  },
  "index.html": {
    "href": "index.html",
    "title": "SCRAP.Net: Control and Planning Platform for Robotic Systems | SCRAP.Net",
    "keywords": "SCRAP.Net: Control and Planning Platform for Robotic Systems SCRAP.Net is the core module of the SCRAP platform, designed to provide a flexible architecture for developing autonomous robotic systems. It offers a wide range of features for motion planning, environment interaction, and sensor and actuator integration. sequenceDiagram participant Android participant Net participant Arduino participant LLM Android->>Net: Natural Language Net->>LLM: Send Natural Language LLM->>Net: Response commands Net->>Arduino: Send command Arduino->>Net: Response command Net->>Android: Response request Key Features: Built with .NET Core. Cross-platform Compatibility: Runs seamlessly on both Windows and Linux operating systems. Advanced Motion Planning: Efficient pathfinding algorithms for navigation in static and dynamic environments. Handling complex constraints and obstacles. Optimization of paths based on time, energy, or safety criteria. LLM Interface: Integration with large language models for natural language understanding and context-aware response generation. Interpretation of complex commands and generation of appropriate actions. Modular Architecture: Modular structure that facilitates system expansion and customization. Support for a wide range of sensors and actuators. Accurate environment mapping: Using LIDAR and ultrasonic sensors to create maps of the surrounding environment, enabling robot localization and safer navigation. Communications: Communication protocols for synchronization between system components (serial,http). Well-defined APIs: RESTful APIs for access to SCRAP.Net features from other systems. Benefits: Accelerated Development: Reduction in the time required to develop and test new robotic systems. Increased Flexibility: Easy adaptation to new applications and requirements. Improved Performance: Optimization of robot performance through advanced planning and control algorithms. SCRAP.Net offers developers a solid foundation for creating intelligent and reliable robotic systems."
  },
  "readme.html": {
    "href": "readme.html",
    "title": "| SCRAP.Net",
    "keywords": "Doc generation The documentation is genareted with https://dotnet.github.io/docfx/ To show documentation on local server run docfx docfx.json --serve"
  }
}